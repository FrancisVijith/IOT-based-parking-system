

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 07 16:55:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185                           
   186                           	psect	idataBANK0
   187  0413                     __pidataBANK0:	
   188                           
   189                           ;initializer for __esp8266_waitResponse@F1101
   190  0413  343A               	retlw	low (STR_8| (0+32768))
   191  0414  3489               	retlw	high (STR_8| (0+32768))
   192  0415  340E               	retlw	low (STR_32| (0+32768))
   193  0416  3489               	retlw	high (STR_32| (0+32768))
   194  0417  341E               	retlw	low (STR_33| (0+32768))
   195  0418  3489               	retlw	high (STR_33| (0+32768))
   196  0419  34DF               	retlw	low (STR_34| (0+32768))
   197  041A  3488               	retlw	high (STR_34| (0+32768))
   198  041B  34FA               	retlw	low (STR_35| (0+32768))
   199  041C  3488               	retlw	high (STR_35| (0+32768))
   200  041D  3401               	retlw	low (STR_36| (0+32768))
   201  041E  3489               	retlw	high (STR_36| (0+32768))
   202                           
   203                           	psect	stringtext
   204  0800                     __pstringtext:	
   205  0800                     stringtab:	
   206  0800                     __stringtab:	
   207                           
   208                           ;	String table - string pointers are 2 bytes each
   209  0800  1BFF               	btfsc	btemp+1,7
   210  0801  280A               	ljmp	stringcode
   211  0802  1383               	bcf	3,7
   212  0803  187F               	btfsc	btemp+1,0
   213  0804  1783               	bsf	3,7
   214  0805  0800               	movf	0,w
   215  0806  0A84               	incf	4,f
   216  0807  1903               	skipnz
   217  0808  0AFF               	incf	btemp+1,f
   218  0809  0008               	return
   219  080A                     stringcode:	
   220  080A  087F               	movf	btemp+1,w
   221  080B  397F               	andlw	127
   222  080C  008A               	movwf	10
   223  080D  0804               	movf	4,w
   224  080E  0A84               	incf	4,f
   225  080F  1903               	skipnz
   226  0810  0AFF               	incf	btemp+1,f
   227  0811  0082               	movwf	2
   228  0812                     __stringbase:	
   229  0812                     __end_of__stringtab:	
   230  0812                     __esp8266_waitResponse@responses:	
   231  0812  3401               	retlw	1
   232  0813  3402               	retlw	2
   233  0814  3403               	retlw	3
   234  0815  3404               	retlw	4
   235  0816  3405               	retlw	5
   236  0817  3406               	retlw	6
   237  0818                     __end_of__esp8266_waitResponse@responses:	
   238  0818                     __esp8266_waitResponse@lengths:	
   239  0818  3402               	retlw	2
   240  0819  3405               	retlw	5
   241  081A  3404               	retlw	4
   242  081B  3409               	retlw	9
   243  081C  3406               	retlw	6
   244  081D  3406               	retlw	6
   245  081E                     __end_of__esp8266_waitResponse@lengths:	
   246  001A                     _RCREG	set	26
   247  0019                     _TXREG	set	25
   248  0065                     _RCIF	set	101
   249  00C1                     _OERR	set	193
   250  0064                     _TXIF	set	100
   251  00C6                     _RX9	set	198
   252  00C4                     _CREN	set	196
   253  00C7                     _SPEN	set	199
   254  0043                     _RD3	set	67
   255  0042                     _RD2	set	66
   256  0047                     _RD7	set	71
   257  0046                     _RD6	set	70
   258  0045                     _RD5	set	69
   259  0044                     _RD4	set	68
   260  0088                     _TRISD	set	136
   261  0099                     _SPBRG	set	153
   262  04C6                     _TX9	set	1222
   263  04C5                     _TXEN	set	1221
   264  04C4                     _SYNC	set	1220
   265  04C2                     _BRGH	set	1218
   266  043F                     _TRISC7	set	1087
   267  043E                     _TRISC6	set	1086
   268  081E                     STR_40:	
   269  081E  3445               	retlw	69	;'E'
   270  081F  3453               	retlw	83	;'S'
   271  0820  3450               	retlw	80	;'P'
   272  0821  3420               	retlw	32	;' '
   273  0822  3469               	retlw	105	;'i'
   274  0823  3473               	retlw	115	;'s'
   275  0824  3420               	retlw	32	;' '
   276  0825  3463               	retlw	99	;'c'
   277  0826  346F               	retlw	111	;'o'
   278  0827  346E               	retlw	110	;'n'
   279  0828  346E               	retlw	110	;'n'
   280  0829  3465               	retlw	101	;'e'
   281  082A  3463               	retlw	99	;'c'
   282  082B  3474               	retlw	116	;'t'
   283  082C  3465               	retlw	101	;'e'
   284  082D  3464               	retlw	100	;'d'
   285  082E  3400               	retlw	0
   286  082F                     STR_38:	
   287  082F  3450               	retlw	80	;'P'
   288  0830  3441               	retlw	65	;'A'
   289  0831  3452               	retlw	82	;'R'
   290  0832  344B               	retlw	75	;'K'
   291  0833  3449               	retlw	73	;'I'
   292  0834  344E               	retlw	78	;'N'
   293  0835  3447               	retlw	71	;'G'
   294  0836  3420               	retlw	32	;' '
   295  0837  3453               	retlw	83	;'S'
   296  0838  3459               	retlw	89	;'Y'
   297  0839  3453               	retlw	83	;'S'
   298  083A  3454               	retlw	84	;'T'
   299  083B  3445               	retlw	69	;'E'
   300  083C  344D               	retlw	77	;'M'
   301  083D  3400               	retlw	0
   302  083E                     STR_18:	
   303  083E  3441               	retlw	65	;'A'
   304  083F  3454               	retlw	84	;'T'
   305  0840  342B               	retlw	43	;'+'
   306  0841  3443               	retlw	67	;'C'
   307  0842  3449               	retlw	73	;'I'
   308  0843  3450               	retlw	80	;'P'
   309  0844  3453               	retlw	83	;'S'
   310  0845  3454               	retlw	84	;'T'
   311  0846  3441               	retlw	65	;'A'
   312  0847  3452               	retlw	82	;'R'
   313  0848  3454               	retlw	84	;'T'
   314  0849  343D               	retlw	61	;'='
   315  084A  3422               	retlw	34	;'"'
   316  084B  3400               	retlw	0
   317  084C                     STR_41:	
   318  084C  3445               	retlw	69	;'E'
   319  084D  3453               	retlw	83	;'S'
   320  084E  3450               	retlw	80	;'P'
   321  084F  3420               	retlw	32	;' '
   322  0850  3473               	retlw	115	;'s'
   323  0851  3465               	retlw	101	;'e'
   324  0852  3474               	retlw	116	;'t'
   325  0853  3420               	retlw	32	;' '
   326  0854  3461               	retlw	97	;'a'
   327  0855  3473               	retlw	115	;'s'
   328  0856  3420               	retlw	32	;' '
   329  0857  3441               	retlw	65	;'A'
   330  0858  3450               	retlw	80	;'P'
   331  0859  3400               	retlw	0
   332  085A                     STR_37:	
   333  085A  3449               	retlw	73	;'I'
   334  085B  344F               	retlw	79	;'O'
   335  085C  3454               	retlw	84	;'T'
   336  085D  3420               	retlw	32	;' '
   337  085E  3442               	retlw	66	;'B'
   338  085F  3441               	retlw	65	;'A'
   339  0860  3453               	retlw	83	;'S'
   340  0861  3445               	retlw	69	;'E'
   341  0862  3444               	retlw	68	;'D'
   342  0863  3420               	retlw	32	;' '
   343  0864  3443               	retlw	67	;'C'
   344  0865  3441               	retlw	65	;'A'
   345  0866  3452               	retlw	82	;'R'
   346  0867  3400               	retlw	0
   347  0868                     STR_44:	
   348  0868  3441               	retlw	65	;'A'
   349  0869  3450               	retlw	80	;'P'
   350  086A  3420               	retlw	32	;' '
   351  086B  3463               	retlw	99	;'c'
   352  086C  346F               	retlw	111	;'o'
   353  086D  346E               	retlw	110	;'n'
   354  086E  3466               	retlw	102	;'f'
   355  086F  3469               	retlw	105	;'i'
   356  0870  3467               	retlw	103	;'g'
   357  0871  3475               	retlw	117	;'u'
   358  0872  3472               	retlw	114	;'r'
   359  0873  3465               	retlw	101	;'e'
   360  0874  3464               	retlw	100	;'d'
   361  0875  3400               	retlw	0
   362  0876                     STR_39:	
   363  0876  3445               	retlw	69	;'E'
   364  0877  3453               	retlw	83	;'S'
   365  0878  3450               	retlw	80	;'P'
   366  0879  3420               	retlw	32	;' '
   367  087A  346E               	retlw	110	;'n'
   368  087B  346F               	retlw	111	;'o'
   369  087C  3474               	retlw	116	;'t'
   370  087D  3420               	retlw	32	;' '
   371  087E  3466               	retlw	102	;'f'
   372  087F  346F               	retlw	111	;'o'
   373  0880  3475               	retlw	117	;'u'
   374  0881  346E               	retlw	110	;'n'
   375  0882  3464               	retlw	100	;'d'
   376  0883  3400               	retlw	0
   377  0884                     STR_42:	
   378  0884  3443               	retlw	67	;'C'
   379  0885  3469               	retlw	105	;'i'
   380  0886  3472               	retlw	114	;'r'
   381  0887  3463               	retlw	99	;'c'
   382  0888  3475               	retlw	117	;'u'
   383  0889  3469               	retlw	105	;'i'
   384  088A  3474               	retlw	116	;'t'
   385  088B  3444               	retlw	68	;'D'
   386  088C  3469               	retlw	105	;'i'
   387  088D  3467               	retlw	103	;'g'
   388  088E  3465               	retlw	101	;'e'
   389  088F  3473               	retlw	115	;'s'
   390  0890  3474               	retlw	116	;'t'
   391  0891  3400               	retlw	0
   392  0892                     STR_26:	
   393  0892  3441               	retlw	65	;'A'
   394  0893  3454               	retlw	84	;'T'
   395  0894  342B               	retlw	43	;'+'
   396  0895  3443               	retlw	67	;'C'
   397  0896  3449               	retlw	73	;'I'
   398  0897  3450               	retlw	80	;'P'
   399  0898  3453               	retlw	83	;'S'
   400  0899  3445               	retlw	69	;'E'
   401  089A  344E               	retlw	78	;'N'
   402  089B  3444               	retlw	68	;'D'
   403  089C  343D               	retlw	61	;'='
   404  089D  3400               	retlw	0
   405  089E                     STR_14:	
   406  089E  3441               	retlw	65	;'A'
   407  089F  3454               	retlw	84	;'T'
   408  08A0  342B               	retlw	43	;'+'
   409  08A1  3443               	retlw	67	;'C'
   410  08A2  3457               	retlw	87	;'W'
   411  08A3  3451               	retlw	81	;'Q'
   412  08A4  3441               	retlw	65	;'A'
   413  08A5  3450               	retlw	80	;'P'
   414  08A6  340D               	retlw	13
   415  08A7  340A               	retlw	10
   416  08A8  3400               	retlw	0
   417  08A9                     STR_16:	
   418  08A9  3441               	retlw	65	;'A'
   419  08AA  3454               	retlw	84	;'T'
   420  08AB  342B               	retlw	43	;'+'
   421  08AC  3443               	retlw	67	;'C'
   422  08AD  3449               	retlw	73	;'I'
   423  08AE  3446               	retlw	70	;'F'
   424  08AF  3453               	retlw	83	;'S'
   425  08B0  3452               	retlw	82	;'R'
   426  08B1  340D               	retlw	13
   427  08B2  340A               	retlw	10
   428  08B3  3400               	retlw	0
   429  08B4                     STR_11:	
   430  08B4  3441               	retlw	65	;'A'
   431  08B5  3454               	retlw	84	;'T'
   432  08B6  342B               	retlw	43	;'+'
   433  08B7  3443               	retlw	67	;'C'
   434  08B8  3457               	retlw	87	;'W'
   435  08B9  344A               	retlw	74	;'J'
   436  08BA  3441               	retlw	65	;'A'
   437  08BB  3450               	retlw	80	;'P'
   438  08BC  343D               	retlw	61	;'='
   439  08BD  3422               	retlw	34	;'"'
   440  08BE  3400               	retlw	0
   441  08BF                     STR_1:	
   442  08BF  3441               	retlw	65	;'A'
   443  08C0  3454               	retlw	84	;'T'
   444  08C1  342B               	retlw	43	;'+'
   445  08C2  3443               	retlw	67	;'C'
   446  08C3  3457               	retlw	87	;'W'
   447  08C4  3453               	retlw	83	;'S'
   448  08C5  3441               	retlw	65	;'A'
   449  08C6  3450               	retlw	80	;'P'
   450  08C7  343D               	retlw	61	;'='
   451  08C8  3422               	retlw	34	;'"'
   452  08C9  3400               	retlw	0
   453  08CA                     STR_9:	
   454  08CA  3441               	retlw	65	;'A'
   455  08CB  3454               	retlw	84	;'T'
   456  08CC  342B               	retlw	43	;'+'
   457  08CD  3443               	retlw	67	;'C'
   458  08CE  3457               	retlw	87	;'W'
   459  08CF  344D               	retlw	77	;'M'
   460  08D0  344F               	retlw	79	;'O'
   461  08D1  3444               	retlw	68	;'D'
   462  08D2  3445               	retlw	69	;'E'
   463  08D3  343D               	retlw	61	;'='
   464  08D4  3400               	retlw	0
   465  08D5                     STR_43:	
   466  08D5  3436               	retlw	54	;'6'
   467  08D6  3431               	retlw	49	;'1'
   468  08D7  3439               	retlw	57	;'9'
   469  08D8  3430               	retlw	48	;'0'
   470  08D9  3430               	retlw	48	;'0'
   471  08DA  3437               	retlw	55	;'7'
   472  08DB  3431               	retlw	49	;'1'
   473  08DC  3432               	retlw	50	;'2'
   474  08DD  3433               	retlw	51	;'3'
   475  08DE  3400               	retlw	0
   476  08DF                     STR_34:	
   477  08DF  346E               	retlw	110	;'n'
   478  08E0  346F               	retlw	111	;'o'
   479  08E1  3420               	retlw	32	;' '
   480  08E2  3463               	retlw	99	;'c'
   481  08E3  3468               	retlw	104	;'h'
   482  08E4  3461               	retlw	97	;'a'
   483  08E5  346E               	retlw	110	;'n'
   484  08E6  3467               	retlw	103	;'g'
   485  08E7  3465               	retlw	101	;'e'
   486  08E8  3400               	retlw	0
   487  08E9                     STR_5:	
   488  08E9  3441               	retlw	65	;'A'
   489  08EA  3454               	retlw	84	;'T'
   490  08EB  342B               	retlw	43	;'+'
   491  08EC  3452               	retlw	82	;'R'
   492  08ED  3453               	retlw	83	;'S'
   493  08EE  3454               	retlw	84	;'T'
   494  08EF  340D               	retlw	13
   495  08F0  340A               	retlw	10
   496  08F1  3400               	retlw	0
   497  08F2                     STR_3:	
   498  08F2  3422               	retlw	34	;'"'
   499  08F3  342C               	retlw	44	;','
   500  08F4  3435               	retlw	53	;'5'
   501  08F5  342C               	retlw	44	;','
   502  08F6  3433               	retlw	51	;'3'
   503  08F7  340D               	retlw	13
   504  08F8  340A               	retlw	10
   505  08F9  3400               	retlw	0
   506  08FA                     STR_35:	
   507  08FA  344C               	retlw	76	;'L'
   508  08FB  3469               	retlw	105	;'i'
   509  08FC  346E               	retlw	110	;'n'
   510  08FD  346B               	retlw	107	;'k'
   511  08FE  3465               	retlw	101	;'e'
   512  08FF  3464               	retlw	100	;'d'
   513  0900  3400               	retlw	0
   514  0901                     STR_36:	
   515  0901  3455               	retlw	85	;'U'
   516  0902  346E               	retlw	110	;'n'
   517  0903  346C               	retlw	108	;'l'
   518  0904  3469               	retlw	105	;'i'
   519  0905  346E               	retlw	110	;'n'
   520  0906  346B               	retlw	107	;'k'
   521  0907  3400               	retlw	0
   522  0908                     STR_28:	
   523  0908  342B               	retlw	43	;'+'
   524  0909  3449               	retlw	73	;'I'
   525  090A  3450               	retlw	80	;'P'
   526  090B  3444               	retlw	68	;'D'
   527  090C  342C               	retlw	44	;','
   528  090D  3400               	retlw	0
   529  090E                     STR_32:	
   530  090E  3472               	retlw	114	;'r'
   531  090F  3465               	retlw	101	;'e'
   532  0910  3461               	retlw	97	;'a'
   533  0911  3464               	retlw	100	;'d'
   534  0912  3479               	retlw	121	;'y'
   535  0913  3400               	retlw	0
   536  0914                     STR_29:	
   537  0914  340D               	retlw	13
   538  0915  340A               	retlw	10
   539  0916  340D               	retlw	13
   540  0917  340A               	retlw	10
   541  0918  3400               	retlw	0
   542  0919                     STR_4:	
   543  0919  3441               	retlw	65	;'A'
   544  091A  3454               	retlw	84	;'T'
   545  091B  340D               	retlw	13
   546  091C  340A               	retlw	10
   547  091D  3400               	retlw	0
   548  091E                     STR_33:	
   549  091E  3446               	retlw	70	;'F'
   550  091F  3441               	retlw	65	;'A'
   551  0920  3449               	retlw	73	;'I'
   552  0921  344C               	retlw	76	;'L'
   553  0922  3400               	retlw	0
   554  0923                     STR_13:	
   555  0923  3422               	retlw	34	;'"'
   556  0924  340D               	retlw	13
   557  0925  340A               	retlw	10
   558  0926  3400               	retlw	0
   559  0927                     STR_2:	
   560  0927  3422               	retlw	34	;'"'
   561  0928  342C               	retlw	44	;','
   562  0929  3422               	retlw	34	;'"'
   563  092A  3400               	retlw	0
   564  092B                     STR_6:	
   565  092B  3441               	retlw	65	;'A'
   566  092C  3454               	retlw	84	;'T'
   567  092D  3445               	retlw	69	;'E'
   568  092E  3400               	retlw	0
   569  092F                     STR_19:	
   570  092F  3454               	retlw	84	;'T'
   571  0930  3443               	retlw	67	;'C'
   572  0931  3450               	retlw	80	;'P'
   573  0932  3400               	retlw	0
   574  0933                     STR_20:	
   575  0933  3455               	retlw	85	;'U'
   576  0934  3444               	retlw	68	;'D'
   577  0935  3450               	retlw	80	;'P'
   578  0936  3400               	retlw	0
   579  0937                     STR_22:	
   580  0937  3422               	retlw	34	;'"'
   581  0938  342C               	retlw	44	;','
   582  0939  3400               	retlw	0
   583  093A                     STR_8:	
   584  093A  344F               	retlw	79	;'O'
   585  093B  344B               	retlw	75	;'K'
   586  093C  3400               	retlw	0
   587  093D                     STR_23:	
   588  093D  3425               	retlw	37	;'%'
   589  093E  3475               	retlw	117	;'u'
   590  093F  3400               	retlw	0
   591  0916                     
   592                           ; #config settings
   593  0000                     
   594                           	psect	cinit
   595  07E6                     start_initialization:	
   596  07E6                     __initialization:	
   597                           
   598                           ; Initialize objects allocated to BANK0
   599  07E6  1383               	bcf	3,7	;select IRP bank0
   600  07E7  3056               	movlw	low (__pdataBANK0+12)
   601  07E8  00FD               	movwf	btemp+-1
   602  07E9  3004               	movlw	high __pidataBANK0
   603  07EA  00FE               	movwf	btemp
   604  07EB  3013               	movlw	low __pidataBANK0
   605  07EC  00FF               	movwf	btemp+1
   606  07ED  304A               	movlw	low __pdataBANK0
   607  07EE  0084               	movwf	4
   608  07EF  120A  118A  243E  120A  118A  	fcall	init_ram0
   609                           
   610                           ; Clear objects allocated to BANK0
   611  07F4  3039               	movlw	low __pbssBANK0
   612  07F5  0084               	movwf	4
   613  07F6  304A               	movlw	low (__pbssBANK0+17)
   614  07F7  120A  118A  2401  120A  118A  	fcall	clear_ram0
   615  07FC                     end_of_initialization:	
   616                           ;End of C runtime variable initialization code
   617                           
   618  07FC                     __end_of__initialization:	
   619  07FC  0183               	clrf	3
   620  07FD  120A  118A  2F07   	ljmp	_main	;jump to C main() function
   621                           
   622                           	psect	bssBANK0
   623  0039                     __pbssBANK0:	
   624  0039                     __esp8266_waitResponse@F1098:	
   625  0039                     	ds	6
   626  003F                     esp8266_send@F1079:	
   627  003F                     	ds	6
   628  0045                     esp8266_start@F1075:	
   629  0045                     	ds	5
   630                           
   631                           	psect	dataBANK0
   632  004A                     __pdataBANK0:	
   633  004A                     __esp8266_waitResponse@F1101:	
   634  004A                     	ds	12
   635                           
   636                           	psect	inittext
   637  043A                     init_fetch0:	
   638                           ;	Called with low address in FSR and high address in W
   639                           
   640  043A  087E               	movf	btemp,w
   641  043B  008A               	movwf	10
   642  043C  087F               	movf	btemp+1,w
   643  043D  0082               	movwf	2
   644  043E                     init_ram0:	
   645                           ;Called with:
   646                           ;	high address of idata address in btemp 
   647                           ;	low address of idata address in btemp+1 
   648                           ;	low address of data in FSR
   649                           ;	high address + 1 of data in btemp-1
   650                           
   651  043E  120A  118A  243A  120A  118A  	fcall	init_fetch0
   652  0443  0080               	movwf	0
   653  0444  0A84               	incf	4,f
   654  0445  0804               	movf	4,w
   655  0446  067D               	xorwf	btemp+-1,w
   656  0447  1903               	btfsc	3,2
   657  0448  3400               	retlw	0
   658  0449  0AFF               	incf	btemp+1,f
   659  044A  1903               	btfsc	3,2
   660  044B  0AFE               	incf	btemp,f
   661  044C  2C3E               	goto	init_ram0
   662                           
   663                           	psect	clrtext
   664  0401                     clear_ram0:	
   665                           ;	Called with FSR containing the base address, and
   666                           ;	W with the last address+1
   667                           
   668  0401  0064               	clrwdt	;clear the watchdog before getting into this loop
   669  0402                     clrloop0:	
   670  0402  0180               	clrf	0	;clear RAM location pointed to by FSR
   671  0403  0A84               	incf	4,f	;increment pointer
   672  0404  0604               	xorwf	4,w	;XOR with final address
   673  0405  1903               	btfsc	3,2	;have we reached the end yet?
   674  0406  3400               	retlw	0	;all done for this memory range, return
   675  0407  0604               	xorwf	4,w	;XOR again to restore value
   676  0408  2C02               	goto	clrloop0	;do the next byte
   677                           
   678                           	psect	cstackCOMMON
   679  0070                     __pcstackCOMMON:	
   680  0070                     ?__esp8266_waitResponse:	
   681  0070                     ??__esp8266_waitResponse:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_Lcd_SetBit:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ??_Lcd_SetBit:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_Lcd_Cmd:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_Lcd_Clear:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_Lcd_Start:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_Lcd_Print_Char:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_Initialize_ESP8266:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ??_Initialize_ESP8266:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?__esp8266_putch:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ??__esp8266_putch:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?__esp8266_getch:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ??__esp8266_getch:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_esp8266_isStarted:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_esp8266_mode:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_main:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     Lcd_SetBit@data_bit:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     __esp8266_putch@bt:	
   733                           ; 1 bytes @ 0x0
   734                           
   735                           
   736                           ; 1 bytes @ 0x0
   737  0070                     	ds	1
   738  0071                     ?__esp8266_print:	
   739  0071                     ??_Lcd_Cmd:	
   740                           ; 1 bytes @ 0x1
   741                           
   742  0071                     ??_Lcd_Print_Char:	
   743                           ; 1 bytes @ 0x1
   744                           
   745  0071                     __esp8266_print@ptr:	
   746                           ; 1 bytes @ 0x1
   747                           
   748                           
   749                           ; 2 bytes @ 0x1
   750  0071                     	ds	1
   751  0072                     Lcd_Print_Char@Lower_Nibble:	
   752                           
   753                           ; 1 bytes @ 0x2
   754  0072                     	ds	1
   755  0073                     ??__esp8266_print:	
   756  0073                     Lcd_Cmd@a:	
   757                           ; 1 bytes @ 0x3
   758                           
   759  0073                     Lcd_Print_Char@Upper_Nibble:	
   760                           ; 1 bytes @ 0x3
   761                           
   762                           
   763                           ; 1 bytes @ 0x3
   764  0073                     	ds	1
   765  0074                     ??_Lcd_Clear:	
   766  0074                     ?_Lcd_Set_Cursor:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ??_Lcd_Start:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     ?_esp8266_config_softAP:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     ??_esp8266_isStarted:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     ??_esp8266_mode:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     Lcd_Set_Cursor@b:	
   782                           ; 1 bytes @ 0x4
   783                           
   784  0074                     Lcd_Print_Char@data:	
   785                           ; 1 bytes @ 0x4
   786                           
   787  0074                     esp8266_mode@mode:	
   788                           ; 1 bytes @ 0x4
   789                           
   790  0074                     esp8266_config_softAP@softssid:	
   791                           ; 1 bytes @ 0x4
   792                           
   793                           
   794                           ; 2 bytes @ 0x4
   795  0074                     	ds	1
   796  0075                     ??_Lcd_Set_Cursor:	
   797  0075                     Lcd_Print_Char@i:	
   798                           ; 1 bytes @ 0x5
   799                           
   800                           
   801                           ; 2 bytes @ 0x5
   802  0075                     	ds	1
   803  0076                     esp8266_config_softAP@softpass:	
   804                           
   805                           ; 2 bytes @ 0x6
   806  0076                     	ds	1
   807  0077                     Lcd_Set_Cursor@a:	
   808  0077                     Lcd_Print_Char@i_97:	
   809                           ; 1 bytes @ 0x7
   810                           
   811                           
   812                           ; 2 bytes @ 0x7
   813  0077                     	ds	1
   814  0078                     ??_esp8266_config_softAP:	
   815  0078                     Lcd_Set_Cursor@z:	
   816                           ; 1 bytes @ 0x8
   817                           
   818                           
   819                           ; 1 bytes @ 0x8
   820  0078                     	ds	1
   821  0079                     ?_Lcd_Print_String:	
   822  0079                     Lcd_Set_Cursor@y:	
   823                           ; 1 bytes @ 0x9
   824                           
   825  0079                     Lcd_Print_String@a:	
   826                           ; 1 bytes @ 0x9
   827                           
   828                           
   829                           ; 2 bytes @ 0x9
   830  0079                     	ds	1
   831  007A                     Lcd_Set_Cursor@temp:	
   832                           
   833                           ; 1 bytes @ 0xA
   834  007A                     	ds	1
   835  007B                     ??_Lcd_Print_String:	
   836                           
   837                           ; 1 bytes @ 0xB
   838  007B                     	ds	3
   839                           
   840                           	psect	cstackBANK0
   841  0020                     __pcstackBANK0:	
   842  0020                     Lcd_Print_String@i:	
   843  0020                     __esp8266_waitResponse@strings:	
   844                           ; 2 bytes @ 0x0
   845                           
   846                           
   847                           ; 12 bytes @ 0x0
   848  0020                     	ds	12
   849  002C                     __esp8266_waitResponse@so_far:	
   850                           
   851                           ; 6 bytes @ 0xC
   852  002C                     	ds	6
   853  0032                     __esp8266_waitResponse@received:	
   854                           
   855                           ; 1 bytes @ 0x12
   856  0032                     	ds	1
   857  0033                     __esp8266_waitResponse@response:	
   858                           
   859                           ; 1 bytes @ 0x13
   860  0033                     	ds	1
   861  0034                     __esp8266_waitResponse@continue_loop:	
   862                           
   863                           ; 1 bytes @ 0x14
   864  0034                     	ds	1
   865  0035                     __esp8266_waitResponse@i:	
   866                           
   867                           ; 1 bytes @ 0x15
   868  0035                     	ds	1
   869  0036                     ??_main:	
   870                           
   871                           ; 1 bytes @ 0x16
   872  0036                     	ds	3
   873                           
   874                           	psect	maintext
   875  0707                     __pmaintext:	
   876 ;;
   877 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   878 ;;
   879 ;; *************** function _main *****************
   880 ;; Defined at:
   881 ;;		line 535 in file "work.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : B00/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0
   897 ;;      Temps:          0       3       0       0       0
   898 ;;      Totals:         0       3       0       0       0
   899 ;;Total ram usage:        3 bytes
   900 ;; Hardware stack levels required when called:    3
   901 ;; This function calls:
   902 ;;		_Initialize_ESP8266
   903 ;;		_Lcd_Clear
   904 ;;		_Lcd_Print_String
   905 ;;		_Lcd_Set_Cursor
   906 ;;		_Lcd_Start
   907 ;;		_esp8266_config_softAP
   908 ;;		_esp8266_isStarted
   909 ;;		_esp8266_mode
   910 ;; This function is called by:
   911 ;;		Startup code after reset
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _main
   917  0707                     _main:	
   918  0707                     l1590:	
   919                           ;incstack = 0
   920                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   921                           
   922                           
   923                           ;work.c: 537:     TRISD = 0x00;
   924  0707  1683               	bsf	3,5	;RP0=1, select bank1
   925  0708  1303               	bcf	3,6	;RP1=0, select bank1
   926  0709  0188               	clrf	8	;volatile
   927  070A                     l1592:	
   928                           
   929                           ;work.c: 538:     Lcd_Start();
   930  070A  120A  118A  2576  120A  118A  	fcall	_Lcd_Start
   931  070F                     l1594:	
   932                           
   933                           ;work.c: 539:     Initialize_ESP8266();
   934  070F  120A  118A  2463  120A  118A  	fcall	_Initialize_ESP8266
   935  0714                     l1596:	
   936                           
   937                           ;work.c: 540:     Lcd_Set_Cursor(1,1);
   938  0714  01F4               	clrf	Lcd_Set_Cursor@b
   939  0715  0AF4               	incf	Lcd_Set_Cursor@b,f
   940  0716  3001               	movlw	1
   941  0717  120A  118A  25C5  120A  118A  	fcall	_Lcd_Set_Cursor
   942  071C                     l1598:	
   943                           
   944                           ;work.c: 541:     Lcd_Print_String("IOT BASED CAR");
   945  071C  305A               	movlw	low (STR_37| (0+32768))
   946  071D  00F9               	movwf	Lcd_Print_String@a
   947  071E  3088               	movlw	high (STR_37| (0+32768))
   948  071F  00FA               	movwf	Lcd_Print_String@a+1
   949  0720  120A  118A  2530  120A  118A  	fcall	_Lcd_Print_String
   950  0725                     l1600:	
   951                           
   952                           ;work.c: 542:     Lcd_Set_Cursor(2,1);
   953  0725  01F4               	clrf	Lcd_Set_Cursor@b
   954  0726  0AF4               	incf	Lcd_Set_Cursor@b,f
   955  0727  3002               	movlw	2
   956  0728  120A  118A  25C5  120A  118A  	fcall	_Lcd_Set_Cursor
   957  072D                     l1602:	
   958                           
   959                           ;work.c: 543:     Lcd_Print_String("PARKING SYSTEM");
   960  072D  302F               	movlw	low (STR_38| (0+32768))
   961  072E  00F9               	movwf	Lcd_Print_String@a
   962  072F  3088               	movlw	high (STR_38| (0+32768))
   963  0730  00FA               	movwf	Lcd_Print_String@a+1
   964  0731  120A  118A  2530  120A  118A  	fcall	_Lcd_Print_String
   965  0736                     l1604:	
   966                           
   967                           ;work.c: 544:    _delay((unsigned long)((1500)*(20000000/4000.0)));
   968  0736  3027               	movlw	39
   969  0737  1283               	bcf	3,5	;RP0=0, select bank0
   970  0738  1303               	bcf	3,6	;RP1=0, select bank0
   971  0739  00B8               	movwf	??_main+2
   972  073A  300D               	movlw	13
   973  073B  00B7               	movwf	??_main+1
   974  073C  3025               	movlw	37
   975  073D  00B6               	movwf	??_main
   976  073E                     u987:	
   977  073E  0BB6               	decfsz	??_main,f
   978  073F  2F3E               	goto	u987
   979  0740  0BB7               	decfsz	??_main+1,f
   980  0741  2F3E               	goto	u987
   981  0742  0BB8               	decfsz	??_main+2,f
   982  0743  2F3E               	goto	u987
   983  0744  2F45               	nop2
   984  0745                     l1606:	
   985                           
   986                           ;work.c: 545:     Lcd_Clear();
   987  0745  120A  118A  241F  120A  118A  	fcall	_Lcd_Clear
   988  074A                     l1608:	
   989                           
   990                           ;work.c: 552:     {;work.c: 553:     Lcd_Set_Cursor(1,1);
   991  074A  01F4               	clrf	Lcd_Set_Cursor@b
   992  074B  0AF4               	incf	Lcd_Set_Cursor@b,f
   993  074C  3001               	movlw	1
   994  074D  120A  118A  25C5  120A  118A  	fcall	_Lcd_Set_Cursor
   995  0752                     l1610:	
   996                           
   997                           ;work.c: 554:     Lcd_Print_String("ESP not found");
   998  0752  3076               	movlw	low (STR_39| (0+32768))
   999  0753  00F9               	movwf	Lcd_Print_String@a
  1000  0754  3088               	movlw	high (STR_39| (0+32768))
  1001  0755  00FA               	movwf	Lcd_Print_String@a+1
  1002  0756  120A  118A  2530  120A  118A  	fcall	_Lcd_Print_String
  1003  075B                     l1612:	
  1004                           
  1005                           ;work.c: 555:     }
  1006  075B  120A  118A  244D  120A  118A  	fcall	_esp8266_isStarted
  1007  0760  3A00               	xorlw	0
  1008  0761  1903               	skipnz
  1009  0762  2F64               	goto	u971
  1010  0763  2F65               	goto	u970
  1011  0764                     u971:	
  1012  0764  2F4A               	goto	l1608
  1013  0765                     u970:	
  1014  0765                     l1614:	
  1015                           
  1016                           ;work.c: 557:     Lcd_Set_Cursor(1,1);
  1017  0765  01F4               	clrf	Lcd_Set_Cursor@b
  1018  0766  0AF4               	incf	Lcd_Set_Cursor@b,f
  1019  0767  3001               	movlw	1
  1020  0768  120A  118A  25C5  120A  118A  	fcall	_Lcd_Set_Cursor
  1021  076D                     l1616:	
  1022                           
  1023                           ;work.c: 558:     Lcd_Print_String("ESP is connected");
  1024  076D  301E               	movlw	low (STR_40| (0+32768))
  1025  076E  00F9               	movwf	Lcd_Print_String@a
  1026  076F  3088               	movlw	high (STR_40| (0+32768))
  1027  0770  00FA               	movwf	Lcd_Print_String@a+1
  1028  0771  120A  118A  2530  120A  118A  	fcall	_Lcd_Print_String
  1029  0776                     l1618:	
  1030                           
  1031                           ;work.c: 559:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  1032  0776  3027               	movlw	39
  1033  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1034  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0779  00B8               	movwf	??_main+2
  1036  077A  300D               	movlw	13
  1037  077B  00B7               	movwf	??_main+1
  1038  077C  3025               	movlw	37
  1039  077D  00B6               	movwf	??_main
  1040  077E                     u997:	
  1041  077E  0BB6               	decfsz	??_main,f
  1042  077F  2F7E               	goto	u997
  1043  0780  0BB7               	decfsz	??_main+1,f
  1044  0781  2F7E               	goto	u997
  1045  0782  0BB8               	decfsz	??_main+2,f
  1046  0783  2F7E               	goto	u997
  1047  0784  2F85               	nop2
  1048  0785                     l1620:	
  1049                           
  1050                           ;work.c: 560:     Lcd_Clear();
  1051  0785  120A  118A  241F  120A  118A  	fcall	_Lcd_Clear
  1052  078A                     l1622:	
  1053                           
  1054                           ;work.c: 565:     esp8266_mode(2);
  1055  078A  3002               	movlw	2
  1056  078B  120A  118A  2495  120A  118A  	fcall	_esp8266_mode
  1057  0790                     l1624:	
  1058                           
  1059                           ;work.c: 566:     Lcd_Set_Cursor(1,1);
  1060  0790  01F4               	clrf	Lcd_Set_Cursor@b
  1061  0791  0AF4               	incf	Lcd_Set_Cursor@b,f
  1062  0792  3001               	movlw	1
  1063  0793  120A  118A  25C5  120A  118A  	fcall	_Lcd_Set_Cursor
  1064  0798                     l1626:	
  1065                           
  1066                           ;work.c: 567:     Lcd_Print_String("ESP set as AP");
  1067  0798  304C               	movlw	low (STR_41| (0+32768))
  1068  0799  00F9               	movwf	Lcd_Print_String@a
  1069  079A  3088               	movlw	high (STR_41| (0+32768))
  1070  079B  00FA               	movwf	Lcd_Print_String@a+1
  1071  079C  120A  118A  2530  120A  118A  	fcall	_Lcd_Print_String
  1072  07A1                     l1628:	
  1073                           
  1074                           ;work.c: 568:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  1075  07A1  3027               	movlw	39
  1076  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1077  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1078  07A4  00B8               	movwf	??_main+2
  1079  07A5  300D               	movlw	13
  1080  07A6  00B7               	movwf	??_main+1
  1081  07A7  3025               	movlw	37
  1082  07A8  00B6               	movwf	??_main
  1083  07A9                     u1007:	
  1084  07A9  0BB6               	decfsz	??_main,f
  1085  07AA  2FA9               	goto	u1007
  1086  07AB  0BB7               	decfsz	??_main+1,f
  1087  07AC  2FA9               	goto	u1007
  1088  07AD  0BB8               	decfsz	??_main+2,f
  1089  07AE  2FA9               	goto	u1007
  1090  07AF  2FB0               	nop2
  1091  07B0                     l1630:	
  1092                           
  1093                           ;work.c: 569:     Lcd_Clear();
  1094  07B0  120A  118A  241F  120A  118A  	fcall	_Lcd_Clear
  1095                           
  1096                           ;work.c: 573:     esp8266_config_softAP("CircuitDigest","619007123");
  1097  07B5  3084               	movlw	low (STR_42| (0+32768))
  1098  07B6  00F4               	movwf	esp8266_config_softAP@softssid
  1099  07B7  3088               	movlw	high (STR_42| (0+32768))
  1100  07B8  00F5               	movwf	esp8266_config_softAP@softssid+1
  1101  07B9  30D5               	movlw	low (STR_43| (0+32768))
  1102  07BA  00F6               	movwf	esp8266_config_softAP@softpass
  1103  07BB  3088               	movlw	high (STR_43| (0+32768))
  1104  07BC  00F7               	movwf	esp8266_config_softAP@softpass+1
  1105  07BD  120A  118A  24FD  120A  118A  	fcall	_esp8266_config_softAP
  1106  07C2                     l1632:	
  1107                           
  1108                           ;work.c: 574:     Lcd_Set_Cursor(1,1);
  1109  07C2  01F4               	clrf	Lcd_Set_Cursor@b
  1110  07C3  0AF4               	incf	Lcd_Set_Cursor@b,f
  1111  07C4  3001               	movlw	1
  1112  07C5  120A  118A  25C5  120A  118A  	fcall	_Lcd_Set_Cursor
  1113  07CA                     l1634:	
  1114                           
  1115                           ;work.c: 575:     Lcd_Print_String("AP configured");
  1116  07CA  3068               	movlw	low (STR_44| (0+32768))
  1117  07CB  00F9               	movwf	Lcd_Print_String@a
  1118  07CC  3088               	movlw	high (STR_44| (0+32768))
  1119  07CD  00FA               	movwf	Lcd_Print_String@a+1
  1120  07CE  120A  118A  2530  120A  118A  	fcall	_Lcd_Print_String
  1121  07D3                     l1636:	
  1122                           
  1123                           ;work.c: 576:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  1124  07D3  3027               	movlw	39
  1125  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1126  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1127  07D6  00B8               	movwf	??_main+2
  1128  07D7  300D               	movlw	13
  1129  07D8  00B7               	movwf	??_main+1
  1130  07D9  3025               	movlw	37
  1131  07DA  00B6               	movwf	??_main
  1132  07DB                     u1017:	
  1133  07DB  0BB6               	decfsz	??_main,f
  1134  07DC  2FDB               	goto	u1017
  1135  07DD  0BB7               	decfsz	??_main+1,f
  1136  07DE  2FDB               	goto	u1017
  1137  07DF  0BB8               	decfsz	??_main+2,f
  1138  07E0  2FDB               	goto	u1017
  1139  07E1  2FE2               	nop2
  1140  07E2                     l226:	
  1141                           ;work.c: 581:     while(1)
  1142                           
  1143  07E2                     l227:	
  1144                           ;work.c: 582:     {;work.c: 584:     }
  1145                           
  1146  07E2  2FE2               	goto	l226
  1147  07E3  120A  118A  2800   	ljmp	start
  1148  07E6                     __end_of_main:	
  1149                           
  1150                           	psect	text1
  1151  0495                     __ptext1:	
  1152 ;; *************** function _esp8266_mode *****************
  1153 ;; Defined at:
  1154 ;;		line 290 in file "work.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;  mode            1    wreg     unsigned char 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  mode            1    4[COMMON] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         1       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0
  1171 ;;      Totals:         1       0       0       0       0
  1172 ;;Total ram usage:        1 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    2
  1175 ;; This function calls:
  1176 ;;		__esp8266_print
  1177 ;;		__esp8266_putch
  1178 ;;		__esp8266_waitResponse
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _esp8266_mode
  1186  0495                     _esp8266_mode:	
  1187                           
  1188                           ;incstack = 0
  1189                           ; Regs used in _esp8266_mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1190                           ;esp8266_mode@mode stored from wreg
  1191  0495  00F4               	movwf	esp8266_mode@mode
  1192  0496                     l1400:	
  1193                           
  1194                           ;work.c: 291:     _esp8266_print("AT+CWMODE=");
  1195  0496  30CA               	movlw	low (STR_9| (0+32768))
  1196  0497  00F1               	movwf	__esp8266_print@ptr
  1197  0498  3088               	movlw	high (STR_9| (0+32768))
  1198  0499  00F2               	movwf	__esp8266_print@ptr+1
  1199  049A  120A  118A  24D7  120A  118A  	fcall	__esp8266_print
  1200  049F                     l1402:	
  1201                           
  1202                           ;work.c: 292:     _esp8266_putch(mode + '0');
  1203  049F  0874               	movf	esp8266_mode@mode,w
  1204  04A0  3E30               	addlw	48
  1205  04A1  120A  118A  2409  120A  118A  	fcall	__esp8266_putch
  1206  04A6                     l1404:	
  1207                           
  1208                           ;work.c: 293:     _esp8266_print("\r\n");
  1209  04A6  3016               	movlw	low ((STR_29+2)| (0+32768))
  1210  04A7  00F1               	movwf	__esp8266_print@ptr
  1211  04A8  3089               	movlw	high ((STR_29+2)| (0+32768))
  1212  04A9  00F2               	movwf	__esp8266_print@ptr+1
  1213  04AA  120A  118A  24D7  120A  118A  	fcall	__esp8266_print
  1214  04AF                     l1406:	
  1215                           
  1216                           ;work.c: 294:     _esp8266_waitResponse();
  1217  04AF  120A  118A  2674  120A  118A  	fcall	__esp8266_waitResponse
  1218  04B4                     l137:	
  1219  04B4  0008               	return
  1220  04B5                     __end_of_esp8266_mode:	
  1221                           
  1222                           	psect	text2
  1223  044D                     __ptext2:	
  1224 ;; *************** function _esp8266_isStarted *****************
  1225 ;; Defined at:
  1226 ;;		line 238 in file "work.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      unsigned char 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    2
  1247 ;; This function calls:
  1248 ;;		__esp8266_print
  1249 ;;		__esp8266_waitResponse
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           
  1256                           ;psect for function _esp8266_isStarted
  1257  044D                     _esp8266_isStarted:	
  1258  044D                     l1396:	
  1259                           ;incstack = 0
  1260                           ; Regs used in _esp8266_isStarted: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1261                           
  1262                           
  1263                           ;work.c: 239:     _esp8266_print("AT\r\n");
  1264  044D  3019               	movlw	low (STR_4| (0+32768))
  1265  044E  00F1               	movwf	__esp8266_print@ptr
  1266  044F  3089               	movlw	high (STR_4| (0+32768))
  1267  0450  00F2               	movwf	__esp8266_print@ptr+1
  1268  0451  120A  118A  24D7  120A  118A  	fcall	__esp8266_print
  1269                           
  1270                           ;work.c: 240:     return (_esp8266_waitResponse() == 1);
  1271  0456  120A  118A  2674  120A  118A  	fcall	__esp8266_waitResponse
  1272  045B  3A01               	xorlw	1
  1273  045C  1903               	skipnz
  1274  045D  2C5F               	goto	u731
  1275  045E  2C61               	goto	u730
  1276  045F                     u731:	
  1277  045F  3001               	movlw	1
  1278  0460  2C62               	goto	u740
  1279  0461                     u730:	
  1280  0461  3000               	movlw	0
  1281  0462                     u740:	
  1282  0462                     l125:	
  1283  0462  0008               	return
  1284  0463                     __end_of_esp8266_isStarted:	
  1285                           
  1286                           	psect	text3
  1287  04FD                     __ptext3:	
  1288 ;; *************** function _esp8266_config_softAP *****************
  1289 ;; Defined at:
  1290 ;;		line 183 in file "work.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  softssid        2    4[COMMON] PTR unsigned char 
  1293 ;;		 -> STR_42(14), 
  1294 ;;  softpass        2    6[COMMON] PTR unsigned char 
  1295 ;;		 -> STR_43(10), 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      unsigned char 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         4       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0
  1310 ;;      Totals:         4       0       0       0       0
  1311 ;;Total ram usage:        4 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    2
  1314 ;; This function calls:
  1315 ;;		__esp8266_print
  1316 ;;		__esp8266_waitResponse
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _esp8266_config_softAP
  1324  04FD                     _esp8266_config_softAP:	
  1325  04FD                     l1392:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _esp8266_config_softAP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1328                           
  1329  04FD  30BF               	movlw	low (STR_1| (0+32768))
  1330  04FE  00F1               	movwf	__esp8266_print@ptr
  1331  04FF  3088               	movlw	high (STR_1| (0+32768))
  1332  0500  00F2               	movwf	__esp8266_print@ptr+1
  1333  0501  120A  118A  24D7  120A  118A  	fcall	__esp8266_print
  1334  0506  0874               	movf	esp8266_config_softAP@softssid,w
  1335  0507  00F1               	movwf	__esp8266_print@ptr
  1336  0508  0875               	movf	esp8266_config_softAP@softssid+1,w
  1337  0509  00F2               	movwf	__esp8266_print@ptr+1
  1338  050A  120A  118A  24D7  120A  118A  	fcall	__esp8266_print
  1339  050F  3027               	movlw	low (STR_2| (0+32768))
  1340  0510  00F1               	movwf	__esp8266_print@ptr
  1341  0511  3089               	movlw	high (STR_2| (0+32768))
  1342  0512  00F2               	movwf	__esp8266_print@ptr+1
  1343  0513  120A  118A  24D7  120A  118A  	fcall	__esp8266_print
  1344  0518  0876               	movf	esp8266_config_softAP@softpass,w
  1345  0519  00F1               	movwf	__esp8266_print@ptr
  1346  051A  0877               	movf	esp8266_config_softAP@softpass+1,w
  1347  051B  00F2               	movwf	__esp8266_print@ptr+1
  1348  051C  120A  118A  24D7  120A  118A  	fcall	__esp8266_print
  1349  0521  30F2               	movlw	low (STR_3| (0+32768))
  1350  0522  00F1               	movwf	__esp8266_print@ptr
  1351  0523  3088               	movlw	high (STR_3| (0+32768))
  1352  0524  00F2               	movwf	__esp8266_print@ptr+1
  1353  0525  120A  118A  24D7  120A  118A  	fcall	__esp8266_print
  1354                           
  1355                           ;	Return value of _esp8266_config_softAP is never used
  1356  052A  120A  118A  2674  120A  118A  	fcall	__esp8266_waitResponse
  1357  052F                     l103:	
  1358  052F  0008               	return
  1359  0530                     __end_of_esp8266_config_softAP:	
  1360                           
  1361                           	psect	text4
  1362  0674                     __ptext4:	
  1363 ;; *************** function __esp8266_waitResponse *****************
  1364 ;; Defined at:
  1365 ;;		line 511 in file "work.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  i               1   21[BANK0 ] unsigned char 
  1370 ;;  strings        12    0[BANK0 ] PTR const unsigned char 
  1371 ;;		 -> STR_36(7), STR_35(7), STR_34(10), STR_33(5), 
  1372 ;;		 -> STR_32(6), STR_31(3), 
  1373 ;;  so_far          6   12[BANK0 ] unsigned char [6]
  1374 ;;  continue_loo    1   20[BANK0 ] _Bool 
  1375 ;;  response        1   19[BANK0 ] unsigned char 
  1376 ;;  received        1   18[BANK0 ] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      unsigned char 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         0      22       0       0       0
  1388 ;;      Temps:          4       0       0       0       0
  1389 ;;      Totals:         4      22       0       0       0
  1390 ;;Total ram usage:       26 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    1
  1393 ;; This function calls:
  1394 ;;		__esp8266_getch
  1395 ;; This function is called by:
  1396 ;;		_esp8266_config_softAP
  1397 ;;		_esp8266_isStarted
  1398 ;;		_esp8266_mode
  1399 ;;		_esp8266_restart
  1400 ;;		_esp8266_connect
  1401 ;;		_esp8266_start
  1402 ;;		_esp8266_send
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function __esp8266_waitResponse
  1408  0674                     __esp8266_waitResponse:	
  1409  0674                     l1306:	
  1410                           ;incstack = 0
  1411                           ; Regs used in __esp8266_waitResponse: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1412                           
  1413                           
  1414                           ;work.c: 512:     unsigned char so_far[6] = {0,0,0,0,0,0};
  1415  0674  302C               	movlw	__esp8266_waitResponse@so_far& (0+255)
  1416  0675  0084               	movwf	4
  1417  0676  3006               	movlw	6
  1418  0677  00FF               	movwf	btemp+1
  1419  0678                     u600:	
  1420  0678  1383               	bcf	3,7	;select IRP bank0
  1421  0679  0180               	clrf	0
  1422  067A  0A84               	incf	4,f
  1423  067B  0BFF               	decfsz	btemp+1,f
  1424  067C  2E78               	goto	u600
  1425  067D                     l1308:	
  1426                           
  1427                           ;work.c: 513:     unsigned const char lengths[6] = {2,5,4,9,6,6};;work.c: 514:     unsig
      +                          ned const char* strings[6] = {"OK", "ready", "FAIL", "no change", "Linked", "Unlink"};
  1428  067D  3020               	movlw	__esp8266_waitResponse@strings& (0+255)
  1429  067E  0084               	movwf	4
  1430  067F  304A               	movlw	low __esp8266_waitResponse@F1101
  1431  0680  00F0               	movwf	??__esp8266_waitResponse
  1432  0681  0804               	movf	4,w
  1433  0682  00F1               	movwf	??__esp8266_waitResponse+1
  1434  0683  300C               	movlw	12
  1435  0684  00F2               	movwf	??__esp8266_waitResponse+2
  1436  0685                     u610:	
  1437  0685  0870               	movf	??__esp8266_waitResponse,w
  1438  0686  0084               	movwf	4
  1439  0687  1383               	bcf	3,7	;select IRP bank0
  1440  0688  0800               	movf	0,w
  1441  0689  00F3               	movwf	??__esp8266_waitResponse+3
  1442  068A  0AF0               	incf	??__esp8266_waitResponse,f
  1443  068B  0871               	movf	??__esp8266_waitResponse+1,w
  1444  068C  0084               	movwf	4
  1445  068D  0873               	movf	??__esp8266_waitResponse+3,w
  1446  068E  0080               	movwf	0
  1447  068F  0AF1               	incf	??__esp8266_waitResponse+1,f
  1448  0690  0BF2               	decfsz	??__esp8266_waitResponse+2,f
  1449  0691  2E85               	goto	u610
  1450  0692                     l1310:	
  1451                           
  1452                           ;work.c: 515:     unsigned const char responses[6] = {1, 2, 3, 4, 5, 6};;work.c: 516:   
      +                            unsigned char received;;work.c: 517:     unsigned char response;;work.c: 518:     _Boo
      +                          l continue_loop = 1;
  1453  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0694  01B4               	clrf	__esp8266_waitResponse@continue_loop
  1456  0695  0AB4               	incf	__esp8266_waitResponse@continue_loop,f
  1457                           
  1458                           ;work.c: 519:     while (continue_loop) {
  1459  0696  2F00               	goto	l1336
  1460  0697                     l1312:	
  1461                           
  1462                           ;work.c: 520:         received = _esp8266_getch();
  1463  0697  120A  118A  242C  120A  118A  	fcall	__esp8266_getch
  1464  069C  00F0               	movwf	??__esp8266_waitResponse
  1465  069D  0870               	movf	??__esp8266_waitResponse,w
  1466  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1467  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1468  06A0  00B2               	movwf	__esp8266_waitResponse@received
  1469  06A1                     l1314:	
  1470                           
  1471                           ;work.c: 521:         for (unsigned char i = 0; i < 6; i++) {
  1472  06A1  01B5               	clrf	__esp8266_waitResponse@i
  1473  06A2                     l1320:	
  1474                           
  1475                           ;work.c: 522:             if (strings[i][so_far[i]] == received) {
  1476  06A2  0835               	movf	__esp8266_waitResponse@i,w
  1477  06A3  00F0               	movwf	??__esp8266_waitResponse
  1478  06A4  0770               	addwf	??__esp8266_waitResponse,w
  1479  06A5  3E20               	addlw	(low (__esp8266_waitResponse@strings| 0))& (0+255)
  1480  06A6  0084               	movwf	4
  1481  06A7  1383               	bcf	3,7	;select IRP bank0
  1482  06A8  0800               	movf	0,w
  1483  06A9  00F1               	movwf	??__esp8266_waitResponse+1
  1484  06AA  0A84               	incf	4,f
  1485  06AB  0800               	movf	0,w
  1486  06AC  00F2               	movwf	??__esp8266_waitResponse+2
  1487  06AD  0835               	movf	__esp8266_waitResponse@i,w
  1488  06AE  3E2C               	addlw	(low (__esp8266_waitResponse@so_far| 0))& (0+255)
  1489  06AF  0084               	movwf	4
  1490  06B0  0800               	movf	0,w
  1491  06B1  0771               	addwf	??__esp8266_waitResponse+1,w
  1492  06B2  0084               	movwf	4
  1493  06B3  0872               	movf	??__esp8266_waitResponse+2,w
  1494  06B4  1803               	skipnc
  1495  06B5  0A72               	incf	??__esp8266_waitResponse+2,w
  1496  06B6  00FF               	movwf	btemp+1
  1497  06B7  120A  158A  2000  120A  118A  	fcall	stringtab
  1498  06BC  0632               	xorwf	__esp8266_waitResponse@received,w
  1499  06BD  1D03               	skipz
  1500  06BE  2EC0               	goto	u621
  1501  06BF  2EC1               	goto	u620
  1502  06C0                     u621:	
  1503  06C0  2EF1               	goto	l1330
  1504  06C1                     u620:	
  1505  06C1                     l1322:	
  1506                           
  1507                           ;work.c: 523:                 so_far[i]++;
  1508  06C1  3001               	movlw	1
  1509  06C2  00F0               	movwf	??__esp8266_waitResponse
  1510  06C3  0835               	movf	__esp8266_waitResponse@i,w
  1511  06C4  3E2C               	addlw	(low (__esp8266_waitResponse@so_far| 0))& (0+255)
  1512  06C5  0084               	movwf	4
  1513  06C6  0870               	movf	??__esp8266_waitResponse,w
  1514  06C7  1383               	bcf	3,7	;select IRP bank0
  1515  06C8  0780               	addwf	0,f
  1516  06C9                     l1324:	
  1517                           
  1518                           ;work.c: 524:                 if (so_far[i] == lengths[i]) {
  1519  06C9  0835               	movf	__esp8266_waitResponse@i,w
  1520  06CA  3E18               	addlw	low (__esp8266_waitResponse@lengths| (0+32768))
  1521  06CB  0084               	movwf	4
  1522  06CC  3088               	movlw	high (__esp8266_waitResponse@lengths| (0+32768))
  1523  06CD  1803               	skipnc
  1524  06CE  3E01               	addlw	1
  1525  06CF  00FF               	movwf	btemp+1
  1526  06D0  120A  158A  2000  120A  118A  	fcall	stringtab
  1527  06D5  00F0               	movwf	??__esp8266_waitResponse
  1528  06D6  0835               	movf	__esp8266_waitResponse@i,w
  1529  06D7  3E2C               	addlw	(low (__esp8266_waitResponse@so_far| 0))& (0+255)
  1530  06D8  0084               	movwf	4
  1531  06D9  1383               	bcf	3,7	;select IRP bank0
  1532  06DA  0800               	movf	0,w
  1533  06DB  0670               	xorwf	??__esp8266_waitResponse,w
  1534  06DC  1D03               	skipz
  1535  06DD  2EDF               	goto	u631
  1536  06DE  2EE0               	goto	u630
  1537  06DF                     u631:	
  1538  06DF  2EF6               	goto	l1332
  1539  06E0                     u630:	
  1540  06E0                     l1326:	
  1541                           
  1542                           ;work.c: 525:                     response = responses[i];
  1543  06E0  0835               	movf	__esp8266_waitResponse@i,w
  1544  06E1  3E12               	addlw	low (__esp8266_waitResponse@responses| (0+32768))
  1545  06E2  0084               	movwf	4
  1546  06E3  3088               	movlw	high (__esp8266_waitResponse@responses| (0+32768))
  1547  06E4  1803               	skipnc
  1548  06E5  3E01               	addlw	1
  1549  06E6  00FF               	movwf	btemp+1
  1550  06E7  120A  158A  2000  120A  118A  	fcall	stringtab
  1551  06EC  00F0               	movwf	??__esp8266_waitResponse
  1552  06ED  0870               	movf	??__esp8266_waitResponse,w
  1553  06EE  00B3               	movwf	__esp8266_waitResponse@response
  1554  06EF                     l1328:	
  1555                           
  1556                           ;work.c: 526:                     continue_loop = 0;
  1557  06EF  01B4               	clrf	__esp8266_waitResponse@continue_loop
  1558  06F0  2EF6               	goto	l1332
  1559  06F1                     l1330:	
  1560                           
  1561                           ;work.c: 529:                 so_far[i] = 0;
  1562  06F1  0835               	movf	__esp8266_waitResponse@i,w
  1563  06F2  3E2C               	addlw	(low (__esp8266_waitResponse@so_far| 0))& (0+255)
  1564  06F3  0084               	movwf	4
  1565  06F4  1383               	bcf	3,7	;select IRP bank0
  1566  06F5  0180               	clrf	0
  1567  06F6                     l1332:	
  1568                           
  1569                           ;work.c: 531:         }
  1570  06F6  3001               	movlw	1
  1571  06F7  00F0               	movwf	??__esp8266_waitResponse
  1572  06F8  0870               	movf	??__esp8266_waitResponse,w
  1573  06F9  07B5               	addwf	__esp8266_waitResponse@i,f
  1574  06FA                     l1334:	
  1575  06FA  3006               	movlw	6
  1576  06FB  0235               	subwf	__esp8266_waitResponse@i,w
  1577  06FC  1C03               	skipc
  1578  06FD  2EFF               	goto	u641
  1579  06FE  2F00               	goto	u640
  1580  06FF                     u641:	
  1581  06FF  2EA2               	goto	l1320
  1582  0700                     u640:	
  1583  0700                     l1336:	
  1584                           
  1585                           ;work.c: 519:     while (continue_loop) {
  1586  0700  0834               	movf	__esp8266_waitResponse@continue_loop,w
  1587  0701  1D03               	btfss	3,2
  1588  0702  2F04               	goto	u651
  1589  0703  2F05               	goto	u650
  1590  0704                     u651:	
  1591  0704  2E97               	goto	l1312
  1592  0705                     u650:	
  1593  0705                     l1338:	
  1594                           
  1595                           ;work.c: 533:     return response;
  1596  0705  0833               	movf	__esp8266_waitResponse@response,w
  1597  0706                     l219:	
  1598  0706  0008               	return
  1599  0707                     __end_of__esp8266_waitResponse:	
  1600                           
  1601                           	psect	text5
  1602  042C                     __ptext5:	
  1603 ;; *************** function __esp8266_getch *****************
  1604 ;; Defined at:
  1605 ;;		line 201 in file "work.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0
  1622 ;;      Totals:         0       0       0       0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		__esp8266_waitResponse
  1629 ;;		_esp8266_ip
  1630 ;;		_esp8266_send
  1631 ;;		_esp8266_receive
  1632 ;;		__esp8266_waitFor
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function __esp8266_getch
  1638  042C                     __esp8266_getch:	
  1639  042C                     l1248:	
  1640                           ;incstack = 0
  1641                           ; Regs used in __esp8266_getch: [wreg]
  1642                           
  1643  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1644  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1645  042E  1C98               	btfss	24,1	;volatile
  1646  042F  2C31               	goto	u541
  1647  0430  2C32               	goto	u540
  1648  0431                     u541:	
  1649  0431  2C34               	goto	l113
  1650  0432                     u540:	
  1651  0432                     l1250:	
  1652  0432  1218               	bcf	24,4	;volatile
  1653  0433  1618               	bsf	24,4	;volatile
  1654  0434                     l113:	
  1655  0434  1E8C               	btfss	12,5	;volatile
  1656  0435  2C37               	goto	u551
  1657  0436  2C38               	goto	u550
  1658  0437                     u551:	
  1659  0437  2C34               	goto	l113
  1660  0438                     u550:	
  1661  0438                     l1252:	
  1662  0438  081A               	movf	26,w	;volatile
  1663  0439                     l116:	
  1664  0439  0008               	return
  1665  043A                     __end_of__esp8266_getch:	
  1666                           
  1667                           	psect	text6
  1668  04D7                     __ptext6:	
  1669 ;; *************** function __esp8266_print *****************
  1670 ;; Defined at:
  1671 ;;		line 461 in file "work.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  ptr             2    1[COMMON] PTR const unsigned char 
  1674 ;;		 -> STR_43(10), STR_42(14), STR_27(3), STR_26(12), 
  1675 ;;		 -> esp8266_send@length_str(6), STR_24(3), esp8266_start@port_str(5), STR_22(3), 
  1676 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(14), 
  1677 ;;		 -> STR_16(11), STR_14(11), STR_13(4), STR_12(4), 
  1678 ;;		 -> STR_11(11), STR_10(3), STR_9(11), STR_7(3), 
  1679 ;;		 -> STR_6(4), STR_5(9), STR_4(5), STR_3(8), 
  1680 ;;		 -> STR_2(4), STR_1(11), 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1692 ;;      Params:         2       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0
  1695 ;;      Totals:         2       0       0       0       0
  1696 ;;Total ram usage:        2 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    1
  1699 ;; This function calls:
  1700 ;;		__esp8266_putch
  1701 ;; This function is called by:
  1702 ;;		_esp8266_config_softAP
  1703 ;;		_esp8266_isStarted
  1704 ;;		_esp8266_mode
  1705 ;;		_esp8266_restart
  1706 ;;		_esp8266_echoCmds
  1707 ;;		_esp8266_connect
  1708 ;;		_esp8266_disconnect
  1709 ;;		_esp8266_ip
  1710 ;;		_esp8266_start
  1711 ;;		_esp8266_send
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function __esp8266_print
  1717  04D7                     __esp8266_print:	
  1718  04D7                     l1298:	
  1719                           ;incstack = 0
  1720                           ; Regs used in __esp8266_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1721                           
  1722                           
  1723                           ;work.c: 462:     while (*ptr != 0) {
  1724  04D7  2CEC               	goto	l1304
  1725  04D8                     l1300:	
  1726                           
  1727                           ;work.c: 463:         _esp8266_putch(*ptr++);
  1728  04D8  0872               	movf	__esp8266_print@ptr+1,w
  1729  04D9  00FF               	movwf	btemp+1
  1730  04DA  0871               	movf	__esp8266_print@ptr,w
  1731  04DB  0084               	movwf	4
  1732  04DC  120A  158A  2000  120A  118A  	fcall	stringtab
  1733  04E1  120A  118A  2409  120A  118A  	fcall	__esp8266_putch
  1734  04E6                     l1302:	
  1735  04E6  3001               	movlw	1
  1736  04E7  07F1               	addwf	__esp8266_print@ptr,f
  1737  04E8  1803               	skipnc
  1738  04E9  0AF2               	incf	__esp8266_print@ptr+1,f
  1739  04EA  3000               	movlw	0
  1740  04EB  07F2               	addwf	__esp8266_print@ptr+1,f
  1741  04EC                     l1304:	
  1742                           
  1743                           ;work.c: 462:     while (*ptr != 0) {
  1744  04EC  0872               	movf	__esp8266_print@ptr+1,w
  1745  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1746  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1747  04EF  00FF               	movwf	btemp+1
  1748  04F0  0871               	movf	__esp8266_print@ptr,w
  1749  04F1  0084               	movwf	4
  1750  04F2  120A  158A  2000  120A  118A  	fcall	stringtab
  1751  04F7  3A00               	xorlw	0
  1752  04F8  1D03               	skipz
  1753  04F9  2CFB               	goto	u591
  1754  04FA  2CFC               	goto	u590
  1755  04FB                     u591:	
  1756  04FB  2CD8               	goto	l1300
  1757  04FC                     u590:	
  1758  04FC                     l193:	
  1759  04FC  0008               	return
  1760  04FD                     __end_of__esp8266_print:	
  1761                           
  1762                           	psect	text7
  1763  0409                     __ptext7:	
  1764 ;; *************** function __esp8266_putch *****************
  1765 ;; Defined at:
  1766 ;;		line 193 in file "work.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  bt              1    wreg     unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  bt              1    0[COMMON] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1780 ;;      Params:         0       0       0       0       0
  1781 ;;      Locals:         1       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0
  1783 ;;      Totals:         1       0       0       0       0
  1784 ;;Total ram usage:        1 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; This function calls:
  1787 ;;		Nothing
  1788 ;; This function is called by:
  1789 ;;		_esp8266_mode
  1790 ;;		__esp8266_print
  1791 ;;		_ESP8266_send_string
  1792 ;;		_esp8266_echoCmds
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function __esp8266_putch
  1798  0409                     __esp8266_putch:	
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in __esp8266_putch: [wreg]
  1802                           ;__esp8266_putch@bt stored from wreg
  1803  0409  00F0               	movwf	__esp8266_putch@bt
  1804  040A                     l1244:	
  1805  040A                     l106:	
  1806  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1807  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1808  040C  1E0C               	btfss	12,4	;volatile
  1809  040D  2C0F               	goto	u531
  1810  040E  2C10               	goto	u530
  1811  040F                     u531:	
  1812  040F  2C0A               	goto	l106
  1813  0410                     u530:	
  1814  0410                     l1246:	
  1815  0410  0870               	movf	__esp8266_putch@bt,w
  1816  0411  0099               	movwf	25	;volatile
  1817  0412                     l109:	
  1818  0412  0008               	return
  1819  0413                     __end_of__esp8266_putch:	
  1820                           
  1821                           	psect	text8
  1822  0576                     __ptext8:	
  1823 ;; *************** function _Lcd_Start *****************
  1824 ;; Defined at:
  1825 ;;		line 112 in file "work.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  i               2    0        int 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1839 ;;      Params:         0       0       0       0       0
  1840 ;;      Locals:         2       0       0       0       0
  1841 ;;      Temps:          2       0       0       0       0
  1842 ;;      Totals:         4       0       0       0       0
  1843 ;;Total ram usage:        4 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    2
  1846 ;; This function calls:
  1847 ;;		_Lcd_Cmd
  1848 ;;		_Lcd_SetBit
  1849 ;; This function is called by:
  1850 ;;		_main
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           
  1855                           ;psect for function _Lcd_Start
  1856  0576                     _Lcd_Start:	
  1857  0576                     l1364:	
  1858                           ;incstack = 0
  1859                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  1860                           
  1861                           
  1862                           ;work.c: 114:     SPBRG = ((20000000/16)/9600) - 1;
  1863  0576  3000               	movlw	0
  1864  0577  120A  118A  24B5  120A  118A  	fcall	_Lcd_SetBit
  1865  057C                     l1366:	
  1866  057C                     l1368:	
  1867  057C                     l1378:	
  1868                           
  1869                           ;work.c: 117: 
  1870  057C  3021               	movlw	33
  1871  057D  00F5               	movwf	??_Lcd_Start+1
  1872  057E  3076               	movlw	118
  1873  057F  00F4               	movwf	??_Lcd_Start
  1874  0580                     u1027:	
  1875  0580  0BF4               	decfsz	??_Lcd_Start,f
  1876  0581  2D80               	goto	u1027
  1877  0582  0BF5               	decfsz	??_Lcd_Start+1,f
  1878  0583  2D80               	goto	u1027
  1879  0584  0000               	nop
  1880  0585                     l1380:	
  1881                           
  1882                           ;work.c: 118: 
  1883  0585  3003               	movlw	3
  1884  0586  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1885  058B                     l1382:	
  1886                           
  1887                           ;work.c: 119:     SYNC = 0;
  1888  058B  3048               	movlw	72
  1889  058C  00F5               	movwf	??_Lcd_Start+1
  1890  058D  306C               	movlw	108
  1891  058E  00F4               	movwf	??_Lcd_Start
  1892  058F                     u1037:	
  1893  058F  0BF4               	decfsz	??_Lcd_Start,f
  1894  0590  2D8F               	goto	u1037
  1895  0591  0BF5               	decfsz	??_Lcd_Start+1,f
  1896  0592  2D8F               	goto	u1037
  1897  0593  0000               	nop
  1898                           
  1899                           ;work.c: 120:     SPEN = 1;
  1900  0594  3003               	movlw	3
  1901  0595  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1902                           
  1903                           ;work.c: 121: 
  1904  059A  3002               	movlw	2
  1905  059B  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1906                           
  1907                           ;work.c: 122: 
  1908  05A0  3002               	movlw	2
  1909  05A1  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1910                           
  1911                           ;work.c: 123:     TXEN = 1;
  1912  05A6  3008               	movlw	8
  1913  05A7  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1914                           
  1915                           ;work.c: 124:     CREN = 1;
  1916  05AC  3000               	movlw	0
  1917  05AD  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1918                           
  1919                           ;work.c: 125: 
  1920  05B2  300C               	movlw	12
  1921  05B3  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1922                           
  1923                           ;work.c: 126: 
  1924  05B8  3000               	movlw	0
  1925  05B9  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1926                           
  1927                           ;work.c: 127: 
  1928  05BE  3006               	movlw	6
  1929  05BF  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  1930  05C4                     l84:	
  1931  05C4  0008               	return
  1932  05C5                     __end_of_Lcd_Start:	
  1933                           
  1934                           	psect	text9
  1935  05C5                     __ptext9:	
  1936 ;; *************** function _Lcd_Set_Cursor *****************
  1937 ;; Defined at:
  1938 ;;		line 91 in file "work.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  a               1    wreg     unsigned char 
  1941 ;;  b               1    4[COMMON] unsigned char 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  a               1    7[COMMON] unsigned char 
  1944 ;;  temp            1   10[COMMON] unsigned char 
  1945 ;;  y               1    9[COMMON] unsigned char 
  1946 ;;  z               1    8[COMMON] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         1       0       0       0       0
  1957 ;;      Locals:         4       0       0       0       0
  1958 ;;      Temps:          2       0       0       0       0
  1959 ;;      Totals:         7       0       0       0       0
  1960 ;;Total ram usage:        7 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    2
  1963 ;; This function calls:
  1964 ;;		_Lcd_Cmd
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _Lcd_Set_Cursor
  1972  05C5                     _Lcd_Set_Cursor:	
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1976                           ;Lcd_Set_Cursor@a stored from wreg
  1977  05C5  00F7               	movwf	Lcd_Set_Cursor@a
  1978  05C6                     l1344:	
  1979                           
  1980                           ;work.c: 91:    RD3 = 0;;work.c: 92:    Lcd_SetBit(Lower_Nibble);;work.c: 93:    RD3 = 1
      +                          ;;work.c: 94:    for(int i=2130483; i<=0; i--)
  1981  05C6  0377               	decf	Lcd_Set_Cursor@a,w
  1982  05C7  1D03               	btfss	3,2
  1983  05C8  2DCA               	goto	u661
  1984  05C9  2DCB               	goto	u660
  1985  05CA                     u661:	
  1986  05CA  2DEE               	goto	l1354
  1987  05CB                     u660:	
  1988  05CB                     l1346:	
  1989                           
  1990                           ;work.c: 95:    RD3 = 0;;work.c: 96: }
  1991  05CB  0874               	movf	Lcd_Set_Cursor@b,w
  1992  05CC  3E7F               	addlw	127
  1993  05CD  00F5               	movwf	??_Lcd_Set_Cursor
  1994  05CE  0875               	movf	??_Lcd_Set_Cursor,w
  1995  05CF  00FA               	movwf	Lcd_Set_Cursor@temp
  1996                           
  1997                           ;work.c: 97: 
  1998  05D0  087A               	movf	Lcd_Set_Cursor@temp,w
  1999  05D1  00F5               	movwf	??_Lcd_Set_Cursor
  2000  05D2  3004               	movlw	4
  2001  05D3                     u675:	
  2002  05D3  1003               	clrc
  2003  05D4  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2004  05D5  3EFF               	addlw	-1
  2005  05D6  1D03               	skipz
  2006  05D7  2DD3               	goto	u675
  2007  05D8  0875               	movf	??_Lcd_Set_Cursor,w
  2008  05D9  00F6               	movwf	??_Lcd_Set_Cursor+1
  2009  05DA  0876               	movf	??_Lcd_Set_Cursor+1,w
  2010  05DB  00F8               	movwf	Lcd_Set_Cursor@z
  2011  05DC                     l1348:	
  2012                           
  2013                           ;work.c: 98: void Lcd_Print_String(char *a)
  2014  05DC  087A               	movf	Lcd_Set_Cursor@temp,w
  2015  05DD  390F               	andlw	15
  2016  05DE  00F5               	movwf	??_Lcd_Set_Cursor
  2017  05DF  0875               	movf	??_Lcd_Set_Cursor,w
  2018  05E0  00F9               	movwf	Lcd_Set_Cursor@y
  2019  05E1                     l1350:	
  2020                           
  2021                           ;work.c: 99: {
  2022  05E1  0878               	movf	Lcd_Set_Cursor@z,w
  2023  05E2  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  2024  05E7                     l1352:	
  2025                           
  2026                           ;work.c: 100:     int i;
  2027  05E7  0879               	movf	Lcd_Set_Cursor@y,w
  2028  05E8  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  2029                           
  2030                           ;work.c: 101:     for(i=0;a[i]!='\0';i++)
  2031  05ED  2E16               	goto	l79
  2032  05EE                     l1354:	
  2033  05EE  3002               	movlw	2
  2034  05EF  0677               	xorwf	Lcd_Set_Cursor@a,w
  2035  05F0  1D03               	btfss	3,2
  2036  05F1  2DF3               	goto	u681
  2037  05F2  2DF4               	goto	u680
  2038  05F3                     u681:	
  2039  05F3  2E16               	goto	l79
  2040  05F4                     u680:	
  2041  05F4                     l1356:	
  2042                           
  2043                           ;work.c: 103: };work.c: 104: 
  2044  05F4  0874               	movf	Lcd_Set_Cursor@b,w
  2045  05F5  3EBF               	addlw	191
  2046  05F6  00F5               	movwf	??_Lcd_Set_Cursor
  2047  05F7  0875               	movf	??_Lcd_Set_Cursor,w
  2048  05F8  00FA               	movwf	Lcd_Set_Cursor@temp
  2049                           
  2050                           ;work.c: 105: void Initialize_ESP8266(void)
  2051  05F9  087A               	movf	Lcd_Set_Cursor@temp,w
  2052  05FA  00F5               	movwf	??_Lcd_Set_Cursor
  2053  05FB  3004               	movlw	4
  2054  05FC                     u695:	
  2055  05FC  1003               	clrc
  2056  05FD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2057  05FE  3EFF               	addlw	-1
  2058  05FF  1D03               	skipz
  2059  0600  2DFC               	goto	u695
  2060  0601  0875               	movf	??_Lcd_Set_Cursor,w
  2061  0602  00F6               	movwf	??_Lcd_Set_Cursor+1
  2062  0603  0876               	movf	??_Lcd_Set_Cursor+1,w
  2063  0604  00F8               	movwf	Lcd_Set_Cursor@z
  2064  0605                     l1358:	
  2065                           
  2066                           ;work.c: 106: {
  2067  0605  087A               	movf	Lcd_Set_Cursor@temp,w
  2068  0606  390F               	andlw	15
  2069  0607  00F5               	movwf	??_Lcd_Set_Cursor
  2070  0608  0875               	movf	??_Lcd_Set_Cursor,w
  2071  0609  00F9               	movwf	Lcd_Set_Cursor@y
  2072  060A                     l1360:	
  2073                           
  2074                           ;work.c: 107: 
  2075  060A  0878               	movf	Lcd_Set_Cursor@z,w
  2076  060B  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  2077  0610                     l1362:	
  2078                           
  2079                           ;work.c: 108:     TRISC6 = 0;
  2080  0610  0879               	movf	Lcd_Set_Cursor@y,w
  2081  0611  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  2082  0616                     l79:	
  2083  0616  0008               	return
  2084  0617                     __end_of_Lcd_Set_Cursor:	
  2085                           
  2086                           	psect	text10
  2087  0530                     __ptext10:	
  2088 ;; *************** function _Lcd_Print_String *****************
  2089 ;; Defined at:
  2090 ;;		line 146 in file "work.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  a               2    9[COMMON] PTR unsigned char 
  2093 ;;		 -> STR_44(14), STR_41(14), STR_40(17), STR_39(14), 
  2094 ;;		 -> STR_38(15), STR_37(14), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  i               2    0[BANK0 ] int 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         2       0       0       0       0
  2107 ;;      Locals:         0       2       0       0       0
  2108 ;;      Temps:          3       0       0       0       0
  2109 ;;      Totals:         5       2       0       0       0
  2110 ;;Total ram usage:        7 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    2
  2113 ;; This function calls:
  2114 ;;		_Lcd_Print_Char
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _Lcd_Print_String
  2122  0530                     _Lcd_Print_String:	
  2123  0530                     l1384:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2126                           
  2127                           
  2128                           ;work.c: 146: {;work.c: 147:     while(!TXIF);;work.c: 148:     TXREG = bt;;work.c: 149:
      +                           }
  2129  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2130  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2131  0532  01A0               	clrf	Lcd_Print_String@i
  2132  0533  01A1               	clrf	Lcd_Print_String@i+1
  2133  0534  2D59               	goto	l1390
  2134  0535                     l1386:	
  2135                           
  2136                           ;work.c: 150: 
  2137  0535  0820               	movf	Lcd_Print_String@i,w
  2138  0536  0779               	addwf	Lcd_Print_String@a,w
  2139  0537  00FC               	movwf	??_Lcd_Print_String+1
  2140  0538  087A               	movf	Lcd_Print_String@a+1,w
  2141  0539  00FB               	movwf	??_Lcd_Print_String
  2142  053A  1803               	skipnc
  2143  053B  0AFB               	incf	??_Lcd_Print_String,f
  2144  053C  1FA0               	btfss	Lcd_Print_String@i,7
  2145  053D  2D3F               	goto	u700
  2146  053E  03FB               	decf	??_Lcd_Print_String,f
  2147  053F                     u700:	
  2148  053F  087B               	movf	??_Lcd_Print_String,w
  2149  0540  00FD               	movwf	??_Lcd_Print_String+2
  2150  0541  087D               	movf	??_Lcd_Print_String+2,w
  2151  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0544  00FF               	movwf	btemp+1
  2154  0545  087C               	movf	??_Lcd_Print_String+1,w
  2155  0546  0084               	movwf	4
  2156  0547  120A  158A  2000  120A  118A  	fcall	stringtab
  2157  054C  120A  118A  2617  120A  118A  	fcall	_Lcd_Print_Char
  2158  0551                     l1388:	
  2159  0551  3001               	movlw	1
  2160  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0554  07A0               	addwf	Lcd_Print_String@i,f
  2163  0555  1803               	skipnc
  2164  0556  0AA1               	incf	Lcd_Print_String@i+1,f
  2165  0557  3000               	movlw	0
  2166  0558  07A1               	addwf	Lcd_Print_String@i+1,f
  2167  0559                     l1390:	
  2168  0559  0820               	movf	Lcd_Print_String@i,w
  2169  055A  0779               	addwf	Lcd_Print_String@a,w
  2170  055B  00FC               	movwf	??_Lcd_Print_String+1
  2171  055C  087A               	movf	Lcd_Print_String@a+1,w
  2172  055D  00FB               	movwf	??_Lcd_Print_String
  2173  055E  1803               	skipnc
  2174  055F  0AFB               	incf	??_Lcd_Print_String,f
  2175  0560  1FA0               	btfss	Lcd_Print_String@i,7
  2176  0561  2D63               	goto	u710
  2177  0562  03FB               	decf	??_Lcd_Print_String,f
  2178  0563                     u710:	
  2179  0563  087B               	movf	??_Lcd_Print_String,w
  2180  0564  00FD               	movwf	??_Lcd_Print_String+2
  2181  0565  087D               	movf	??_Lcd_Print_String+2,w
  2182  0566  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0567  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0568  00FF               	movwf	btemp+1
  2185  0569  087C               	movf	??_Lcd_Print_String+1,w
  2186  056A  0084               	movwf	4
  2187  056B  120A  158A  2000  120A  118A  	fcall	stringtab
  2188  0570  3A00               	xorlw	0
  2189  0571  1D03               	skipz
  2190  0572  2D74               	goto	u721
  2191  0573  2D75               	goto	u720
  2192  0574                     u721:	
  2193  0574  2D35               	goto	l1386
  2194  0575                     u720:	
  2195  0575                     l97:	
  2196  0575  0008               	return
  2197  0576                     __end_of_Lcd_Print_String:	
  2198                           
  2199                           	psect	text11
  2200  0617                     __ptext11:	
  2201 ;; *************** function _Lcd_Print_Char *****************
  2202 ;; Defined at:
  2203 ;;		line 130 in file "work.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  data            1    wreg     unsigned char 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  data            1    4[COMMON] unsigned char 
  2208 ;;  i               2    7[COMMON] int 
  2209 ;;  i               2    5[COMMON] int 
  2210 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  2211 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         7       0       0       0       0
  2223 ;;      Temps:          1       0       0       0       0
  2224 ;;      Totals:         8       0       0       0       0
  2225 ;;Total ram usage:        8 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    1
  2228 ;; This function calls:
  2229 ;;		_Lcd_SetBit
  2230 ;; This function is called by:
  2231 ;;		_Lcd_Print_String
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function _Lcd_Print_Char
  2237  0617                     _Lcd_Print_Char:	
  2238                           
  2239                           ;incstack = 0
  2240                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2241                           ;Lcd_Print_Char@data stored from wreg
  2242  0617  00F4               	movwf	Lcd_Print_Char@data
  2243  0618                     l1266:	
  2244                           
  2245                           ;work.c: 130: ;work.c: 131: };work.c: 132: ;work.c: 133: 
  2246  0618  0874               	movf	Lcd_Print_Char@data,w
  2247  0619  390F               	andlw	15
  2248  061A  00F1               	movwf	??_Lcd_Print_Char
  2249  061B  0871               	movf	??_Lcd_Print_Char,w
  2250  061C  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  2251                           
  2252                           ;work.c: 134: 
  2253  061D  0874               	movf	Lcd_Print_Char@data,w
  2254  061E  39F0               	andlw	240
  2255  061F  00F1               	movwf	??_Lcd_Print_Char
  2256  0620  0871               	movf	??_Lcd_Print_Char,w
  2257  0621  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  2258  0622                     l1268:	
  2259                           
  2260                           ;work.c: 135: unsigned char esp8266_config_softAP(unsigned char* softssid, unsigned char
      +                          * softpass) {
  2261  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0624  1508               	bsf	8,2	;volatile
  2264  0625                     l1270:	
  2265                           
  2266                           ;work.c: 136:     _esp8266_print("AT+CWSAP=\"");
  2267  0625  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  2268  0626  00F1               	movwf	??_Lcd_Print_Char
  2269  0627  3004               	movlw	4
  2270  0628                     u565:	
  2271  0628  1003               	clrc
  2272  0629  0CF1               	rrf	??_Lcd_Print_Char,f
  2273  062A  3EFF               	addlw	-1
  2274  062B  1D03               	skipz
  2275  062C  2E28               	goto	u565
  2276  062D  0871               	movf	??_Lcd_Print_Char,w
  2277  062E  120A  118A  24B5  120A  118A  	fcall	_Lcd_SetBit
  2278  0633                     l1272:	
  2279                           
  2280                           ;work.c: 137:     _esp8266_print(softssid);
  2281  0633  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0634  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0635  1588               	bsf	8,3	;volatile
  2284  0636                     l1274:	
  2285                           
  2286                           ;work.c: 138:     _esp8266_print("\",\"");
  2287  0636  3033               	movlw	51
  2288  0637  00F5               	movwf	Lcd_Print_Char@i
  2289  0638  3082               	movlw	130
  2290  0639  00F6               	movwf	Lcd_Print_Char@i+1
  2291  063A                     l87:	
  2292                           
  2293                           ;work.c: 139:     _esp8266_print(softpass);
  2294  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2295  063B  1303               	bcf	3,6	;RP1=0, select bank0
  2296  063C  1188               	bcf	8,3	;volatile
  2297  063D                     l1280:	
  2298  063D  30FF               	movlw	255
  2299  063E  07F5               	addwf	Lcd_Print_Char@i,f
  2300  063F  1803               	skipnc
  2301  0640  0AF6               	incf	Lcd_Print_Char@i+1,f
  2302  0641  30FF               	movlw	255
  2303  0642  07F6               	addwf	Lcd_Print_Char@i+1,f
  2304  0643                     l1282:	
  2305  0643  0876               	movf	Lcd_Print_Char@i+1,w
  2306  0644  3A80               	xorlw	128
  2307  0645  00FF               	movwf	btemp+1
  2308  0646  3080               	movlw	128
  2309  0647  027F               	subwf	btemp+1,w
  2310  0648  1D03               	skipz
  2311  0649  2E4C               	goto	u575
  2312  064A  3001               	movlw	1
  2313  064B  0275               	subwf	Lcd_Print_Char@i,w
  2314  064C                     u575:	
  2315  064C  1C03               	skipc
  2316  064D  2E4F               	goto	u571
  2317  064E  2E50               	goto	u570
  2318  064F                     u571:	
  2319  064F  2E3A               	goto	l87
  2320  0650                     u570:	
  2321  0650                     l1284:	
  2322                           
  2323                           ;work.c: 140:     _esp8266_print("\",5,3\r\n");
  2324  0650  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  2325  0651  120A  118A  24B5  120A  118A  	fcall	_Lcd_SetBit
  2326  0656                     l1286:	
  2327                           
  2328                           ;work.c: 141:     return _esp8266_waitResponse();
  2329  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2330  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2331  0658  1588               	bsf	8,3	;volatile
  2332  0659                     l1288:	
  2333                           
  2334                           ;work.c: 142: }
  2335  0659  3033               	movlw	51
  2336  065A  00F7               	movwf	Lcd_Print_Char@i_97
  2337  065B  3082               	movlw	130
  2338  065C  00F8               	movwf	Lcd_Print_Char@i_97+1
  2339  065D                     l89:	
  2340                           
  2341                           ;work.c: 143: 
  2342  065D  1283               	bcf	3,5	;RP0=0, select bank0
  2343  065E  1303               	bcf	3,6	;RP1=0, select bank0
  2344  065F  1188               	bcf	8,3	;volatile
  2345  0660                     l1294:	
  2346  0660  30FF               	movlw	255
  2347  0661  07F7               	addwf	Lcd_Print_Char@i_97,f
  2348  0662  1803               	skipnc
  2349  0663  0AF8               	incf	Lcd_Print_Char@i_97+1,f
  2350  0664  30FF               	movlw	255
  2351  0665  07F8               	addwf	Lcd_Print_Char@i_97+1,f
  2352  0666                     l1296:	
  2353  0666  0878               	movf	Lcd_Print_Char@i_97+1,w
  2354  0667  3A80               	xorlw	128
  2355  0668  00FF               	movwf	btemp+1
  2356  0669  3080               	movlw	128
  2357  066A  027F               	subwf	btemp+1,w
  2358  066B  1D03               	skipz
  2359  066C  2E6F               	goto	u585
  2360  066D  3001               	movlw	1
  2361  066E  0277               	subwf	Lcd_Print_Char@i_97,w
  2362  066F                     u585:	
  2363  066F  1C03               	skipc
  2364  0670  2E72               	goto	u581
  2365  0671  2E73               	goto	u580
  2366  0672                     u581:	
  2367  0672  2E5D               	goto	l89
  2368  0673                     u580:	
  2369  0673                     l91:	
  2370  0673  0008               	return
  2371  0674                     __end_of_Lcd_Print_Char:	
  2372                           
  2373                           	psect	text12
  2374  041F                     __ptext12:	
  2375 ;; *************** function _Lcd_Clear *****************
  2376 ;; Defined at:
  2377 ;;		line 85 in file "work.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, pclath, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    2
  2398 ;; This function calls:
  2399 ;;		_Lcd_Cmd
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _Lcd_Clear
  2407  041F                     _Lcd_Clear:	
  2408  041F                     l1342:	
  2409                           ;incstack = 0
  2410                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2411                           
  2412                           
  2413                           ;work.c: 87:    RD2 = 1;
  2414  041F  3000               	movlw	0
  2415  0420  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  2416                           
  2417                           ;work.c: 88:    Lcd_SetBit(Upper_Nibble>>4);
  2418  0425  3001               	movlw	1
  2419  0426  120A  118A  247B  120A  118A  	fcall	_Lcd_Cmd
  2420  042B                     l73:	
  2421  042B  0008               	return
  2422  042C                     __end_of_Lcd_Clear:	
  2423                           
  2424                           	psect	text13
  2425  047B                     __ptext13:	
  2426 ;; *************** function _Lcd_Cmd *****************
  2427 ;; Defined at:
  2428 ;;		line 76 in file "work.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  a               1    wreg     unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  a               1    3[COMMON] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, pclath, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2442 ;;      Params:         0       0       0       0       0
  2443 ;;      Locals:         1       0       0       0       0
  2444 ;;      Temps:          2       0       0       0       0
  2445 ;;      Totals:         3       0       0       0       0
  2446 ;;Total ram usage:        3 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    1
  2449 ;; This function calls:
  2450 ;;		_Lcd_SetBit
  2451 ;; This function is called by:
  2452 ;;		_Lcd_Clear
  2453 ;;		_Lcd_Set_Cursor
  2454 ;;		_Lcd_Start
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function _Lcd_Cmd
  2460  047B                     _Lcd_Cmd:	
  2461                           
  2462                           ;incstack = 0
  2463                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2464                           ;Lcd_Cmd@a stored from wreg
  2465  047B  00F3               	movwf	Lcd_Cmd@a
  2466  047C                     l1256:	
  2467                           
  2468                           ;work.c: 76:   Lcd_Cmd(0x00);;work.c: 77:   Lcd_Cmd(0x0C);;work.c: 78:   Lcd_Cmd(0x00);
  2469  047C  1283               	bcf	3,5	;RP0=0, select bank0
  2470  047D  1303               	bcf	3,6	;RP1=0, select bank0
  2471  047E  1108               	bcf	8,2	;volatile
  2472  047F                     l1258:	
  2473                           
  2474                           ;work.c: 79:   Lcd_Cmd(0x06);
  2475  047F  0873               	movf	Lcd_Cmd@a,w
  2476  0480  120A  118A  24B5  120A  118A  	fcall	_Lcd_SetBit
  2477  0485                     l1260:	
  2478                           
  2479                           ;work.c: 80: }
  2480  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0487  1588               	bsf	8,3	;volatile
  2483  0488                     l1262:	
  2484                           
  2485                           ;work.c: 81: 
  2486  0488  301A               	movlw	26
  2487  0489  00F2               	movwf	??_Lcd_Cmd+1
  2488  048A  30F8               	movlw	248
  2489  048B  00F1               	movwf	??_Lcd_Cmd
  2490  048C                     u1047:	
  2491  048C  0BF1               	decfsz	??_Lcd_Cmd,f
  2492  048D  2C8C               	goto	u1047
  2493  048E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2494  048F  2C8C               	goto	u1047
  2495  0490  0000               	nop
  2496  0491                     l1264:	
  2497                           
  2498                           ;work.c: 82: void Lcd_Print_Char(char data)
  2499  0491  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0492  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0493  1188               	bcf	8,3	;volatile
  2502  0494                     l70:	
  2503  0494  0008               	return
  2504  0495                     __end_of_Lcd_Cmd:	
  2505                           
  2506                           	psect	text14
  2507  04B5                     __ptext14:	
  2508 ;; *************** function _Lcd_SetBit *****************
  2509 ;; Defined at:
  2510 ;;		line 53 in file "work.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  data_bit        1    wreg     unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  data_bit        1    0[COMMON] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         1       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0
  2527 ;;      Totals:         1       0       0       0       0
  2528 ;;Total ram usage:        1 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_Lcd_Cmd
  2534 ;;		_Lcd_Start
  2535 ;;		_Lcd_Print_Char
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _Lcd_SetBit
  2541  04B5                     _Lcd_SetBit:	
  2542                           
  2543                           ;incstack = 0
  2544                           ; Regs used in _Lcd_SetBit: [wreg]
  2545                           ;Lcd_SetBit@data_bit stored from wreg
  2546  04B5  00F0               	movwf	Lcd_SetBit@data_bit
  2547  04B6                     l1234:	
  2548                           
  2549                           ;work.c: 53:     };work.c: 54:     else if(a== 2);work.c: 55:     {
  2550  04B6  1C70               	btfss	Lcd_SetBit@data_bit,0
  2551  04B7  2CB9               	goto	u491
  2552  04B8  2CBA               	goto	u490
  2553  04B9                     u491:	
  2554  04B9  2CBE               	goto	l59
  2555  04BA                     u490:	
  2556  04BA                     l1236:	
  2557                           
  2558                           ;work.c: 56:         temp = 0xC0 + b - 1;
  2559  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2560  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2561  04BC  1608               	bsf	8,4	;volatile
  2562  04BD  2CC1               	goto	l60
  2563  04BE                     l59:	
  2564                           ;work.c: 57:         z = temp>>4;
  2565                           
  2566                           
  2567                           ;work.c: 58:         y = temp & 0x0F;
  2568  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2569  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2570  04C0  1208               	bcf	8,4	;volatile
  2571  04C1                     l60:	
  2572                           
  2573                           ;work.c: 60:         Lcd_Cmd(y);
  2574  04C1  1CF0               	btfss	Lcd_SetBit@data_bit,1
  2575  04C2  2CC4               	goto	u501
  2576  04C3  2CC5               	goto	u500
  2577  04C4                     u501:	
  2578  04C4  2CC7               	goto	l61
  2579  04C5                     u500:	
  2580  04C5                     l1238:	
  2581                           
  2582                           ;work.c: 61:     }
  2583  04C5  1688               	bsf	8,5	;volatile
  2584  04C6  2CC8               	goto	l62
  2585  04C7                     l61:	
  2586                           ;work.c: 62: }
  2587                           
  2588                           
  2589                           ;work.c: 63: 
  2590  04C7  1288               	bcf	8,5	;volatile
  2591  04C8                     l62:	
  2592                           
  2593                           ;work.c: 65: {
  2594  04C8  1D70               	btfss	Lcd_SetBit@data_bit,2
  2595  04C9  2CCB               	goto	u511
  2596  04CA  2CCC               	goto	u510
  2597  04CB                     u511:	
  2598  04CB  2CCE               	goto	l63
  2599  04CC                     u510:	
  2600  04CC                     l1240:	
  2601                           
  2602                           ;work.c: 66:   Lcd_SetBit(0x00);
  2603  04CC  1708               	bsf	8,6	;volatile
  2604  04CD  2CCF               	goto	l64
  2605  04CE                     l63:	
  2606                           ;work.c: 67:   for(int i=1065244; i<=0; i--)
  2607                           
  2608                           
  2609                           ;work.c: 68:   Lcd_Cmd(0x03);
  2610  04CE  1308               	bcf	8,6	;volatile
  2611  04CF                     l64:	
  2612                           
  2613                           ;work.c: 70:   Lcd_Cmd(0x03);
  2614  04CF  1DF0               	btfss	Lcd_SetBit@data_bit,3
  2615  04D0  2CD2               	goto	u521
  2616  04D1  2CD3               	goto	u520
  2617  04D2                     u521:	
  2618  04D2  2CD5               	goto	l65
  2619  04D3                     u520:	
  2620  04D3                     l1242:	
  2621                           
  2622                           ;work.c: 71:     _delay((unsigned long)((11)*(20000000/4000.0)));
  2623  04D3  1788               	bsf	8,7	;volatile
  2624  04D4  2CD6               	goto	l67
  2625  04D5                     l65:	
  2626                           ;work.c: 72:   Lcd_Cmd(0x03);
  2627                           
  2628                           
  2629                           ;work.c: 73:   Lcd_Cmd(0x02);
  2630  04D5  1388               	bcf	8,7	;volatile
  2631  04D6                     l67:	
  2632  04D6  0008               	return
  2633  04D7                     __end_of_Lcd_SetBit:	
  2634                           
  2635                           	psect	text15
  2636  0463                     __ptext15:	
  2637 ;; *************** function _Initialize_ESP8266 *****************
  2638 ;; Defined at:
  2639 ;;		line 153 in file "work.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _Initialize_ESP8266
  2668  0463                     _Initialize_ESP8266:	
  2669  0463                     l992:	
  2670                           ;incstack = 0
  2671                           ; Regs used in _Initialize_ESP8266: [wreg]
  2672                           
  2673                           
  2674                           ;work.c: 156:     {
  2675  0463  1683               	bsf	3,5	;RP0=1, select bank1
  2676  0464  1303               	bcf	3,6	;RP1=0, select bank1
  2677  0465  1307               	bcf	7,6	;volatile
  2678                           
  2679                           ;work.c: 157:         CREN = 0;
  2680  0466  1787               	bsf	7,7	;volatile
  2681  0467                     l994:	
  2682                           
  2683                           ;work.c: 162: 
  2684  0467  3081               	movlw	129
  2685  0468  0099               	movwf	25	;volatile
  2686  0469                     l996:	
  2687                           
  2688                           ;work.c: 163:     return RCREG;
  2689  0469  1518               	bsf	24,2	;volatile
  2690  046A                     l998:	
  2691                           
  2692                           ;work.c: 167: 
  2693  046A  1218               	bcf	24,4	;volatile
  2694  046B                     l1000:	
  2695                           
  2696                           ;work.c: 168: 
  2697  046B  1283               	bcf	3,5	;RP0=0, select bank0
  2698  046C  1303               	bcf	3,6	;RP1=0, select bank0
  2699  046D  1798               	bsf	24,7	;volatile
  2700  046E                     l1002:	
  2701                           
  2702                           ;work.c: 171:     while(*st_pt)
  2703  046E  1683               	bsf	3,5	;RP0=1, select bank1
  2704  046F  1303               	bcf	3,6	;RP1=0, select bank1
  2705  0470  1698               	bsf	24,5	;volatile
  2706  0471                     l1004:	
  2707                           
  2708                           ;work.c: 172:         _esp8266_putch(*st_pt++);
  2709  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0473  1618               	bsf	24,4	;volatile
  2712  0474                     l1006:	
  2713  0474  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0475  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0476  1318               	bcf	24,6	;volatile
  2716  0477                     l1008:	
  2717  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0479  1318               	bcf	24,6	;volatile
  2720  047A                     l100:	
  2721  047A  0008               	return
  2722  047B                     __end_of_Initialize_ESP8266:	
  2723  007E                     btemp	set	126	;btemp
  2724  007E                     wtemp0	set	126


Data Sizes:
    Strings     290
    Constant    12
    Data        12
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), STR_23(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S658__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S658__prbuf$ptr	PTR unsigned char  size(1) Largest target is 6
		 -> esp8266_send@length_str(COMMON[6]), esp8266_start@port_str(COMMON[5]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 6
		 -> esp8266_send@length_str(COMMON[6]), esp8266_start@port_str(COMMON[5]), 

    _esp8266_waitResponse@strings	PTR const unsigned char [6] size(2) Largest target is 10
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[10]), STR_33(CODE[5]), 
		 -> STR_32(CODE[6]), STR_31(CODE[3]), 

    _esp8266_waitResponse@F1101	PTR const unsigned char [6] size(2) Largest target is 10
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[10]), STR_33(CODE[5]), 
		 -> STR_32(CODE[6]), STR_31(CODE[3]), 

    _esp8266_print@ptr	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_43(CODE[10]), STR_42(CODE[14]), STR_27(CODE[3]), STR_26(CODE[12]), 
		 -> esp8266_send@length_str(COMMON[6]), STR_24(CODE[3]), esp8266_start@port_str(COMMON[5]), STR_22(CODE[3]), 
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[14]), 
		 -> STR_16(CODE[11]), STR_14(CODE[11]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[11]), STR_10(CODE[3]), STR_9(CODE[11]), STR_7(CODE[3]), 
		 -> STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[5]), STR_3(CODE[8]), 
		 -> STR_2(CODE[4]), STR_1(CODE[11]), 

    esp8266_config_softAP@softpass	PTR unsigned char  size(2) Largest target is 10
		 -> STR_43(CODE[10]), 

    esp8266_config_softAP@softssid	PTR unsigned char  size(2) Largest target is 14
		 -> STR_42(CODE[14]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_44(CODE[14]), STR_41(CODE[14]), STR_40(CODE[17]), STR_39(CODE[14]), 
		 -> STR_38(CODE[15]), STR_37(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Print_String
    _esp8266_mode->__esp8266_waitResponse
    _esp8266_isStarted->__esp8266_waitResponse
    _esp8266_config_softAP->__esp8266_waitResponse
    __esp8266_print->__esp8266_putch
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    _esp8266_mode->__esp8266_waitResponse
    _esp8266_isStarted->__esp8266_waitResponse
    _esp8266_config_softAP->__esp8266_waitResponse

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10454
                                             22 BANK0      3     3      0
                 _Initialize_ESP8266
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
              _esp8266_config_softAP
                  _esp8266_isStarted
                       _esp8266_mode
 ---------------------------------------------------------------------------------
 (1) _esp8266_mode                                         1     1      0    2780
                                              4 COMMON     1     1      0
                     __esp8266_print
                     __esp8266_putch
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (1) _esp8266_isStarted                                    0     0      0    2736
                     __esp8266_print
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (1) _esp8266_config_softAP                                4     0      4    2932
                                              4 COMMON     4     0      4
                     __esp8266_print
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (2) __esp8266_waitResponse                               26    26      0     389
                                              0 COMMON     4     4      0
                                              0 BANK0     22    22      0
                     __esp8266_getch
 ---------------------------------------------------------------------------------
 (3) __esp8266_getch                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __esp8266_print                                       2     0      2    2347
                                              1 COMMON     2     0      2
                     __esp8266_putch
 ---------------------------------------------------------------------------------
 (2) __esp8266_putch                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     4     4      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     836
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     7     5      2     816
                                              9 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_ESP8266                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_ESP8266
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   _esp8266_config_softAP
     __esp8266_print
       __esp8266_putch
     __esp8266_waitResponse
       __esp8266_getch
   _esp8266_isStarted
     __esp8266_print
       __esp8266_putch
     __esp8266_waitResponse
       __esp8266_getch
   _esp8266_mode
     __esp8266_print
       __esp8266_putch
     __esp8266_putch
     __esp8266_waitResponse
       __esp8266_getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      44      12        0.0%
ABS                  0      0      44       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 07 16:55:19 2020

                                      pc 0002                              __CFG_CP$OFF 0000  
                                     l60 04C1                                       l61 04C7  
                                     l62 04C8                                       l70 0494  
                                     l63 04CE                                       l64 04CF  
                                     l65 04D5                                       l73 042B  
                                     l67 04D6                                       l59 04BE  
                                     l91 0673                                       l84 05C4  
                                     l87 063A                                       l79 0616  
                                     l89 065D                                       l97 0575  
                                     fsr 0004                       __esp8266_print@ptr 0071  
                     esp8266_start@F1075 0045                                      l100 047A  
                                    l103 052F                                      l113 0434  
                                    l106 040A                                      l116 0439  
                                    l109 0412                                      l125 0462  
                                    l137 04B4                                      l226 07E2  
                                    l219 0706                                      l227 07E2  
                                    l193 04FC                                      l992 0463  
                                    l994 0467                                      l996 0469  
                                    l998 046A                                      _RD2 0042  
                                    _RD3 0043                                      _RD4 0044  
                                    _RD5 0045                                      _RD6 0046  
                                    _RD7 0047                                      u500 04C5  
                                    u501 04C4                                      u510 04CC  
                                    u511 04CB                                      u520 04D3  
                                    u600 0678                                      u521 04D2  
                                    u530 0410                                      u610 0685  
                           __CFG_CPD$OFF 0000                                      u531 040F  
                                    u700 053F                                      u540 0432  
                                    u620 06C1                                      u541 0431  
                                    u621 06C0                                      u710 0563  
                                    u550 0438                                      u630 06E0  
                                    u551 0437                                      u631 06DF  
                                    u720 0575                                      u640 0700  
                                    u721 0574                                      u641 06FF  
                                    u490 04BA                                      u570 0650  
                                    u650 0705                                      u730 0461  
                                    u491 04B9                                      u571 064F  
                                    u651 0704                                      u731 045F  
                                    u580 0673                                      u660 05CB  
                                    u740 0462                                      u581 0672  
                                    u565 0628                                      u661 05CA  
                                    u590 04FC                                      u575 064C  
                                    u591 04FB                                      u680 05F4  
                                    u585 066F                                      u681 05F3  
                                    u675 05D3                                      u695 05FC  
                                    _RX9 00C6                                      u970 0765  
                                    u971 0764                                      _TX9 04C6  
                                    u987 073E                                      u997 077E  
                                    fsr0 0004                                      indf 0000  
                           __CFG_FOSC$HS 0000                             __CFG_LVP$OFF 0000  
                                   l1000 046B                                     l1002 046E  
                                   l1004 0471                                     l1006 0474  
                                   l1008 0477                                     l1300 04D8  
                                   l1302 04E6                                     l1310 0692  
                                   l1240 04CC                                     l1304 04EC  
                                   l1320 06A2                                     l1312 0697  
                                   l1400 0496                                     l1242 04D3  
                                   l1234 04B6                                     l1250 0432  
                                   l1322 06C1                                     l1330 06F1  
                                   l1314 06A1                                     l1306 0674  
                                   l1402 049F                                     l1236 04BA  
                                   l1260 0485                                     l1244 040A  
                                   l1252 0438                                     l1332 06F6  
                                   l1324 06C9                                     l1308 067D  
                                   l1404 04A6                                     l1238 04C5  
                                   l1262 0488                                     l1342 041F  
                                   l1270 0625                                     l1350 05E1  
                                   l1246 0410                                     l1334 06FA  
                                   l1326 06E0                                     l1406 04AF  
                                   l1264 0491                                     l1256 047C  
                                   l1280 063D                                     l1272 0633  
                                   l1360 060A                                     l1352 05E7  
                                   l1344 05C6                                     l1248 042C  
                                   l1328 06EF                                     l1336 0700  
                                   l1600 0725                                     l1258 047F  
                                   l1282 0643                                     l1274 0636  
                                   l1266 0618                                     l1362 0610  
                                   l1346 05CB                                     l1354 05EE  
                                   l1338 0705                                     l1610 0752  
                                   l1602 072D                                     l1284 0650  
                                   l1268 0622                                     l1356 05F4  
                                   l1348 05DC                                     l1380 0585  
                                   l1364 0576                                     l1620 0785  
                                   l1612 075B                                     l1604 0736  
                                   l1294 0660                                     l1286 0656  
                                   l1390 0559                                     l1358 0605  
                                   l1382 058B                                     l1366 057C  
                                   l1630 07B0                                     l1622 078A  
                                   l1614 0765                                     l1606 0745  
                                   l1296 0666                                     l1288 0659  
                                   l1384 0530                                     l1368 057C  
                                   l1392 04FD                                     l1632 07C2  
                                   l1624 0790                                     l1616 076D  
                                   l1608 074A                                     l1386 0535  
                                   l1378 057C                                     l1298 04D7  
                                   l1634 07CA                                     l1626 0798  
                                   l1618 0776                                     l1388 0551  
                                   l1396 044D                                     l1636 07D3  
                                   l1628 07A1                                     l1590 0707  
                                   l1592 070A                                     l1594 070F  
                                   l1596 0714                                     l1598 071C  
                                   STR_1 08BF                                     STR_2 0927  
                                   STR_3 08F2                                     STR_4 0919  
                                   STR_5 08E9                                     STR_6 092B  
                                   STR_8 093A                                     STR_9 08CA  
                                   _BRGH 04C2                                     _CREN 00C4  
                                   u1007 07A9                                     u1017 07DB  
                                   u1027 0580                                     u1037 058F  
                                   u1047 048C                                     _RCIF 0065  
                                   _OERR 00C1                                     _SPEN 00C7  
                                   _TXEN 04C5                                     _TXIF 0064  
                                   _SYNC 04C4                             __CFG_WRT$OFF 0000  
                                   _main 0707                                     btemp 007E  
             __end_of_Initialize_ESP8266 047B                            __CFG_BOREN$ON 0000  
                                   start 0000                       Lcd_Print_Char@i_97 0077  
                     Lcd_Print_Char@data 0074                          __end_of_Lcd_Cmd 0495  
                             _Lcd_SetBit 04B5                                    ?_main 0070  
                                  STR_10 0916                                    STR_11 08B4  
                                  STR_20 0933                                    STR_13 0923  
                                  STR_22 0937                                    STR_14 089E  
                                  STR_23 093D                                    STR_31 093A  
                                  STR_16 08A9                                    STR_40 081E  
                                  STR_32 090E                                    STR_41 084C  
                                  STR_33 091E                            __CFG_WDTE$OFF 0000  
                                  STR_26 0892                                    STR_42 0884  
                                  STR_18 083E                                    STR_34 08DF  
                                  STR_19 092F                                    STR_43 08D5  
                                  STR_35 08FA                                    STR_28 0908  
                                  STR_44 0868                                    STR_36 0901  
                                  STR_29 0914                                    STR_37 085A  
                                  STR_38 082F                                    STR_39 0876  
                                  _RCREG 001A                                    _SPBRG 0099  
                __size_of_Lcd_Set_Cursor 0052                                    _TRISD 0088  
                                  _TXREG 0019                    __esp8266_waitResponse 0674  
                                  pclath 000A                __size_of_Lcd_Print_String 0046  
                                  status 0003                                    wtemp0 007E  
                __size_of_Lcd_Print_Char 005D                          __initialization 07E6  
                           __end_of_main 07E6                                   ??_main 0036  
                     __size_of_Lcd_Clear 000D           __size_of_esp8266_config_softAP 0033  
          __end_of_esp8266_config_softAP 0530                       __size_of_Lcd_Start 004F  
                  __size_of_esp8266_mode 0020                                ??_Lcd_Cmd 0071  
                         __esp8266_getch 042C                                   _TRISC6 043E  
                                 _TRISC7 043F                           __esp8266_print 04D7  
                         __esp8266_putch 0409                           __CFG_PWRTE$OFF 0000  
                            ?_Lcd_SetBit 0070                   ?__esp8266_waitResponse 0070  
                           _esp8266_mode 0495                          Lcd_Set_Cursor@a 0077  
                        Lcd_Set_Cursor@b 0074                          Lcd_Set_Cursor@y 0079  
                        Lcd_Set_Cursor@z 0078                   __end_of__esp8266_getch 043A  
                 __end_of__esp8266_print 04FD                   __end_of__esp8266_putch 0413  
                __end_of__initialization 07FC                        __end_of_Lcd_Clear 042C  
          esp8266_config_softAP@softpass 0076            esp8266_config_softAP@softssid 0074  
                      __end_of_Lcd_Start 05C5      __esp8266_waitResponse@continue_loop 0034  
                         __pcstackCOMMON 0070                             __pidataBANK0 0413  
                         _Lcd_Set_Cursor 05C5                        _esp8266_isStarted 044D  
                     ?_esp8266_isStarted 0070                          ?__esp8266_getch 0070  
                             __pbssBANK0 0039                          ?__esp8266_print 0071  
                        ?__esp8266_putch 0070  __end_of__esp8266_waitResponse@responses 0818  
        __esp8266_waitResponse@responses 0812                         _Lcd_Print_String 0530  
                    __size_of_Lcd_SetBit 0022                      ??_esp8266_isStarted 0074  
  __end_of__esp8266_waitResponse@lengths 081E            __esp8266_waitResponse@lengths 0818  
                         _Lcd_Print_Char 0617                               __pmaintext 0707  
          __esp8266_waitResponse@strings 0020                       Lcd_SetBit@data_bit 0070  
                     _Initialize_ESP8266 0463                   __end_of_Lcd_Set_Cursor 0617  
              __end_of_esp8266_isStarted 0463                      ?_Initialize_ESP8266 0070  
                             __stringtab 0800                          Lcd_Print_Char@i 0075  
                                _Lcd_Cmd 047B                   __end_of_Lcd_Print_Char 0674  
                __esp8266_waitResponse@i 0035                     ??_Initialize_ESP8266 0070  
                        ?_Lcd_Set_Cursor 0074                                  __ptext1 0495  
                                __ptext2 044D                                  __ptext3 04FD  
                                __ptext4 0674                                  __ptext5 042C  
                                __ptext6 04D7                                  __ptext7 0409  
                                __ptext8 0576                                  __ptext9 05C5  
                                clrloop0 0402                     end_of_initialization 07FC  
                        ?_Lcd_Print_Char 0070                         esp8266_mode@mode 0074  
                           __pstringtext 0800                             ??_Lcd_SetBit 0070  
                ??__esp8266_waitResponse 0070               __size_of_esp8266_isStarted 0016  
                  _esp8266_config_softAP 04FD                        __esp8266_putch@bt 0070  
                     __end_of_Lcd_SetBit 04D7                                _Lcd_Clear 041F  
                              _Lcd_Start 0576                 __end_of_Lcd_Print_String 0576  
                    start_initialization 07E6                         ??__esp8266_getch 0070  
                       ??__esp8266_print 0073                         ??__esp8266_putch 0070  
                      Lcd_Print_String@a 0079                        Lcd_Print_String@i 0020  
                             ?_Lcd_Clear 0070                               init_fetch0 043A  
                             ?_Lcd_Start 0070                              __pdataBANK0 004A  
             Lcd_Print_Char@Lower_Nibble 0072                                ___latbits 0002  
                 ?_esp8266_config_softAP 0074                            __pcstackBANK0 0020  
         __esp8266_waitResponse@received 0032                                 ?_Lcd_Cmd 0070  
         __esp8266_waitResponse@response 0033             __esp8266_waitResponse@so_far 002C  
                       ??_Lcd_Set_Cursor 0075                         ??_Lcd_Print_Char 0071  
                              clear_ram0 0401                                 Lcd_Cmd@a 0073  
            __size_of_Initialize_ESP8266 0018                              ??_Lcd_Clear 0074  
                            ??_Lcd_Start 0074                              __stringbase 0812  
         __size_of__esp8266_waitResponse 0093            __end_of__esp8266_waitResponse 0707  
                          ?_esp8266_mode 0070                         __size_of_Lcd_Cmd 001A  
            __esp8266_waitResponse@F1101 004A              __esp8266_waitResponse@F1098 0039  
                     __end_of__stringtab 0812                        ?_Lcd_Print_String 0079  
                         ??_esp8266_mode 0074                       ??_Lcd_Print_String 007B  
                               __ptext10 0530                                 __ptext11 0617  
                               __ptext12 041F                                 __ptext13 047B  
                               __ptext14 04B5                                 __ptext15 0463  
                          __size_of_main 00DF               Lcd_Print_Char@Upper_Nibble 0073  
                ??_esp8266_config_softAP 0078                                 init_ram0 043E  
                              stringcode 080A                        esp8266_send@F1079 003F  
                     Lcd_Set_Cursor@temp 007A                                 stringtab 0800  
                __size_of__esp8266_getch 000E                  __size_of__esp8266_print 0026  
                __size_of__esp8266_putch 000A                     __end_of_esp8266_mode 04B5  
