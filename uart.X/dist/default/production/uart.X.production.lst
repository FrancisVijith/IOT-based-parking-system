

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 07 14:18:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  001A                     _RCREG	set	26
   169  0019                     _TXREG	set	25
   170  0033                     _RB3	set	51
   171  0065                     _RCIF	set	101
   172  00C1                     _OERR	set	193
   173  0064                     _TXIF	set	100
   174  00C6                     _RX9	set	198
   175  00C4                     _CREN	set	196
   176  00C7                     _SPEN	set	199
   177  0086                     _TRISB	set	134
   178  0099                     _SPBRG	set	153
   179  04C6                     _TX9	set	1222
   180  04C5                     _TXEN	set	1221
   181  04C4                     _SYNC	set	1220
   182  04C2                     _BRGH	set	1218
   183  043F                     _TRISC7	set	1087
   184  043E                     _TRISC6	set	1086
   185                           
   186                           	psect	strings
   187  0003                     __pstrings:	
   188  0003                     stringtab:	
   189  0003                     __stringtab:	
   190  0003                     stringcode:	
   191                           ;	String table - string pointers are 1 byte each
   192                           
   193  0003                     stringdir:	
   194  0003  3000               	movlw	high stringdir
   195  0004  008A               	movwf	10
   196  0005  0804               	movf	4,w
   197  0006  0A84               	incf	4,f
   198  0007  0782               	addwf	2,f
   199  0008                     __stringbase:	
   200  0008  3400               	retlw	0
   201  0009                     __end_of__stringtab:	
   202  0009                     STR_1:	
   203  0009  3455               	retlw	85	;'U'
   204  000A  3441               	retlw	65	;'A'
   205  000B  3452               	retlw	82	;'R'
   206  000C  3454               	retlw	84	;'T'
   207  000D  3420               	retlw	32	;' '
   208  000E  344D               	retlw	77	;'M'
   209  000F  346F               	retlw	111	;'o'
   210  0010  3464               	retlw	100	;'d'
   211  0011  3475               	retlw	117	;'u'
   212  0012  346C               	retlw	108	;'l'
   213  0013  3465               	retlw	101	;'e'
   214  0014  3420               	retlw	32	;' '
   215  0015  3449               	retlw	73	;'I'
   216  0016  346E               	retlw	110	;'n'
   217  0017  3469               	retlw	105	;'i'
   218  0018  3474               	retlw	116	;'t'
   219  0019  3469               	retlw	105	;'i'
   220  001A  3461               	retlw	97	;'a'
   221  001B  346C               	retlw	108	;'l'
   222  001C  3469               	retlw	105	;'i'
   223  001D  347A               	retlw	122	;'z'
   224  001E  3465               	retlw	101	;'e'
   225  001F  3464               	retlw	100	;'d'
   226  0020  3420               	retlw	32	;' '
   227  0021  3461               	retlw	97	;'a'
   228  0022  346E               	retlw	110	;'n'
   229  0023  3464               	retlw	100	;'d'
   230  0024  3420               	retlw	32	;' '
   231  0025  3461               	retlw	97	;'a'
   232  0026  3463               	retlw	99	;'c'
   233  0027  3474               	retlw	116	;'t'
   234  0028  3469               	retlw	105	;'i'
   235  0029  3476               	retlw	118	;'v'
   236  002A  3465               	retlw	101	;'e'
   237  002B  3400               	retlw	0
   238  002C                     STR_2:	
   239  002C  3452               	retlw	82	;'R'
   240  002D  3445               	retlw	69	;'E'
   241  002E  3444               	retlw	68	;'D'
   242  002F  3420               	retlw	32	;' '
   243  0030  344C               	retlw	76	;'L'
   244  0031  3445               	retlw	69	;'E'
   245  0032  3444               	retlw	68	;'D'
   246  0033  3420               	retlw	32	;' '
   247  0034  342D               	retlw	45	;'-'
   248  0035  343E               	retlw	62	;'>'
   249  0036  3420               	retlw	32	;' '
   250  0037  344F               	retlw	79	;'O'
   251  0038  344E               	retlw	78	;'N'
   252  0039  3400               	retlw	0
   253  003A                     STR_3:	
   254  003A  3452               	retlw	82	;'R'
   255  003B  3445               	retlw	69	;'E'
   256  003C  3444               	retlw	68	;'D'
   257  003D  3420               	retlw	32	;' '
   258  003E  342D               	retlw	45	;'-'
   259  003F  343E               	retlw	62	;'>'
   260  0040  3420               	retlw	32	;' '
   261  0041  344F               	retlw	79	;'O'
   262  0042  3446               	retlw	70	;'F'
   263  0043  3446               	retlw	70	;'F'
   264  0044  3400               	retlw	0
   265                           
   266                           ; #config settings
   267  0000                     
   268                           	psect	cinit
   269  07FC                     start_initialization:	
   270  07FC                     __initialization:	
   271  07FC                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274  07FC                     __end_of__initialization:	
   275  07FC  0183               	clrf	3
   276  07FD  120A  118A  2FB3   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	cstackCOMMON
   279  0070                     __pcstackCOMMON:	
   280  0070                     ?_Initialize_UART:	
   281  0070                     ??_Initialize_UART:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_UART_send_char:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ??_UART_send_char:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_UART_get_char:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ??_UART_get_char:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_UART_send_string:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_main:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     UART_send_char@bt:	
   303                           ; 1 bytes @ 0x0
   304                           
   305                           
   306                           ; 1 bytes @ 0x0
   307  0070                     	ds	1
   308  0071                     ??_UART_send_string:	
   309                           
   310                           ; 1 bytes @ 0x1
   311  0071                     	ds	1
   312  0072                     UART_send_string@st_pt:	
   313                           
   314                           ; 1 bytes @ 0x2
   315  0072                     	ds	1
   316  0073                     ??_main:	
   317                           
   318                           ; 1 bytes @ 0x3
   319  0073                     	ds	2
   320  0075                     main@get_value:	
   321                           
   322                           ; 2 bytes @ 0x5
   323  0075                     	ds	2
   324                           
   325                           	psect	maintext
   326  07B3                     __pmaintext:	
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 79 in file "newfile.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  get_value       2    5[COMMON] int 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : B00/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   346 ;;      Params:         0       0       0       0       0
   347 ;;      Locals:         2       0       0       0       0
   348 ;;      Temps:          2       0       0       0       0
   349 ;;      Totals:         4       0       0       0       0
   350 ;;Total ram usage:        4 bytes
   351 ;; Hardware stack levels required when called:    2
   352 ;; This function calls:
   353 ;;		_Initialize_UART
   354 ;;		_UART_get_char
   355 ;;		_UART_send_char
   356 ;;		_UART_send_string
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           
   363                           ;psect for function _main
   364  07B3                     _main:	
   365  07B3                     l728:	
   366                           ;incstack = 0
   367                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   368                           
   369                           
   370                           ;newfile.c: 81:     int get_value;;newfile.c: 83:     TRISB = 0x00;
   371  07B3  1683               	bsf	3,5	;RP0=1, select bank1
   372  07B4  1303               	bcf	3,6	;RP1=0, select bank1
   373  07B5  0186               	clrf	6	;volatile
   374  07B6                     l730:	
   375                           
   376                           ;newfile.c: 84:     Initialize_UART();
   377  07B6  120A  118A  277C  120A  118A  	fcall	_Initialize_UART
   378  07BB                     l732:	
   379                           
   380                           ;newfile.c: 86:     UART_send_string("UART Module Initialized and active");
   381  07BB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   382  07BC  120A  118A  2794  120A  118A  	fcall	_UART_send_string
   383  07C1                     l734:	
   384                           
   385                           ;newfile.c: 89:     {;newfile.c: 90:       get_value = UART_get_char();
   386  07C1  120A  118A  276E  120A  118A  	fcall	_UART_get_char
   387  07C6  00F3               	movwf	??_main
   388  07C7  01F4               	clrf	??_main+1
   389  07C8  0873               	movf	??_main,w
   390  07C9  00F5               	movwf	main@get_value
   391  07CA  0874               	movf	??_main+1,w
   392  07CB  00F6               	movwf	main@get_value+1
   393  07CC                     l736:	
   394                           
   395                           ;newfile.c: 92:         if (get_value == '1')
   396  07CC  3031               	movlw	49
   397  07CD  0675               	xorwf	main@get_value,w
   398  07CE  0476               	iorwf	main@get_value+1,w
   399  07CF  1D03               	btfss	3,2
   400  07D0  2FD2               	goto	u81
   401  07D1  2FD3               	goto	u80
   402  07D2                     u81:	
   403  07D2  2FE2               	goto	l744
   404  07D3                     u80:	
   405  07D3                     l738:	
   406                           
   407                           ;newfile.c: 93:         {;newfile.c: 94:             RB3=1;
   408  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   409  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   410  07D5  1586               	bsf	6,3	;volatile
   411  07D6                     l740:	
   412                           
   413                           ;newfile.c: 95:             UART_send_string("RED LED -> ON");
   414  07D6  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   415  07D7  120A  118A  2794  120A  118A  	fcall	_UART_send_string
   416  07DC                     l742:	
   417                           
   418                           ;newfile.c: 96:             UART_send_char(10);
   419  07DC  300A               	movlw	10
   420  07DD  120A  118A  2764  120A  118A  	fcall	_UART_send_char
   421  07E2                     l744:	
   422                           
   423                           ;newfile.c: 99:         if (get_value == '0')
   424  07E2  3030               	movlw	48
   425  07E3  0675               	xorwf	main@get_value,w
   426  07E4  0476               	iorwf	main@get_value+1,w
   427  07E5  1D03               	btfss	3,2
   428  07E6  2FE8               	goto	u91
   429  07E7  2FE9               	goto	u90
   430  07E8                     u91:	
   431  07E8  2FC1               	goto	l734
   432  07E9                     u90:	
   433  07E9                     l746:	
   434                           
   435                           ;newfile.c: 100:         {;newfile.c: 101:            RB3=0;
   436  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   437  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   438  07EB  1186               	bcf	6,3	;volatile
   439  07EC                     l748:	
   440                           
   441                           ;newfile.c: 102:            UART_send_string("RED -> OFF");
   442  07EC  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   443  07ED  120A  118A  2794  120A  118A  	fcall	_UART_send_string
   444  07F2                     l750:	
   445                           
   446                           ;newfile.c: 103:            UART_send_char(10);
   447  07F2  300A               	movlw	10
   448  07F3  120A  118A  2764  120A  118A  	fcall	_UART_send_char
   449  07F8  2FC1               	goto	l734
   450  07F9  120A  118A  2800   	ljmp	start
   451  07FC                     __end_of_main:	
   452                           
   453                           	psect	text1
   454  0794                     __ptext1:	
   455 ;; *************** function _UART_send_string *****************
   456 ;; Defined at:
   457 ;;		line 71 in file "newfile.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;  st_pt           1    wreg     PTR unsigned char 
   460 ;;		 -> STR_3(11), STR_2(14), STR_1(35), 
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  st_pt           1    2[COMMON] PTR unsigned char 
   463 ;;		 -> STR_3(11), STR_2(14), STR_1(35), 
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         1       0       0       0       0
   475 ;;      Temps:          1       0       0       0       0
   476 ;;      Totals:         2       0       0       0       0
   477 ;;Total ram usage:        2 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    1
   480 ;; This function calls:
   481 ;;		_UART_send_char
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function _UART_send_string
   489  0794                     _UART_send_string:	
   490                           
   491                           ;incstack = 0
   492                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   493                           ;UART_send_string@st_pt stored from wreg
   494  0794  00F2               	movwf	UART_send_string@st_pt
   495  0795                     l720:	
   496                           
   497                           ;newfile.c: 71: void UART_send_string(char* st_pt);newfile.c: 72: {;newfile.c: 73:     w
      +                          hile(*st_pt)
   498  0795  2FA6               	goto	l726
   499  0796                     l722:	
   500                           
   501                           ;newfile.c: 74:         UART_send_char(*st_pt++);
   502  0796  0872               	movf	UART_send_string@st_pt,w
   503  0797  0084               	movwf	4
   504  0798  120A  118A  2003  120A  118A  	fcall	stringdir
   505  079D  120A  118A  2764  120A  118A  	fcall	_UART_send_char
   506  07A2                     l724:	
   507  07A2  3001               	movlw	1
   508  07A3  00F1               	movwf	??_UART_send_string
   509  07A4  0871               	movf	??_UART_send_string,w
   510  07A5  07F2               	addwf	UART_send_string@st_pt,f
   511  07A6                     l726:	
   512                           
   513                           ;newfile.c: 73:     while(*st_pt)
   514  07A6  0872               	movf	UART_send_string@st_pt,w
   515  07A7  0084               	movwf	4
   516  07A8  120A  118A  2003  120A  118A  	fcall	stringdir
   517  07AD  3A00               	xorlw	0
   518  07AE  1D03               	skipz
   519  07AF  2FB1               	goto	u71
   520  07B0  2FB2               	goto	u70
   521  07B1                     u71:	
   522  07B1  2F96               	goto	l722
   523  07B2                     u70:	
   524  07B2                     l56:	
   525  07B2  0008               	return
   526  07B3                     __end_of_UART_send_string:	
   527                           
   528                           	psect	text2
   529  0764                     __ptext2:	
   530 ;; *************** function _UART_send_char *****************
   531 ;; Defined at:
   532 ;;		line 48 in file "newfile.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  bt              1    wreg     unsigned char 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  bt              1    0[COMMON] unsigned char 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         1       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         1       0       0       0       0
   550 ;;Total ram usage:        1 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_UART_send_string
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _UART_send_char
   562  0764                     _UART_send_char:	
   563                           
   564                           ;incstack = 0
   565                           ; Regs used in _UART_send_char: [wreg]
   566                           ;UART_send_char@bt stored from wreg
   567  0764  00F0               	movwf	UART_send_char@bt
   568  0765                     l658:	
   569  0765                     l40:	
   570                           ;newfile.c: 48: void UART_send_char(char bt);newfile.c: 49: {;newfile.c: 50:     while(!
      +                          TXIF);
   571                           
   572  0765  1283               	bcf	3,5	;RP0=0, select bank0
   573  0766  1303               	bcf	3,6	;RP1=0, select bank0
   574  0767  1E0C               	btfss	12,4	;volatile
   575  0768  2F6A               	goto	u11
   576  0769  2F6B               	goto	u10
   577  076A                     u11:	
   578  076A  2F65               	goto	l40
   579  076B                     u10:	
   580  076B                     l660:	
   581                           
   582                           ;newfile.c: 51:     TXREG = bt;
   583  076B  0870               	movf	UART_send_char@bt,w
   584  076C  0099               	movwf	25	;volatile
   585  076D                     l43:	
   586  076D  0008               	return
   587  076E                     __end_of_UART_send_char:	
   588                           
   589                           	psect	text3
   590  076E                     __ptext3:	
   591 ;; *************** function _UART_get_char *****************
   592 ;; Defined at:
   593 ;;		line 56 in file "newfile.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      unsigned char 
   600 ;; Registers used:
   601 ;;		wreg
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _UART_get_char
   622  076E                     _UART_get_char:	
   623  076E                     l680:	
   624                           ;incstack = 0
   625                           ; Regs used in _UART_get_char: [wreg]
   626                           
   627                           
   628                           ;newfile.c: 58:     if(OERR)
   629  076E  1283               	bcf	3,5	;RP0=0, select bank0
   630  076F  1303               	bcf	3,6	;RP1=0, select bank0
   631  0770  1C98               	btfss	24,1	;volatile
   632  0771  2F73               	goto	u21
   633  0772  2F74               	goto	u20
   634  0773                     u21:	
   635  0773  2F76               	goto	l47
   636  0774                     u20:	
   637  0774                     l682:	
   638                           
   639                           ;newfile.c: 59:     {;newfile.c: 60:         CREN = 0;
   640  0774  1218               	bcf	24,4	;volatile
   641                           
   642                           ;newfile.c: 61:         CREN = 1;
   643  0775  1618               	bsf	24,4	;volatile
   644  0776                     l47:	
   645  0776  1E8C               	btfss	12,5	;volatile
   646  0777  2F79               	goto	u31
   647  0778  2F7A               	goto	u30
   648  0779                     u31:	
   649  0779  2F76               	goto	l47
   650  077A                     u30:	
   651  077A                     l684:	
   652                           
   653                           ;newfile.c: 66:     return RCREG;
   654  077A  081A               	movf	26,w	;volatile
   655  077B                     l50:	
   656  077B  0008               	return
   657  077C                     __end_of_UART_get_char:	
   658                           
   659                           	psect	text4
   660  077C                     __ptext4:	
   661 ;; *************** function _Initialize_UART *****************
   662 ;; Defined at:
   663 ;;		line 17 in file "newfile.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _Initialize_UART
   692  077C                     _Initialize_UART:	
   693  077C                     l662:	
   694                           ;incstack = 0
   695                           ; Regs used in _Initialize_UART: [wreg]
   696                           
   697                           
   698                           ;newfile.c: 20:     TRISC6 = 0;
   699  077C  1683               	bsf	3,5	;RP0=1, select bank1
   700  077D  1303               	bcf	3,6	;RP1=0, select bank1
   701  077E  1307               	bcf	7,6	;volatile
   702                           
   703                           ;newfile.c: 21:     TRISC7 = 1;
   704  077F  1787               	bsf	7,7	;volatile
   705  0780                     l664:	
   706                           
   707                           ;newfile.c: 26:     SPBRG = ((20000000/16)/9600) - 1;
   708  0780  3081               	movlw	129
   709  0781  0099               	movwf	25	;volatile
   710  0782                     l666:	
   711                           
   712                           ;newfile.c: 27:     BRGH = 1;
   713  0782  1518               	bsf	24,2	;volatile
   714  0783                     l668:	
   715                           
   716                           ;newfile.c: 31:     SYNC = 0;
   717  0783  1218               	bcf	24,4	;volatile
   718  0784                     l670:	
   719                           
   720                           ;newfile.c: 32:     SPEN = 1;
   721  0784  1283               	bcf	3,5	;RP0=0, select bank0
   722  0785  1303               	bcf	3,6	;RP1=0, select bank0
   723  0786  1798               	bsf	24,7	;volatile
   724  0787                     l672:	
   725                           
   726                           ;newfile.c: 36:     TXEN = 1;
   727  0787  1683               	bsf	3,5	;RP0=1, select bank1
   728  0788  1303               	bcf	3,6	;RP1=0, select bank1
   729  0789  1698               	bsf	24,5	;volatile
   730  078A                     l674:	
   731                           
   732                           ;newfile.c: 37:     CREN = 1;
   733  078A  1283               	bcf	3,5	;RP0=0, select bank0
   734  078B  1303               	bcf	3,6	;RP1=0, select bank0
   735  078C  1618               	bsf	24,4	;volatile
   736  078D                     l676:	
   737                           
   738                           ;newfile.c: 41:     TX9 = 0;
   739  078D  1683               	bsf	3,5	;RP0=1, select bank1
   740  078E  1303               	bcf	3,6	;RP1=0, select bank1
   741  078F  1318               	bcf	24,6	;volatile
   742  0790                     l678:	
   743                           
   744                           ;newfile.c: 42:     RX9 = 0;
   745  0790  1283               	bcf	3,5	;RP0=0, select bank0
   746  0791  1303               	bcf	3,6	;RP1=0, select bank0
   747  0792  1318               	bcf	24,6	;volatile
   748  0793                     l37:	
   749  0793  0008               	return
   750  0794                     __end_of_Initialize_UART:	
   751  007E                     btemp	set	126	;btemp
   752  007E                     wtemp0	set	126


Data Sizes:
    Strings     60
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 35
		 -> STR_3(CODE[11]), STR_2(CODE[14]), STR_1(CODE[35]), 


Critical Paths under _main in COMMON

    _main->_UART_send_string
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     219
                                              3 COMMON     4     4      0
                    _Initialize_UART
                      _UART_get_char
                     _UART_send_char
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0     159
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_get_char                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_UART
   _UART_get_char
   _UART_send_char
   _UART_send_string
     _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 07 14:18:33 2020

                        pc 0002                __CFG_CP$OFF 0000                         l40 0765  
                       l50 077B                         l43 076D                         l37 0793  
                       l47 0776                         l56 07B2                         u10 076B  
                       u11 076A                         u20 0774                         u21 0773  
                       u30 077A                         u31 0779                         u70 07B2  
                       u71 07B1                         u80 07D3                         u81 07D2  
                       u90 07E9                         u91 07E8                         fsr 0004  
                      l720 0795                        l722 0796                        l730 07B6  
                      l660 076B                        l724 07A2                        l740 07D6  
                      l732 07BB                        l670 0784                        l662 077C  
                      l726 07A6                        l750 07F2                        l742 07DC  
                      l734 07C1                        l672 0787                        l664 0780  
                      l680 076E                        l744 07E2                        l736 07CC  
                      l728 07B3                        l674 078A                        l666 0782  
                      l682 0774                        l658 0765                        l746 07E9  
                      l738 07D3                        l676 078D                        l668 0783  
                      l684 077A                        l748 07EC                        l678 0790  
                      _RB3 0033               __CFG_CPD$OFF 0000                        _RX9 00C6  
                      _TX9 04C6                        fsr0 0004               __CFG_FOSC$HS 0000  
             __CFG_LVP$OFF 0000                       STR_1 0009                       STR_2 002C  
                     STR_3 003A                       _BRGH 04C2                       _CREN 00C4  
                     _RCIF 0065                       _OERR 00C1                       _SPEN 00C7  
                     _TXEN 04C5                       _TXIF 0064                       _SYNC 04C4  
             __CFG_WRT$OFF 0000                       _main 07B3                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0000  __size_of_UART_send_string 001F  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _RCREG 001A  
                    _SPBRG 0099                      _TRISB 0086                      _TXREG 0019  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 07FC               __end_of_main 07FC                     ??_main 0073  
            main@get_value 0075                     _TRISC6 043E                     _TRISC7 043F  
           __CFG_PWRTE$OFF 0000    __end_of__initialization 07FC             __pcstackCOMMON 0070  
         _UART_send_string 0794   __size_of_Initialize_UART 0018      __end_of_UART_get_char 077C  
               __pmaintext 07B3    __size_of_UART_send_char 000A                 __stringtab 0003  
                  __ptext1 0794                    __ptext2 0764                    __ptext3 076E  
                  __ptext4 077C          ??_Initialize_UART 0070       end_of_initialization 07FC  
 __end_of_UART_send_string 07B3        start_initialization 07FC             _UART_send_char 0764  
   __end_of_UART_send_char 076E                  ___latbits 0002     __size_of_UART_get_char 000E  
          _Initialize_UART 077C           UART_send_char@bt 0070                  __pstrings 0003  
          ?_UART_send_char 0070                __stringbase 0008      UART_send_string@st_pt 0072  
            _UART_get_char 076E          ?_UART_send_string 0070         ??_UART_send_string 0071  
  __end_of_Initialize_UART 0794         __end_of__stringtab 0009             ?_UART_get_char 0070  
            __size_of_main 0049           ?_Initialize_UART 0070                  stringcode 0003  
         ??_UART_send_char 0070            ??_UART_get_char 0070                   stringdir 0003  
                 stringtab 0003  
