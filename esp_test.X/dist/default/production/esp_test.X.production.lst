

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 11 12:22:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.10
    32                           ; Generated 31/07/2019 GMT
    33                           ; 
    34                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185                           
   186                           	psect	idataBANK0
   187  0418                     __pidataBANK0:	
   188                           
   189                           ;initializer for __esp8266_waitResponse@F1101
   190  0418  343A               	retlw	low (STR_8| (0+32768))
   191  0419  3489               	retlw	high (STR_8| (0+32768))
   192  041A  340E               	retlw	low (STR_32| (0+32768))
   193  041B  3489               	retlw	high (STR_32| (0+32768))
   194  041C  341E               	retlw	low (STR_33| (0+32768))
   195  041D  3489               	retlw	high (STR_33| (0+32768))
   196  041E  34DF               	retlw	low (STR_34| (0+32768))
   197  041F  3488               	retlw	high (STR_34| (0+32768))
   198  0420  34FA               	retlw	low (STR_35| (0+32768))
   199  0421  3488               	retlw	high (STR_35| (0+32768))
   200  0422  3401               	retlw	low (STR_36| (0+32768))
   201  0423  3489               	retlw	high (STR_36| (0+32768))
   202                           
   203                           	psect	stringtext
   204  0800                     __pstringtext:	
   205  0800                     stringtab:	
   206  0800                     __stringtab:	
   207                           
   208                           ;	String table - string pointers are 2 bytes each
   209  0800  1BFF               	btfsc	btemp+1,7
   210  0801  280A               	ljmp	stringcode
   211  0802  1383               	bcf	3,7
   212  0803  187F               	btfsc	btemp+1,0
   213  0804  1783               	bsf	3,7
   214  0805  0800               	movf	0,w
   215  0806  0A84               	incf	4,f
   216  0807  1903               	skipnz
   217  0808  0AFF               	incf	btemp+1,f
   218  0809  0008               	return
   219  080A                     stringcode:	
   220  080A  087F               	movf	btemp+1,w
   221  080B  397F               	andlw	127
   222  080C  008A               	movwf	10
   223  080D  0804               	movf	4,w
   224  080E  0A84               	incf	4,f
   225  080F  1903               	skipnz
   226  0810  0AFF               	incf	btemp+1,f
   227  0811  0082               	movwf	2
   228  0812                     __stringbase:	
   229  0812                     __end_of__stringtab:	
   230  0812                     __esp8266_waitResponse@responses:	
   231  0812  3401               	retlw	1
   232  0813  3402               	retlw	2
   233  0814  3403               	retlw	3
   234  0815  3404               	retlw	4
   235  0816  3405               	retlw	5
   236  0817  3406               	retlw	6
   237  0818                     __end_of__esp8266_waitResponse@responses:	
   238  0818                     __esp8266_waitResponse@lengths:	
   239  0818  3402               	retlw	2
   240  0819  3405               	retlw	5
   241  081A  3404               	retlw	4
   242  081B  3409               	retlw	9
   243  081C  3406               	retlw	6
   244  081D  3406               	retlw	6
   245  081E                     __end_of__esp8266_waitResponse@lengths:	
   246  001A                     _RCREG	set	26
   247  0019                     _TXREG	set	25
   248  0065                     _RCIF	set	101
   249  00C1                     _OERR	set	193
   250  0064                     _TXIF	set	100
   251  00C6                     _RX9	set	198
   252  00C4                     _CREN	set	196
   253  00C7                     _SPEN	set	199
   254  0043                     _RD3	set	67
   255  0042                     _RD2	set	66
   256  0047                     _RD7	set	71
   257  0046                     _RD6	set	70
   258  0045                     _RD5	set	69
   259  0044                     _RD4	set	68
   260  0088                     _TRISD	set	136
   261  0099                     _SPBRG	set	153
   262  04C6                     _TX9	set	1222
   263  04C5                     _TXEN	set	1221
   264  04C4                     _SYNC	set	1220
   265  04C2                     _BRGH	set	1218
   266  043F                     _TRISC7	set	1087
   267  043E                     _TRISC6	set	1086
   268  081E                     STR_40:	
   269  081E  3445               	retlw	69	;'E'
   270  081F  3453               	retlw	83	;'S'
   271  0820  3450               	retlw	80	;'P'
   272  0821  3420               	retlw	32	;' '
   273  0822  3469               	retlw	105	;'i'
   274  0823  3473               	retlw	115	;'s'
   275  0824  3420               	retlw	32	;' '
   276  0825  3463               	retlw	99	;'c'
   277  0826  346F               	retlw	111	;'o'
   278  0827  346E               	retlw	110	;'n'
   279  0828  346E               	retlw	110	;'n'
   280  0829  3465               	retlw	101	;'e'
   281  082A  3463               	retlw	99	;'c'
   282  082B  3474               	retlw	116	;'t'
   283  082C  3465               	retlw	101	;'e'
   284  082D  3464               	retlw	100	;'d'
   285  082E  3400               	retlw	0
   286  082F                     STR_38:	
   287  082F  3450               	retlw	80	;'P'
   288  0830  3441               	retlw	65	;'A'
   289  0831  3452               	retlw	82	;'R'
   290  0832  344B               	retlw	75	;'K'
   291  0833  3449               	retlw	73	;'I'
   292  0834  344E               	retlw	78	;'N'
   293  0835  3447               	retlw	71	;'G'
   294  0836  3420               	retlw	32	;' '
   295  0837  3453               	retlw	83	;'S'
   296  0838  3459               	retlw	89	;'Y'
   297  0839  3453               	retlw	83	;'S'
   298  083A  3454               	retlw	84	;'T'
   299  083B  3445               	retlw	69	;'E'
   300  083C  344D               	retlw	77	;'M'
   301  083D  3400               	retlw	0
   302  083E                     STR_18:	
   303  083E  3441               	retlw	65	;'A'
   304  083F  3454               	retlw	84	;'T'
   305  0840  342B               	retlw	43	;'+'
   306  0841  3443               	retlw	67	;'C'
   307  0842  3449               	retlw	73	;'I'
   308  0843  3450               	retlw	80	;'P'
   309  0844  3453               	retlw	83	;'S'
   310  0845  3454               	retlw	84	;'T'
   311  0846  3441               	retlw	65	;'A'
   312  0847  3452               	retlw	82	;'R'
   313  0848  3454               	retlw	84	;'T'
   314  0849  343D               	retlw	61	;'='
   315  084A  3422               	retlw	34	;'"'
   316  084B  3400               	retlw	0
   317  084C                     STR_41:	
   318  084C  3445               	retlw	69	;'E'
   319  084D  3453               	retlw	83	;'S'
   320  084E  3450               	retlw	80	;'P'
   321  084F  3420               	retlw	32	;' '
   322  0850  3473               	retlw	115	;'s'
   323  0851  3465               	retlw	101	;'e'
   324  0852  3474               	retlw	116	;'t'
   325  0853  3420               	retlw	32	;' '
   326  0854  3461               	retlw	97	;'a'
   327  0855  3473               	retlw	115	;'s'
   328  0856  3420               	retlw	32	;' '
   329  0857  3441               	retlw	65	;'A'
   330  0858  3450               	retlw	80	;'P'
   331  0859  3400               	retlw	0
   332  085A                     STR_37:	
   333  085A  3449               	retlw	73	;'I'
   334  085B  344F               	retlw	79	;'O'
   335  085C  3454               	retlw	84	;'T'
   336  085D  3420               	retlw	32	;' '
   337  085E  3442               	retlw	66	;'B'
   338  085F  3441               	retlw	65	;'A'
   339  0860  3453               	retlw	83	;'S'
   340  0861  3445               	retlw	69	;'E'
   341  0862  3444               	retlw	68	;'D'
   342  0863  3420               	retlw	32	;' '
   343  0864  3443               	retlw	67	;'C'
   344  0865  3441               	retlw	65	;'A'
   345  0866  3452               	retlw	82	;'R'
   346  0867  3400               	retlw	0
   347  0868                     STR_44:	
   348  0868  3441               	retlw	65	;'A'
   349  0869  3450               	retlw	80	;'P'
   350  086A  3420               	retlw	32	;' '
   351  086B  3463               	retlw	99	;'c'
   352  086C  346F               	retlw	111	;'o'
   353  086D  346E               	retlw	110	;'n'
   354  086E  3466               	retlw	102	;'f'
   355  086F  3469               	retlw	105	;'i'
   356  0870  3467               	retlw	103	;'g'
   357  0871  3475               	retlw	117	;'u'
   358  0872  3472               	retlw	114	;'r'
   359  0873  3465               	retlw	101	;'e'
   360  0874  3464               	retlw	100	;'d'
   361  0875  3400               	retlw	0
   362  0876                     STR_39:	
   363  0876  3445               	retlw	69	;'E'
   364  0877  3453               	retlw	83	;'S'
   365  0878  3450               	retlw	80	;'P'
   366  0879  3420               	retlw	32	;' '
   367  087A  346E               	retlw	110	;'n'
   368  087B  346F               	retlw	111	;'o'
   369  087C  3474               	retlw	116	;'t'
   370  087D  3420               	retlw	32	;' '
   371  087E  3466               	retlw	102	;'f'
   372  087F  346F               	retlw	111	;'o'
   373  0880  3475               	retlw	117	;'u'
   374  0881  346E               	retlw	110	;'n'
   375  0882  3464               	retlw	100	;'d'
   376  0883  3400               	retlw	0
   377  0884                     STR_42:	
   378  0884  3443               	retlw	67	;'C'
   379  0885  3469               	retlw	105	;'i'
   380  0886  3472               	retlw	114	;'r'
   381  0887  3463               	retlw	99	;'c'
   382  0888  3475               	retlw	117	;'u'
   383  0889  3469               	retlw	105	;'i'
   384  088A  3474               	retlw	116	;'t'
   385  088B  3444               	retlw	68	;'D'
   386  088C  3469               	retlw	105	;'i'
   387  088D  3467               	retlw	103	;'g'
   388  088E  3465               	retlw	101	;'e'
   389  088F  3473               	retlw	115	;'s'
   390  0890  3474               	retlw	116	;'t'
   391  0891  3400               	retlw	0
   392  0892                     STR_26:	
   393  0892  3441               	retlw	65	;'A'
   394  0893  3454               	retlw	84	;'T'
   395  0894  342B               	retlw	43	;'+'
   396  0895  3443               	retlw	67	;'C'
   397  0896  3449               	retlw	73	;'I'
   398  0897  3450               	retlw	80	;'P'
   399  0898  3453               	retlw	83	;'S'
   400  0899  3445               	retlw	69	;'E'
   401  089A  344E               	retlw	78	;'N'
   402  089B  3444               	retlw	68	;'D'
   403  089C  343D               	retlw	61	;'='
   404  089D  3400               	retlw	0
   405  089E                     STR_14:	
   406  089E  3441               	retlw	65	;'A'
   407  089F  3454               	retlw	84	;'T'
   408  08A0  342B               	retlw	43	;'+'
   409  08A1  3443               	retlw	67	;'C'
   410  08A2  3457               	retlw	87	;'W'
   411  08A3  3451               	retlw	81	;'Q'
   412  08A4  3441               	retlw	65	;'A'
   413  08A5  3450               	retlw	80	;'P'
   414  08A6  340D               	retlw	13
   415  08A7  340A               	retlw	10
   416  08A8  3400               	retlw	0
   417  08A9                     STR_16:	
   418  08A9  3441               	retlw	65	;'A'
   419  08AA  3454               	retlw	84	;'T'
   420  08AB  342B               	retlw	43	;'+'
   421  08AC  3443               	retlw	67	;'C'
   422  08AD  3449               	retlw	73	;'I'
   423  08AE  3446               	retlw	70	;'F'
   424  08AF  3453               	retlw	83	;'S'
   425  08B0  3452               	retlw	82	;'R'
   426  08B1  340D               	retlw	13
   427  08B2  340A               	retlw	10
   428  08B3  3400               	retlw	0
   429  08B4                     STR_11:	
   430  08B4  3441               	retlw	65	;'A'
   431  08B5  3454               	retlw	84	;'T'
   432  08B6  342B               	retlw	43	;'+'
   433  08B7  3443               	retlw	67	;'C'
   434  08B8  3457               	retlw	87	;'W'
   435  08B9  344A               	retlw	74	;'J'
   436  08BA  3441               	retlw	65	;'A'
   437  08BB  3450               	retlw	80	;'P'
   438  08BC  343D               	retlw	61	;'='
   439  08BD  3422               	retlw	34	;'"'
   440  08BE  3400               	retlw	0
   441  08BF                     STR_1:	
   442  08BF  3441               	retlw	65	;'A'
   443  08C0  3454               	retlw	84	;'T'
   444  08C1  342B               	retlw	43	;'+'
   445  08C2  3443               	retlw	67	;'C'
   446  08C3  3457               	retlw	87	;'W'
   447  08C4  3453               	retlw	83	;'S'
   448  08C5  3441               	retlw	65	;'A'
   449  08C6  3450               	retlw	80	;'P'
   450  08C7  343D               	retlw	61	;'='
   451  08C8  3422               	retlw	34	;'"'
   452  08C9  3400               	retlw	0
   453  08CA                     STR_9:	
   454  08CA  3441               	retlw	65	;'A'
   455  08CB  3454               	retlw	84	;'T'
   456  08CC  342B               	retlw	43	;'+'
   457  08CD  3443               	retlw	67	;'C'
   458  08CE  3457               	retlw	87	;'W'
   459  08CF  344D               	retlw	77	;'M'
   460  08D0  344F               	retlw	79	;'O'
   461  08D1  3444               	retlw	68	;'D'
   462  08D2  3445               	retlw	69	;'E'
   463  08D3  343D               	retlw	61	;'='
   464  08D4  3400               	retlw	0
   465  08D5                     STR_43:	
   466  08D5  3436               	retlw	54	;'6'
   467  08D6  3431               	retlw	49	;'1'
   468  08D7  3439               	retlw	57	;'9'
   469  08D8  3430               	retlw	48	;'0'
   470  08D9  3430               	retlw	48	;'0'
   471  08DA  3437               	retlw	55	;'7'
   472  08DB  3431               	retlw	49	;'1'
   473  08DC  3432               	retlw	50	;'2'
   474  08DD  3433               	retlw	51	;'3'
   475  08DE  3400               	retlw	0
   476  08DF                     STR_34:	
   477  08DF  346E               	retlw	110	;'n'
   478  08E0  346F               	retlw	111	;'o'
   479  08E1  3420               	retlw	32	;' '
   480  08E2  3463               	retlw	99	;'c'
   481  08E3  3468               	retlw	104	;'h'
   482  08E4  3461               	retlw	97	;'a'
   483  08E5  346E               	retlw	110	;'n'
   484  08E6  3467               	retlw	103	;'g'
   485  08E7  3465               	retlw	101	;'e'
   486  08E8  3400               	retlw	0
   487  08E9                     STR_5:	
   488  08E9  3441               	retlw	65	;'A'
   489  08EA  3454               	retlw	84	;'T'
   490  08EB  342B               	retlw	43	;'+'
   491  08EC  3452               	retlw	82	;'R'
   492  08ED  3453               	retlw	83	;'S'
   493  08EE  3454               	retlw	84	;'T'
   494  08EF  340D               	retlw	13
   495  08F0  340A               	retlw	10
   496  08F1  3400               	retlw	0
   497  08F2                     STR_3:	
   498  08F2  3422               	retlw	34	;'"'
   499  08F3  342C               	retlw	44	;','
   500  08F4  3435               	retlw	53	;'5'
   501  08F5  342C               	retlw	44	;','
   502  08F6  3433               	retlw	51	;'3'
   503  08F7  340D               	retlw	13
   504  08F8  340A               	retlw	10
   505  08F9  3400               	retlw	0
   506  08FA                     STR_35:	
   507  08FA  344C               	retlw	76	;'L'
   508  08FB  3469               	retlw	105	;'i'
   509  08FC  346E               	retlw	110	;'n'
   510  08FD  346B               	retlw	107	;'k'
   511  08FE  3465               	retlw	101	;'e'
   512  08FF  3464               	retlw	100	;'d'
   513  0900  3400               	retlw	0
   514  0901                     STR_36:	
   515  0901  3455               	retlw	85	;'U'
   516  0902  346E               	retlw	110	;'n'
   517  0903  346C               	retlw	108	;'l'
   518  0904  3469               	retlw	105	;'i'
   519  0905  346E               	retlw	110	;'n'
   520  0906  346B               	retlw	107	;'k'
   521  0907  3400               	retlw	0
   522  0908                     STR_28:	
   523  0908  342B               	retlw	43	;'+'
   524  0909  3449               	retlw	73	;'I'
   525  090A  3450               	retlw	80	;'P'
   526  090B  3444               	retlw	68	;'D'
   527  090C  342C               	retlw	44	;','
   528  090D  3400               	retlw	0
   529  090E                     STR_32:	
   530  090E  3472               	retlw	114	;'r'
   531  090F  3465               	retlw	101	;'e'
   532  0910  3461               	retlw	97	;'a'
   533  0911  3464               	retlw	100	;'d'
   534  0912  3479               	retlw	121	;'y'
   535  0913  3400               	retlw	0
   536  0914                     STR_29:	
   537  0914  340D               	retlw	13
   538  0915  340A               	retlw	10
   539  0916  340D               	retlw	13
   540  0917  340A               	retlw	10
   541  0918  3400               	retlw	0
   542  0919                     STR_4:	
   543  0919  3441               	retlw	65	;'A'
   544  091A  3454               	retlw	84	;'T'
   545  091B  340D               	retlw	13
   546  091C  340A               	retlw	10
   547  091D  3400               	retlw	0
   548  091E                     STR_33:	
   549  091E  3446               	retlw	70	;'F'
   550  091F  3441               	retlw	65	;'A'
   551  0920  3449               	retlw	73	;'I'
   552  0921  344C               	retlw	76	;'L'
   553  0922  3400               	retlw	0
   554  0923                     STR_13:	
   555  0923  3422               	retlw	34	;'"'
   556  0924  340D               	retlw	13
   557  0925  340A               	retlw	10
   558  0926  3400               	retlw	0
   559  0927                     STR_2:	
   560  0927  3422               	retlw	34	;'"'
   561  0928  342C               	retlw	44	;','
   562  0929  3422               	retlw	34	;'"'
   563  092A  3400               	retlw	0
   564  092B                     STR_6:	
   565  092B  3441               	retlw	65	;'A'
   566  092C  3454               	retlw	84	;'T'
   567  092D  3445               	retlw	69	;'E'
   568  092E  3400               	retlw	0
   569  092F                     STR_19:	
   570  092F  3454               	retlw	84	;'T'
   571  0930  3443               	retlw	67	;'C'
   572  0931  3450               	retlw	80	;'P'
   573  0932  3400               	retlw	0
   574  0933                     STR_20:	
   575  0933  3455               	retlw	85	;'U'
   576  0934  3444               	retlw	68	;'D'
   577  0935  3450               	retlw	80	;'P'
   578  0936  3400               	retlw	0
   579  0937                     STR_22:	
   580  0937  3422               	retlw	34	;'"'
   581  0938  342C               	retlw	44	;','
   582  0939  3400               	retlw	0
   583  093A                     STR_8:	
   584  093A  344F               	retlw	79	;'O'
   585  093B  344B               	retlw	75	;'K'
   586  093C  3400               	retlw	0
   587  093D                     STR_23:	
   588  093D  3425               	retlw	37	;'%'
   589  093E  3475               	retlw	117	;'u'
   590  093F  3400               	retlw	0
   591  0916                     
   592                           ; #config settings
   593  0000                     
   594                           	psect	cinit
   595  07E6                     start_initialization:	
   596  07E6                     __initialization:	
   597                           
   598                           ; Initialize objects allocated to BANK0
   599  07E6  1383               	bcf	3,7	;select IRP bank0
   600  07E7  3056               	movlw	low (__pdataBANK0+12)
   601  07E8  00FD               	movwf	btemp+-1
   602  07E9  3004               	movlw	high __pidataBANK0
   603  07EA  00FE               	movwf	btemp
   604  07EB  3018               	movlw	low __pidataBANK0
   605  07EC  00FF               	movwf	btemp+1
   606  07ED  304A               	movlw	low __pdataBANK0
   607  07EE  0084               	movwf	4
   608  07EF  120A  118A  2443  120A  118A  	fcall	init_ram0
   609                           
   610                           ; Clear objects allocated to BANK0
   611  07F4  3039               	movlw	low __pbssBANK0
   612  07F5  0084               	movwf	4
   613  07F6  304A               	movlw	low (__pbssBANK0+17)
   614  07F7  120A  118A  2406  120A  118A  	fcall	clear_ram0
   615  07FC                     end_of_initialization:	
   616                           ;End of C runtime variable initialization code
   617                           
   618  07FC                     __end_of__initialization:	
   619  07FC  0183               	clrf	3
   620  07FD  120A  118A  2F0B   	ljmp	_main	;jump to C main() function
   621                           
   622                           	psect	bssBANK0
   623  0039                     __pbssBANK0:	
   624  0039                     __esp8266_waitResponse@F1098:	
   625  0039                     	ds	6
   626  003F                     esp8266_send@F1079:	
   627  003F                     	ds	6
   628  0045                     esp8266_start@F1075:	
   629  0045                     	ds	5
   630                           
   631                           	psect	dataBANK0
   632  004A                     __pdataBANK0:	
   633  004A                     __esp8266_waitResponse@F1101:	
   634  004A                     	ds	12
   635                           
   636                           	psect	inittext
   637  043F                     init_fetch0:	
   638                           ;	Called with low address in FSR and high address in W
   639                           
   640  043F  087E               	movf	btemp,w
   641  0440  008A               	movwf	10
   642  0441  087F               	movf	btemp+1,w
   643  0442  0082               	movwf	2
   644  0443                     init_ram0:	
   645                           ;Called with:
   646                           ;	high address of idata address in btemp 
   647                           ;	low address of idata address in btemp+1 
   648                           ;	low address of data in FSR
   649                           ;	high address + 1 of data in btemp-1
   650                           
   651  0443  120A  118A  243F  120A  118A  	fcall	init_fetch0
   652  0448  0080               	movwf	0
   653  0449  0A84               	incf	4,f
   654  044A  0804               	movf	4,w
   655  044B  067D               	xorwf	btemp+-1,w
   656  044C  1903               	btfsc	3,2
   657  044D  3400               	retlw	0
   658  044E  0AFF               	incf	btemp+1,f
   659  044F  1903               	btfsc	3,2
   660  0450  0AFE               	incf	btemp,f
   661  0451  2C43               	goto	init_ram0
   662                           
   663                           	psect	clrtext
   664  0406                     clear_ram0:	
   665                           ;	Called with FSR containing the base address, and
   666                           ;	W with the last address+1
   667                           
   668  0406  0064               	clrwdt	;clear the watchdog before getting into this loop
   669  0407                     clrloop0:	
   670  0407  0180               	clrf	0	;clear RAM location pointed to by FSR
   671  0408  0A84               	incf	4,f	;increment pointer
   672  0409  0604               	xorwf	4,w	;XOR with final address
   673  040A  1903               	btfsc	3,2	;have we reached the end yet?
   674  040B  3400               	retlw	0	;all done for this memory range, return
   675  040C  0604               	xorwf	4,w	;XOR again to restore value
   676  040D  2C07               	goto	clrloop0	;do the next byte
   677                           
   678                           	psect	cstackCOMMON
   679  0070                     __pcstackCOMMON:	
   680  0070                     ?__esp8266_waitResponse:	
   681  0070                     ??__esp8266_waitResponse:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_Lcd_SetBit:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ??_Lcd_SetBit:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_Lcd_Cmd:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_Lcd_Clear:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_Lcd_Start:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_Lcd_Print_Char:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_Initialize_ESP8266:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ??_Initialize_ESP8266:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?__esp8266_putch:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ??__esp8266_putch:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?__esp8266_getch:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ??__esp8266_getch:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_esp8266_isStarted:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_esp8266_mode:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_main:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     Lcd_SetBit@data_bit:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     __esp8266_putch@bt:	
   733                           ; 1 bytes @ 0x0
   734                           
   735                           
   736                           ; 1 bytes @ 0x0
   737  0070                     	ds	1
   738  0071                     ?__esp8266_print:	
   739  0071                     ??_Lcd_Cmd:	
   740                           ; 1 bytes @ 0x1
   741                           
   742  0071                     ??_Lcd_Print_Char:	
   743                           ; 1 bytes @ 0x1
   744                           
   745  0071                     __esp8266_print@ptr:	
   746                           ; 1 bytes @ 0x1
   747                           
   748                           
   749                           ; 2 bytes @ 0x1
   750  0071                     	ds	1
   751  0072                     Lcd_Print_Char@Lower_Nibble:	
   752                           
   753                           ; 1 bytes @ 0x2
   754  0072                     	ds	1
   755  0073                     ??__esp8266_print:	
   756  0073                     Lcd_Cmd@a:	
   757                           ; 1 bytes @ 0x3
   758                           
   759  0073                     Lcd_Print_Char@Upper_Nibble:	
   760                           ; 1 bytes @ 0x3
   761                           
   762                           
   763                           ; 1 bytes @ 0x3
   764  0073                     	ds	1
   765  0074                     ??_Lcd_Clear:	
   766  0074                     ?_Lcd_Set_Cursor:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ??_Lcd_Start:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     ?_esp8266_config_softAP:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     ??_esp8266_isStarted:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     ??_esp8266_mode:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     Lcd_Set_Cursor@b:	
   782                           ; 1 bytes @ 0x4
   783                           
   784  0074                     Lcd_Print_Char@data:	
   785                           ; 1 bytes @ 0x4
   786                           
   787  0074                     esp8266_mode@mode:	
   788                           ; 1 bytes @ 0x4
   789                           
   790  0074                     esp8266_config_softAP@softssid:	
   791                           ; 1 bytes @ 0x4
   792                           
   793                           
   794                           ; 2 bytes @ 0x4
   795  0074                     	ds	1
   796  0075                     ??_Lcd_Set_Cursor:	
   797  0075                     Lcd_Print_Char@i:	
   798                           ; 1 bytes @ 0x5
   799                           
   800                           
   801                           ; 2 bytes @ 0x5
   802  0075                     	ds	1
   803  0076                     esp8266_config_softAP@softpass:	
   804                           
   805                           ; 2 bytes @ 0x6
   806  0076                     	ds	1
   807  0077                     Lcd_Set_Cursor@a:	
   808  0077                     Lcd_Print_Char@i_97:	
   809                           ; 1 bytes @ 0x7
   810                           
   811                           
   812                           ; 2 bytes @ 0x7
   813  0077                     	ds	1
   814  0078                     ??_esp8266_config_softAP:	
   815  0078                     Lcd_Set_Cursor@z:	
   816                           ; 1 bytes @ 0x8
   817                           
   818                           
   819                           ; 1 bytes @ 0x8
   820  0078                     	ds	1
   821  0079                     ?_Lcd_Print_String:	
   822  0079                     Lcd_Set_Cursor@y:	
   823                           ; 1 bytes @ 0x9
   824                           
   825  0079                     Lcd_Print_String@a:	
   826                           ; 1 bytes @ 0x9
   827                           
   828                           
   829                           ; 2 bytes @ 0x9
   830  0079                     	ds	1
   831  007A                     Lcd_Set_Cursor@temp:	
   832                           
   833                           ; 1 bytes @ 0xA
   834  007A                     	ds	1
   835  007B                     ??_Lcd_Print_String:	
   836                           
   837                           ; 1 bytes @ 0xB
   838  007B                     	ds	3
   839                           
   840                           	psect	cstackBANK0
   841  0020                     __pcstackBANK0:	
   842  0020                     Lcd_Print_String@i:	
   843  0020                     __esp8266_waitResponse@strings:	
   844                           ; 2 bytes @ 0x0
   845                           
   846                           
   847                           ; 12 bytes @ 0x0
   848  0020                     	ds	12
   849  002C                     __esp8266_waitResponse@so_far:	
   850                           
   851                           ; 6 bytes @ 0xC
   852  002C                     	ds	6
   853  0032                     __esp8266_waitResponse@received:	
   854                           
   855                           ; 1 bytes @ 0x12
   856  0032                     	ds	1
   857  0033                     __esp8266_waitResponse@response:	
   858                           
   859                           ; 1 bytes @ 0x13
   860  0033                     	ds	1
   861  0034                     __esp8266_waitResponse@continue_loop:	
   862                           
   863                           ; 1 bytes @ 0x14
   864  0034                     	ds	1
   865  0035                     __esp8266_waitResponse@i:	
   866                           
   867                           ; 1 bytes @ 0x15
   868  0035                     	ds	1
   869  0036                     ??_main:	
   870                           
   871                           ; 1 bytes @ 0x16
   872  0036                     	ds	3
   873                           
   874                           	psect	maintext
   875  070B                     __pmaintext:	
   876 ;;
   877 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   878 ;;
   879 ;; *************** function _main *****************
   880 ;; Defined at:
   881 ;;		line 535 in file "esp_test.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : B00/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0
   897 ;;      Temps:          0       3       0       0       0
   898 ;;      Totals:         0       3       0       0       0
   899 ;;Total ram usage:        3 bytes
   900 ;; Hardware stack levels required when called:    3
   901 ;; This function calls:
   902 ;;		_Initialize_ESP8266
   903 ;;		_Lcd_Clear
   904 ;;		_Lcd_Print_String
   905 ;;		_Lcd_Set_Cursor
   906 ;;		_Lcd_Start
   907 ;;		_esp8266_config_softAP
   908 ;;		_esp8266_isStarted
   909 ;;		_esp8266_mode
   910 ;; This function is called by:
   911 ;;		Startup code after reset
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function _main
   917  070B                     _main:	
   918  070B                     l1590:	
   919                           ;incstack = 0
   920                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   921                           
   922                           
   923                           ;esp_test.c: 537:     TRISD = 0x00;
   924  070B  1683               	bsf	3,5	;RP0=1, select bank1
   925  070C  1303               	bcf	3,6	;RP1=0, select bank1
   926  070D  0188               	clrf	8	;volatile
   927  070E                     l1592:	
   928                           
   929                           ;esp_test.c: 538:     Lcd_Start();
   930  070E  120A  118A  257B  120A  118A  	fcall	_Lcd_Start
   931  0713                     l1594:	
   932                           
   933                           ;esp_test.c: 539:     Initialize_ESP8266();
   934  0713  120A  118A  2468  120A  118A  	fcall	_Initialize_ESP8266
   935  0718                     l1596:	
   936                           
   937                           ;esp_test.c: 540:     Lcd_Set_Cursor(1,1);
   938  0718  01F4               	clrf	Lcd_Set_Cursor@b
   939  0719  0AF4               	incf	Lcd_Set_Cursor@b,f
   940  071A  3001               	movlw	1
   941  071B  120A  118A  25C9  120A  118A  	fcall	_Lcd_Set_Cursor
   942  0720                     l1598:	
   943                           
   944                           ;esp_test.c: 541:     Lcd_Print_String("IOT BASED CAR");
   945  0720  305A               	movlw	low (STR_37| (0+32768))
   946  0721  00F9               	movwf	Lcd_Print_String@a
   947  0722  3088               	movlw	high (STR_37| (0+32768))
   948  0723  00FA               	movwf	Lcd_Print_String@a+1
   949  0724  120A  118A  2535  120A  118A  	fcall	_Lcd_Print_String
   950  0729                     l1600:	
   951                           
   952                           ;esp_test.c: 542:     Lcd_Set_Cursor(2,1);
   953  0729  01F4               	clrf	Lcd_Set_Cursor@b
   954  072A  0AF4               	incf	Lcd_Set_Cursor@b,f
   955  072B  3002               	movlw	2
   956  072C  120A  118A  25C9  120A  118A  	fcall	_Lcd_Set_Cursor
   957  0731                     l1602:	
   958                           
   959                           ;esp_test.c: 543:     Lcd_Print_String("PARKING SYSTEM");
   960  0731  302F               	movlw	low (STR_38| (0+32768))
   961  0732  00F9               	movwf	Lcd_Print_String@a
   962  0733  3088               	movlw	high (STR_38| (0+32768))
   963  0734  00FA               	movwf	Lcd_Print_String@a+1
   964  0735  120A  118A  2535  120A  118A  	fcall	_Lcd_Print_String
   965  073A                     l1604:	
   966                           
   967                           ;esp_test.c: 544:    _delay((unsigned long)((1500)*(8000000/4000.0)));
   968  073A  3010               	movlw	16
   969  073B  1283               	bcf	3,5	;RP0=0, select bank0
   970  073C  1303               	bcf	3,6	;RP1=0, select bank0
   971  073D  00B8               	movwf	??_main+2
   972  073E  3039               	movlw	57
   973  073F  00B7               	movwf	??_main+1
   974  0740  300D               	movlw	13
   975  0741  00B6               	movwf	??_main
   976  0742                     u987:	
   977  0742  0BB6               	decfsz	??_main,f
   978  0743  2F42               	goto	u987
   979  0744  0BB7               	decfsz	??_main+1,f
   980  0745  2F42               	goto	u987
   981  0746  0BB8               	decfsz	??_main+2,f
   982  0747  2F42               	goto	u987
   983  0748                     l1606:	
   984                           
   985                           ;esp_test.c: 545:     Lcd_Clear();
   986  0748  120A  118A  2424  120A  118A  	fcall	_Lcd_Clear
   987  074D                     l1608:	
   988                           
   989                           ;esp_test.c: 552:     {;esp_test.c: 553:     Lcd_Set_Cursor(1,1);
   990  074D  01F4               	clrf	Lcd_Set_Cursor@b
   991  074E  0AF4               	incf	Lcd_Set_Cursor@b,f
   992  074F  3001               	movlw	1
   993  0750  120A  118A  25C9  120A  118A  	fcall	_Lcd_Set_Cursor
   994  0755                     l1610:	
   995                           
   996                           ;esp_test.c: 554:     Lcd_Print_String("ESP not found");
   997  0755  3076               	movlw	low (STR_39| (0+32768))
   998  0756  00F9               	movwf	Lcd_Print_String@a
   999  0757  3088               	movlw	high (STR_39| (0+32768))
  1000  0758  00FA               	movwf	Lcd_Print_String@a+1
  1001  0759  120A  118A  2535  120A  118A  	fcall	_Lcd_Print_String
  1002  075E                     l1612:	
  1003                           
  1004                           ;esp_test.c: 555:     }
  1005  075E  120A  118A  2452  120A  118A  	fcall	_esp8266_isStarted
  1006  0763  3A00               	xorlw	0
  1007  0764  1903               	skipnz
  1008  0765  2F67               	goto	u971
  1009  0766  2F68               	goto	u970
  1010  0767                     u971:	
  1011  0767  2F4D               	goto	l1608
  1012  0768                     u970:	
  1013  0768                     l1614:	
  1014                           
  1015                           ;esp_test.c: 557:     Lcd_Set_Cursor(1,1);
  1016  0768  01F4               	clrf	Lcd_Set_Cursor@b
  1017  0769  0AF4               	incf	Lcd_Set_Cursor@b,f
  1018  076A  3001               	movlw	1
  1019  076B  120A  118A  25C9  120A  118A  	fcall	_Lcd_Set_Cursor
  1020  0770                     l1616:	
  1021                           
  1022                           ;esp_test.c: 558:     Lcd_Print_String("ESP is connected");
  1023  0770  301E               	movlw	low (STR_40| (0+32768))
  1024  0771  00F9               	movwf	Lcd_Print_String@a
  1025  0772  3088               	movlw	high (STR_40| (0+32768))
  1026  0773  00FA               	movwf	Lcd_Print_String@a+1
  1027  0774  120A  118A  2535  120A  118A  	fcall	_Lcd_Print_String
  1028  0779                     l1618:	
  1029                           
  1030                           ;esp_test.c: 559:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  1031  0779  3010               	movlw	16
  1032  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1033  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1034  077C  00B8               	movwf	??_main+2
  1035  077D  3039               	movlw	57
  1036  077E  00B7               	movwf	??_main+1
  1037  077F  300D               	movlw	13
  1038  0780  00B6               	movwf	??_main
  1039  0781                     u997:	
  1040  0781  0BB6               	decfsz	??_main,f
  1041  0782  2F81               	goto	u997
  1042  0783  0BB7               	decfsz	??_main+1,f
  1043  0784  2F81               	goto	u997
  1044  0785  0BB8               	decfsz	??_main+2,f
  1045  0786  2F81               	goto	u997
  1046  0787                     l1620:	
  1047                           
  1048                           ;esp_test.c: 560:     Lcd_Clear();
  1049  0787  120A  118A  2424  120A  118A  	fcall	_Lcd_Clear
  1050  078C                     l1622:	
  1051                           
  1052                           ;esp_test.c: 565:     esp8266_mode(2);
  1053  078C  3002               	movlw	2
  1054  078D  120A  118A  249A  120A  118A  	fcall	_esp8266_mode
  1055  0792                     l1624:	
  1056                           
  1057                           ;esp_test.c: 566:     Lcd_Set_Cursor(1,1);
  1058  0792  01F4               	clrf	Lcd_Set_Cursor@b
  1059  0793  0AF4               	incf	Lcd_Set_Cursor@b,f
  1060  0794  3001               	movlw	1
  1061  0795  120A  118A  25C9  120A  118A  	fcall	_Lcd_Set_Cursor
  1062  079A                     l1626:	
  1063                           
  1064                           ;esp_test.c: 567:     Lcd_Print_String("ESP set as AP");
  1065  079A  304C               	movlw	low (STR_41| (0+32768))
  1066  079B  00F9               	movwf	Lcd_Print_String@a
  1067  079C  3088               	movlw	high (STR_41| (0+32768))
  1068  079D  00FA               	movwf	Lcd_Print_String@a+1
  1069  079E  120A  118A  2535  120A  118A  	fcall	_Lcd_Print_String
  1070  07A3                     l1628:	
  1071                           
  1072                           ;esp_test.c: 568:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  1073  07A3  3010               	movlw	16
  1074  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  1075  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  1076  07A6  00B8               	movwf	??_main+2
  1077  07A7  3039               	movlw	57
  1078  07A8  00B7               	movwf	??_main+1
  1079  07A9  300D               	movlw	13
  1080  07AA  00B6               	movwf	??_main
  1081  07AB                     u1007:	
  1082  07AB  0BB6               	decfsz	??_main,f
  1083  07AC  2FAB               	goto	u1007
  1084  07AD  0BB7               	decfsz	??_main+1,f
  1085  07AE  2FAB               	goto	u1007
  1086  07AF  0BB8               	decfsz	??_main+2,f
  1087  07B0  2FAB               	goto	u1007
  1088  07B1                     l1630:	
  1089                           
  1090                           ;esp_test.c: 569:     Lcd_Clear();
  1091  07B1  120A  118A  2424  120A  118A  	fcall	_Lcd_Clear
  1092                           
  1093                           ;esp_test.c: 573:     esp8266_config_softAP("CircuitDigest","619007123");
  1094  07B6  3084               	movlw	low (STR_42| (0+32768))
  1095  07B7  00F4               	movwf	esp8266_config_softAP@softssid
  1096  07B8  3088               	movlw	high (STR_42| (0+32768))
  1097  07B9  00F5               	movwf	esp8266_config_softAP@softssid+1
  1098  07BA  30D5               	movlw	low (STR_43| (0+32768))
  1099  07BB  00F6               	movwf	esp8266_config_softAP@softpass
  1100  07BC  3088               	movlw	high (STR_43| (0+32768))
  1101  07BD  00F7               	movwf	esp8266_config_softAP@softpass+1
  1102  07BE  120A  118A  2502  120A  118A  	fcall	_esp8266_config_softAP
  1103  07C3                     l1632:	
  1104                           
  1105                           ;esp_test.c: 574:     Lcd_Set_Cursor(1,1);
  1106  07C3  01F4               	clrf	Lcd_Set_Cursor@b
  1107  07C4  0AF4               	incf	Lcd_Set_Cursor@b,f
  1108  07C5  3001               	movlw	1
  1109  07C6  120A  118A  25C9  120A  118A  	fcall	_Lcd_Set_Cursor
  1110  07CB                     l1634:	
  1111                           
  1112                           ;esp_test.c: 575:     Lcd_Print_String("AP configured");
  1113  07CB  3068               	movlw	low (STR_44| (0+32768))
  1114  07CC  00F9               	movwf	Lcd_Print_String@a
  1115  07CD  3088               	movlw	high (STR_44| (0+32768))
  1116  07CE  00FA               	movwf	Lcd_Print_String@a+1
  1117  07CF  120A  118A  2535  120A  118A  	fcall	_Lcd_Print_String
  1118  07D4                     l1636:	
  1119                           
  1120                           ;esp_test.c: 576:     _delay((unsigned long)((1500)*(8000000/4000.0)));
  1121  07D4  3010               	movlw	16
  1122  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1123  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1124  07D7  00B8               	movwf	??_main+2
  1125  07D8  3039               	movlw	57
  1126  07D9  00B7               	movwf	??_main+1
  1127  07DA  300D               	movlw	13
  1128  07DB  00B6               	movwf	??_main
  1129  07DC                     u1017:	
  1130  07DC  0BB6               	decfsz	??_main,f
  1131  07DD  2FDC               	goto	u1017
  1132  07DE  0BB7               	decfsz	??_main+1,f
  1133  07DF  2FDC               	goto	u1017
  1134  07E0  0BB8               	decfsz	??_main+2,f
  1135  07E1  2FDC               	goto	u1017
  1136  07E2                     l226:	
  1137                           ;esp_test.c: 581:     while(1)
  1138                           
  1139  07E2                     l227:	
  1140                           ;esp_test.c: 582:     {;esp_test.c: 584:     }
  1141                           
  1142  07E2  2FE2               	goto	l226
  1143  07E3  120A  118A  2800   	ljmp	start
  1144  07E6                     __end_of_main:	
  1145                           
  1146                           	psect	text1
  1147  049A                     __ptext1:	
  1148 ;; *************** function _esp8266_mode *****************
  1149 ;; Defined at:
  1150 ;;		line 290 in file "esp_test.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  mode            1    wreg     unsigned char 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  mode            1    4[COMMON] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       0       0       0       0
  1165 ;;      Locals:         1       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0
  1167 ;;      Totals:         1       0       0       0       0
  1168 ;;Total ram usage:        1 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		__esp8266_print
  1173 ;;		__esp8266_putch
  1174 ;;		__esp8266_waitResponse
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _esp8266_mode
  1182  049A                     _esp8266_mode:	
  1183                           
  1184                           ;incstack = 0
  1185                           ; Regs used in _esp8266_mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1186                           ;esp8266_mode@mode stored from wreg
  1187  049A  00F4               	movwf	esp8266_mode@mode
  1188  049B                     l1400:	
  1189                           
  1190                           ;esp_test.c: 291:     _esp8266_print("AT+CWMODE=");
  1191  049B  30CA               	movlw	low (STR_9| (0+32768))
  1192  049C  00F1               	movwf	__esp8266_print@ptr
  1193  049D  3088               	movlw	high (STR_9| (0+32768))
  1194  049E  00F2               	movwf	__esp8266_print@ptr+1
  1195  049F  120A  118A  24DC  120A  118A  	fcall	__esp8266_print
  1196  04A4                     l1402:	
  1197                           
  1198                           ;esp_test.c: 292:     _esp8266_putch(mode + '0');
  1199  04A4  0874               	movf	esp8266_mode@mode,w
  1200  04A5  3E30               	addlw	48
  1201  04A6  120A  118A  240E  120A  118A  	fcall	__esp8266_putch
  1202  04AB                     l1404:	
  1203                           
  1204                           ;esp_test.c: 293:     _esp8266_print("\r\n");
  1205  04AB  3016               	movlw	low ((STR_29+2)| (0+32768))
  1206  04AC  00F1               	movwf	__esp8266_print@ptr
  1207  04AD  3089               	movlw	high ((STR_29+2)| (0+32768))
  1208  04AE  00F2               	movwf	__esp8266_print@ptr+1
  1209  04AF  120A  118A  24DC  120A  118A  	fcall	__esp8266_print
  1210  04B4                     l1406:	
  1211                           
  1212                           ;esp_test.c: 294:     _esp8266_waitResponse();
  1213  04B4  120A  118A  2678  120A  118A  	fcall	__esp8266_waitResponse
  1214  04B9                     l137:	
  1215  04B9  0008               	return
  1216  04BA                     __end_of_esp8266_mode:	
  1217                           
  1218                           	psect	text2
  1219  0452                     __ptext2:	
  1220 ;; *************** function _esp8266_isStarted *****************
  1221 ;; Defined at:
  1222 ;;		line 238 in file "esp_test.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      unsigned char 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1236 ;;      Params:         0       0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    2
  1243 ;; This function calls:
  1244 ;;		__esp8266_print
  1245 ;;		__esp8266_waitResponse
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           
  1252                           ;psect for function _esp8266_isStarted
  1253  0452                     _esp8266_isStarted:	
  1254  0452                     l1396:	
  1255                           ;incstack = 0
  1256                           ; Regs used in _esp8266_isStarted: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1257                           
  1258                           
  1259                           ;esp_test.c: 239:     _esp8266_print("AT\r\n");
  1260  0452  3019               	movlw	low (STR_4| (0+32768))
  1261  0453  00F1               	movwf	__esp8266_print@ptr
  1262  0454  3089               	movlw	high (STR_4| (0+32768))
  1263  0455  00F2               	movwf	__esp8266_print@ptr+1
  1264  0456  120A  118A  24DC  120A  118A  	fcall	__esp8266_print
  1265                           
  1266                           ;esp_test.c: 240:     return (_esp8266_waitResponse() == 1);
  1267  045B  120A  118A  2678  120A  118A  	fcall	__esp8266_waitResponse
  1268  0460  3A01               	xorlw	1
  1269  0461  1903               	skipnz
  1270  0462  2C64               	goto	u731
  1271  0463  2C66               	goto	u730
  1272  0464                     u731:	
  1273  0464  3001               	movlw	1
  1274  0465  2C67               	goto	u740
  1275  0466                     u730:	
  1276  0466  3000               	movlw	0
  1277  0467                     u740:	
  1278  0467                     l125:	
  1279  0467  0008               	return
  1280  0468                     __end_of_esp8266_isStarted:	
  1281                           
  1282                           	psect	text3
  1283  0502                     __ptext3:	
  1284 ;; *************** function _esp8266_config_softAP *****************
  1285 ;; Defined at:
  1286 ;;		line 183 in file "esp_test.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  softssid        2    4[COMMON] PTR unsigned char 
  1289 ;;		 -> STR_42(14), 
  1290 ;;  softpass        2    6[COMMON] PTR unsigned char 
  1291 ;;		 -> STR_43(10), 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      unsigned char 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1303 ;;      Params:         4       0       0       0       0
  1304 ;;      Locals:         0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0
  1306 ;;      Totals:         4       0       0       0       0
  1307 ;;Total ram usage:        4 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    2
  1310 ;; This function calls:
  1311 ;;		__esp8266_print
  1312 ;;		__esp8266_waitResponse
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _esp8266_config_softAP
  1320  0502                     _esp8266_config_softAP:	
  1321  0502                     l1392:	
  1322                           ;incstack = 0
  1323                           ; Regs used in _esp8266_config_softAP: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1324                           
  1325  0502  30BF               	movlw	low (STR_1| (0+32768))
  1326  0503  00F1               	movwf	__esp8266_print@ptr
  1327  0504  3088               	movlw	high (STR_1| (0+32768))
  1328  0505  00F2               	movwf	__esp8266_print@ptr+1
  1329  0506  120A  118A  24DC  120A  118A  	fcall	__esp8266_print
  1330  050B  0874               	movf	esp8266_config_softAP@softssid,w
  1331  050C  00F1               	movwf	__esp8266_print@ptr
  1332  050D  0875               	movf	esp8266_config_softAP@softssid+1,w
  1333  050E  00F2               	movwf	__esp8266_print@ptr+1
  1334  050F  120A  118A  24DC  120A  118A  	fcall	__esp8266_print
  1335  0514  3027               	movlw	low (STR_2| (0+32768))
  1336  0515  00F1               	movwf	__esp8266_print@ptr
  1337  0516  3089               	movlw	high (STR_2| (0+32768))
  1338  0517  00F2               	movwf	__esp8266_print@ptr+1
  1339  0518  120A  118A  24DC  120A  118A  	fcall	__esp8266_print
  1340  051D  0876               	movf	esp8266_config_softAP@softpass,w
  1341  051E  00F1               	movwf	__esp8266_print@ptr
  1342  051F  0877               	movf	esp8266_config_softAP@softpass+1,w
  1343  0520  00F2               	movwf	__esp8266_print@ptr+1
  1344  0521  120A  118A  24DC  120A  118A  	fcall	__esp8266_print
  1345  0526  30F2               	movlw	low (STR_3| (0+32768))
  1346  0527  00F1               	movwf	__esp8266_print@ptr
  1347  0528  3088               	movlw	high (STR_3| (0+32768))
  1348  0529  00F2               	movwf	__esp8266_print@ptr+1
  1349  052A  120A  118A  24DC  120A  118A  	fcall	__esp8266_print
  1350                           
  1351                           ;	Return value of _esp8266_config_softAP is never used
  1352  052F  120A  118A  2678  120A  118A  	fcall	__esp8266_waitResponse
  1353  0534                     l103:	
  1354  0534  0008               	return
  1355  0535                     __end_of_esp8266_config_softAP:	
  1356                           
  1357                           	psect	text4
  1358  0678                     __ptext4:	
  1359 ;; *************** function __esp8266_waitResponse *****************
  1360 ;; Defined at:
  1361 ;;		line 511 in file "esp_test.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  i               1   21[BANK0 ] unsigned char 
  1366 ;;  strings        12    0[BANK0 ] PTR const unsigned char 
  1367 ;;		 -> STR_36(7), STR_35(7), STR_34(10), STR_33(5), 
  1368 ;;		 -> STR_32(6), STR_31(3), 
  1369 ;;  so_far          6   12[BANK0 ] unsigned char [6]
  1370 ;;  continue_loo    1   20[BANK0 ] _Bool 
  1371 ;;  response        1   19[BANK0 ] unsigned char 
  1372 ;;  received        1   18[BANK0 ] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      unsigned char 
  1375 ;; Registers used:
  1376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         0       0       0       0       0
  1383 ;;      Locals:         0      22       0       0       0
  1384 ;;      Temps:          4       0       0       0       0
  1385 ;;      Totals:         4      22       0       0       0
  1386 ;;Total ram usage:       26 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    1
  1389 ;; This function calls:
  1390 ;;		__esp8266_getch
  1391 ;; This function is called by:
  1392 ;;		_esp8266_config_softAP
  1393 ;;		_esp8266_isStarted
  1394 ;;		_esp8266_mode
  1395 ;;		_esp8266_restart
  1396 ;;		_esp8266_connect
  1397 ;;		_esp8266_start
  1398 ;;		_esp8266_send
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function __esp8266_waitResponse
  1404  0678                     __esp8266_waitResponse:	
  1405  0678                     l1306:	
  1406                           ;incstack = 0
  1407                           ; Regs used in __esp8266_waitResponse: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1408                           
  1409                           
  1410                           ;esp_test.c: 512:     unsigned char so_far[6] = {0,0,0,0,0,0};
  1411  0678  302C               	movlw	__esp8266_waitResponse@so_far& (0+255)
  1412  0679  0084               	movwf	4
  1413  067A  3006               	movlw	6
  1414  067B  00FF               	movwf	btemp+1
  1415  067C                     u600:	
  1416  067C  1383               	bcf	3,7	;select IRP bank0
  1417  067D  0180               	clrf	0
  1418  067E  0A84               	incf	4,f
  1419  067F  0BFF               	decfsz	btemp+1,f
  1420  0680  2E7C               	goto	u600
  1421  0681                     l1308:	
  1422                           
  1423                           ;esp_test.c: 513:     unsigned const char lengths[6] = {2,5,4,9,6,6};;esp_test.c: 514:  
      +                             unsigned const char* strings[6] = {"OK", "ready", "FAIL", "no change", "Linked", "Unl
      +                          ink"};
  1424  0681  3020               	movlw	__esp8266_waitResponse@strings& (0+255)
  1425  0682  0084               	movwf	4
  1426  0683  304A               	movlw	low __esp8266_waitResponse@F1101
  1427  0684  00F0               	movwf	??__esp8266_waitResponse
  1428  0685  0804               	movf	4,w
  1429  0686  00F1               	movwf	??__esp8266_waitResponse+1
  1430  0687  300C               	movlw	12
  1431  0688  00F2               	movwf	??__esp8266_waitResponse+2
  1432  0689                     u610:	
  1433  0689  0870               	movf	??__esp8266_waitResponse,w
  1434  068A  0084               	movwf	4
  1435  068B  1383               	bcf	3,7	;select IRP bank0
  1436  068C  0800               	movf	0,w
  1437  068D  00F3               	movwf	??__esp8266_waitResponse+3
  1438  068E  0AF0               	incf	??__esp8266_waitResponse,f
  1439  068F  0871               	movf	??__esp8266_waitResponse+1,w
  1440  0690  0084               	movwf	4
  1441  0691  0873               	movf	??__esp8266_waitResponse+3,w
  1442  0692  0080               	movwf	0
  1443  0693  0AF1               	incf	??__esp8266_waitResponse+1,f
  1444  0694  0BF2               	decfsz	??__esp8266_waitResponse+2,f
  1445  0695  2E89               	goto	u610
  1446  0696                     l1310:	
  1447                           
  1448                           ;esp_test.c: 515:     unsigned const char responses[6] = {1, 2, 3, 4, 5, 6};;esp_test.c:
      +                           516:     unsigned char received;;esp_test.c: 517:     unsigned char response;;esp_test.
      +                          c: 518:     _Bool continue_loop = 1;
  1449  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0698  01B4               	clrf	__esp8266_waitResponse@continue_loop
  1452  0699  0AB4               	incf	__esp8266_waitResponse@continue_loop,f
  1453                           
  1454                           ;esp_test.c: 519:     while (continue_loop) {
  1455  069A  2F04               	goto	l1336
  1456  069B                     l1312:	
  1457                           
  1458                           ;esp_test.c: 520:         received = _esp8266_getch();
  1459  069B  120A  118A  2431  120A  118A  	fcall	__esp8266_getch
  1460  06A0  00F0               	movwf	??__esp8266_waitResponse
  1461  06A1  0870               	movf	??__esp8266_waitResponse,w
  1462  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1463  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1464  06A4  00B2               	movwf	__esp8266_waitResponse@received
  1465  06A5                     l1314:	
  1466                           
  1467                           ;esp_test.c: 521:         for (unsigned char i = 0; i < 6; i++) {
  1468  06A5  01B5               	clrf	__esp8266_waitResponse@i
  1469  06A6                     l1320:	
  1470                           
  1471                           ;esp_test.c: 522:             if (strings[i][so_far[i]] == received) {
  1472  06A6  0835               	movf	__esp8266_waitResponse@i,w
  1473  06A7  00F0               	movwf	??__esp8266_waitResponse
  1474  06A8  0770               	addwf	??__esp8266_waitResponse,w
  1475  06A9  3E20               	addlw	(low (__esp8266_waitResponse@strings| 0))& (0+255)
  1476  06AA  0084               	movwf	4
  1477  06AB  1383               	bcf	3,7	;select IRP bank0
  1478  06AC  0800               	movf	0,w
  1479  06AD  00F1               	movwf	??__esp8266_waitResponse+1
  1480  06AE  0A84               	incf	4,f
  1481  06AF  0800               	movf	0,w
  1482  06B0  00F2               	movwf	??__esp8266_waitResponse+2
  1483  06B1  0835               	movf	__esp8266_waitResponse@i,w
  1484  06B2  3E2C               	addlw	(low (__esp8266_waitResponse@so_far| 0))& (0+255)
  1485  06B3  0084               	movwf	4
  1486  06B4  0800               	movf	0,w
  1487  06B5  0771               	addwf	??__esp8266_waitResponse+1,w
  1488  06B6  0084               	movwf	4
  1489  06B7  0872               	movf	??__esp8266_waitResponse+2,w
  1490  06B8  1803               	skipnc
  1491  06B9  0A72               	incf	??__esp8266_waitResponse+2,w
  1492  06BA  00FF               	movwf	btemp+1
  1493  06BB  120A  158A  2000  120A  118A  	fcall	stringtab
  1494  06C0  0632               	xorwf	__esp8266_waitResponse@received,w
  1495  06C1  1D03               	skipz
  1496  06C2  2EC4               	goto	u621
  1497  06C3  2EC5               	goto	u620
  1498  06C4                     u621:	
  1499  06C4  2EF5               	goto	l1330
  1500  06C5                     u620:	
  1501  06C5                     l1322:	
  1502                           
  1503                           ;esp_test.c: 523:                 so_far[i]++;
  1504  06C5  3001               	movlw	1
  1505  06C6  00F0               	movwf	??__esp8266_waitResponse
  1506  06C7  0835               	movf	__esp8266_waitResponse@i,w
  1507  06C8  3E2C               	addlw	(low (__esp8266_waitResponse@so_far| 0))& (0+255)
  1508  06C9  0084               	movwf	4
  1509  06CA  0870               	movf	??__esp8266_waitResponse,w
  1510  06CB  1383               	bcf	3,7	;select IRP bank0
  1511  06CC  0780               	addwf	0,f
  1512  06CD                     l1324:	
  1513                           
  1514                           ;esp_test.c: 524:                 if (so_far[i] == lengths[i]) {
  1515  06CD  0835               	movf	__esp8266_waitResponse@i,w
  1516  06CE  3E18               	addlw	low (__esp8266_waitResponse@lengths| (0+32768))
  1517  06CF  0084               	movwf	4
  1518  06D0  3088               	movlw	high (__esp8266_waitResponse@lengths| (0+32768))
  1519  06D1  1803               	skipnc
  1520  06D2  3E01               	addlw	1
  1521  06D3  00FF               	movwf	btemp+1
  1522  06D4  120A  158A  2000  120A  118A  	fcall	stringtab
  1523  06D9  00F0               	movwf	??__esp8266_waitResponse
  1524  06DA  0835               	movf	__esp8266_waitResponse@i,w
  1525  06DB  3E2C               	addlw	(low (__esp8266_waitResponse@so_far| 0))& (0+255)
  1526  06DC  0084               	movwf	4
  1527  06DD  1383               	bcf	3,7	;select IRP bank0
  1528  06DE  0800               	movf	0,w
  1529  06DF  0670               	xorwf	??__esp8266_waitResponse,w
  1530  06E0  1D03               	skipz
  1531  06E1  2EE3               	goto	u631
  1532  06E2  2EE4               	goto	u630
  1533  06E3                     u631:	
  1534  06E3  2EFA               	goto	l1332
  1535  06E4                     u630:	
  1536  06E4                     l1326:	
  1537                           
  1538                           ;esp_test.c: 525:                     response = responses[i];
  1539  06E4  0835               	movf	__esp8266_waitResponse@i,w
  1540  06E5  3E12               	addlw	low (__esp8266_waitResponse@responses| (0+32768))
  1541  06E6  0084               	movwf	4
  1542  06E7  3088               	movlw	high (__esp8266_waitResponse@responses| (0+32768))
  1543  06E8  1803               	skipnc
  1544  06E9  3E01               	addlw	1
  1545  06EA  00FF               	movwf	btemp+1
  1546  06EB  120A  158A  2000  120A  118A  	fcall	stringtab
  1547  06F0  00F0               	movwf	??__esp8266_waitResponse
  1548  06F1  0870               	movf	??__esp8266_waitResponse,w
  1549  06F2  00B3               	movwf	__esp8266_waitResponse@response
  1550  06F3                     l1328:	
  1551                           
  1552                           ;esp_test.c: 526:                     continue_loop = 0;
  1553  06F3  01B4               	clrf	__esp8266_waitResponse@continue_loop
  1554  06F4  2EFA               	goto	l1332
  1555  06F5                     l1330:	
  1556                           
  1557                           ;esp_test.c: 529:                 so_far[i] = 0;
  1558  06F5  0835               	movf	__esp8266_waitResponse@i,w
  1559  06F6  3E2C               	addlw	(low (__esp8266_waitResponse@so_far| 0))& (0+255)
  1560  06F7  0084               	movwf	4
  1561  06F8  1383               	bcf	3,7	;select IRP bank0
  1562  06F9  0180               	clrf	0
  1563  06FA                     l1332:	
  1564                           
  1565                           ;esp_test.c: 531:         }
  1566  06FA  3001               	movlw	1
  1567  06FB  00F0               	movwf	??__esp8266_waitResponse
  1568  06FC  0870               	movf	??__esp8266_waitResponse,w
  1569  06FD  07B5               	addwf	__esp8266_waitResponse@i,f
  1570  06FE                     l1334:	
  1571  06FE  3006               	movlw	6
  1572  06FF  0235               	subwf	__esp8266_waitResponse@i,w
  1573  0700  1C03               	skipc
  1574  0701  2F03               	goto	u641
  1575  0702  2F04               	goto	u640
  1576  0703                     u641:	
  1577  0703  2EA6               	goto	l1320
  1578  0704                     u640:	
  1579  0704                     l1336:	
  1580                           
  1581                           ;esp_test.c: 519:     while (continue_loop) {
  1582  0704  0834               	movf	__esp8266_waitResponse@continue_loop,w
  1583  0705  1D03               	btfss	3,2
  1584  0706  2F08               	goto	u651
  1585  0707  2F09               	goto	u650
  1586  0708                     u651:	
  1587  0708  2E9B               	goto	l1312
  1588  0709                     u650:	
  1589  0709                     l1338:	
  1590                           
  1591                           ;esp_test.c: 533:     return response;
  1592  0709  0833               	movf	__esp8266_waitResponse@response,w
  1593  070A                     l219:	
  1594  070A  0008               	return
  1595  070B                     __end_of__esp8266_waitResponse:	
  1596                           
  1597                           	psect	text5
  1598  0431                     __ptext5:	
  1599 ;; *************** function __esp8266_getch *****************
  1600 ;; Defined at:
  1601 ;;		line 201 in file "esp_test.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      unsigned char 
  1608 ;; Registers used:
  1609 ;;		wreg
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0
  1618 ;;      Totals:         0       0       0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		__esp8266_waitResponse
  1625 ;;		_esp8266_ip
  1626 ;;		_esp8266_send
  1627 ;;		_esp8266_receive
  1628 ;;		__esp8266_waitFor
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function __esp8266_getch
  1634  0431                     __esp8266_getch:	
  1635  0431                     l1248:	
  1636                           ;incstack = 0
  1637                           ; Regs used in __esp8266_getch: [wreg]
  1638                           
  1639  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0433  1C98               	btfss	24,1	;volatile
  1642  0434  2C36               	goto	u541
  1643  0435  2C37               	goto	u540
  1644  0436                     u541:	
  1645  0436  2C39               	goto	l113
  1646  0437                     u540:	
  1647  0437                     l1250:	
  1648  0437  1218               	bcf	24,4	;volatile
  1649  0438  1618               	bsf	24,4	;volatile
  1650  0439                     l113:	
  1651  0439  1E8C               	btfss	12,5	;volatile
  1652  043A  2C3C               	goto	u551
  1653  043B  2C3D               	goto	u550
  1654  043C                     u551:	
  1655  043C  2C39               	goto	l113
  1656  043D                     u550:	
  1657  043D                     l1252:	
  1658  043D  081A               	movf	26,w	;volatile
  1659  043E                     l116:	
  1660  043E  0008               	return
  1661  043F                     __end_of__esp8266_getch:	
  1662                           
  1663                           	psect	text6
  1664  04DC                     __ptext6:	
  1665 ;; *************** function __esp8266_print *****************
  1666 ;; Defined at:
  1667 ;;		line 461 in file "esp_test.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  ptr             2    1[COMMON] PTR const unsigned char 
  1670 ;;		 -> STR_43(10), STR_42(14), STR_27(3), STR_26(12), 
  1671 ;;		 -> esp8266_send@length_str(6), STR_24(3), esp8266_start@port_str(5), STR_22(3), 
  1672 ;;		 -> STR_21(4), STR_20(4), STR_19(4), STR_18(14), 
  1673 ;;		 -> STR_16(11), STR_14(11), STR_13(4), STR_12(4), 
  1674 ;;		 -> STR_11(11), STR_10(3), STR_9(11), STR_7(3), 
  1675 ;;		 -> STR_6(4), STR_5(9), STR_4(5), STR_3(8), 
  1676 ;;		 -> STR_2(4), STR_1(11), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         2       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0
  1691 ;;      Totals:         2       0       0       0       0
  1692 ;;Total ram usage:        2 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    1
  1695 ;; This function calls:
  1696 ;;		__esp8266_putch
  1697 ;; This function is called by:
  1698 ;;		_esp8266_config_softAP
  1699 ;;		_esp8266_isStarted
  1700 ;;		_esp8266_mode
  1701 ;;		_esp8266_restart
  1702 ;;		_esp8266_echoCmds
  1703 ;;		_esp8266_connect
  1704 ;;		_esp8266_disconnect
  1705 ;;		_esp8266_ip
  1706 ;;		_esp8266_start
  1707 ;;		_esp8266_send
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function __esp8266_print
  1713  04DC                     __esp8266_print:	
  1714  04DC                     l1298:	
  1715                           ;incstack = 0
  1716                           ; Regs used in __esp8266_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1717                           
  1718                           
  1719                           ;esp_test.c: 462:     while (*ptr != 0) {
  1720  04DC  2CF1               	goto	l1304
  1721  04DD                     l1300:	
  1722                           
  1723                           ;esp_test.c: 463:         _esp8266_putch(*ptr++);
  1724  04DD  0872               	movf	__esp8266_print@ptr+1,w
  1725  04DE  00FF               	movwf	btemp+1
  1726  04DF  0871               	movf	__esp8266_print@ptr,w
  1727  04E0  0084               	movwf	4
  1728  04E1  120A  158A  2000  120A  118A  	fcall	stringtab
  1729  04E6  120A  118A  240E  120A  118A  	fcall	__esp8266_putch
  1730  04EB                     l1302:	
  1731  04EB  3001               	movlw	1
  1732  04EC  07F1               	addwf	__esp8266_print@ptr,f
  1733  04ED  1803               	skipnc
  1734  04EE  0AF2               	incf	__esp8266_print@ptr+1,f
  1735  04EF  3000               	movlw	0
  1736  04F0  07F2               	addwf	__esp8266_print@ptr+1,f
  1737  04F1                     l1304:	
  1738                           
  1739                           ;esp_test.c: 462:     while (*ptr != 0) {
  1740  04F1  0872               	movf	__esp8266_print@ptr+1,w
  1741  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  1742  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  1743  04F4  00FF               	movwf	btemp+1
  1744  04F5  0871               	movf	__esp8266_print@ptr,w
  1745  04F6  0084               	movwf	4
  1746  04F7  120A  158A  2000  120A  118A  	fcall	stringtab
  1747  04FC  3A00               	xorlw	0
  1748  04FD  1D03               	skipz
  1749  04FE  2D00               	goto	u591
  1750  04FF  2D01               	goto	u590
  1751  0500                     u591:	
  1752  0500  2CDD               	goto	l1300
  1753  0501                     u590:	
  1754  0501                     l193:	
  1755  0501  0008               	return
  1756  0502                     __end_of__esp8266_print:	
  1757                           
  1758                           	psect	text7
  1759  040E                     __ptext7:	
  1760 ;; *************** function __esp8266_putch *****************
  1761 ;; Defined at:
  1762 ;;		line 193 in file "esp_test.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  bt              1    wreg     unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  bt              1    0[COMMON] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0       0       0       0       0
  1777 ;;      Locals:         1       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0
  1779 ;;      Totals:         1       0       0       0       0
  1780 ;;Total ram usage:        1 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_esp8266_mode
  1786 ;;		__esp8266_print
  1787 ;;		_ESP8266_send_string
  1788 ;;		_esp8266_echoCmds
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           
  1793                           ;psect for function __esp8266_putch
  1794  040E                     __esp8266_putch:	
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in __esp8266_putch: [wreg]
  1798                           ;__esp8266_putch@bt stored from wreg
  1799  040E  00F0               	movwf	__esp8266_putch@bt
  1800  040F                     l1244:	
  1801  040F                     l106:	
  1802  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0411  1E0C               	btfss	12,4	;volatile
  1805  0412  2C14               	goto	u531
  1806  0413  2C15               	goto	u530
  1807  0414                     u531:	
  1808  0414  2C0F               	goto	l106
  1809  0415                     u530:	
  1810  0415                     l1246:	
  1811  0415  0870               	movf	__esp8266_putch@bt,w
  1812  0416  0099               	movwf	25	;volatile
  1813  0417                     l109:	
  1814  0417  0008               	return
  1815  0418                     __end_of__esp8266_putch:	
  1816                           
  1817                           	psect	text8
  1818  057B                     __ptext8:	
  1819 ;; *************** function _Lcd_Start *****************
  1820 ;; Defined at:
  1821 ;;		line 112 in file "esp_test.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  i               2    0        int 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, pclath, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         0       0       0       0       0
  1836 ;;      Locals:         2       0       0       0       0
  1837 ;;      Temps:          2       0       0       0       0
  1838 ;;      Totals:         4       0       0       0       0
  1839 ;;Total ram usage:        4 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    2
  1842 ;; This function calls:
  1843 ;;		_Lcd_Cmd
  1844 ;;		_Lcd_SetBit
  1845 ;; This function is called by:
  1846 ;;		_main
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           
  1851                           ;psect for function _Lcd_Start
  1852  057B                     _Lcd_Start:	
  1853  057B                     l1364:	
  1854                           ;incstack = 0
  1855                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  1856                           
  1857                           
  1858                           ;esp_test.c: 114:     SPBRG = ((8000000/16)/9600) - 1;
  1859  057B  3000               	movlw	0
  1860  057C  120A  118A  24BA  120A  118A  	fcall	_Lcd_SetBit
  1861  0581                     l1366:	
  1862  0581                     l1368:	
  1863  0581                     l1378:	
  1864                           
  1865                           ;esp_test.c: 117: 
  1866  0581  300D               	movlw	13
  1867  0582  00F5               	movwf	??_Lcd_Start+1
  1868  0583  30FB               	movlw	251
  1869  0584  00F4               	movwf	??_Lcd_Start
  1870  0585                     u1027:	
  1871  0585  0BF4               	decfsz	??_Lcd_Start,f
  1872  0586  2D85               	goto	u1027
  1873  0587  0BF5               	decfsz	??_Lcd_Start+1,f
  1874  0588  2D85               	goto	u1027
  1875  0589  2D8A               	nop2
  1876  058A                     l1380:	
  1877                           
  1878                           ;esp_test.c: 118: 
  1879  058A  3003               	movlw	3
  1880  058B  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1881  0590                     l1382:	
  1882                           
  1883                           ;esp_test.c: 119:     SYNC = 0;
  1884  0590  301D               	movlw	29
  1885  0591  00F5               	movwf	??_Lcd_Start+1
  1886  0592  3091               	movlw	145
  1887  0593  00F4               	movwf	??_Lcd_Start
  1888  0594                     u1037:	
  1889  0594  0BF4               	decfsz	??_Lcd_Start,f
  1890  0595  2D94               	goto	u1037
  1891  0596  0BF5               	decfsz	??_Lcd_Start+1,f
  1892  0597  2D94               	goto	u1037
  1893                           
  1894                           ;esp_test.c: 120:     SPEN = 1;
  1895  0598  3003               	movlw	3
  1896  0599  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1897                           
  1898                           ;esp_test.c: 121: 
  1899  059E  3002               	movlw	2
  1900  059F  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1901                           
  1902                           ;esp_test.c: 122: 
  1903  05A4  3002               	movlw	2
  1904  05A5  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1905                           
  1906                           ;esp_test.c: 123:     TXEN = 1;
  1907  05AA  3008               	movlw	8
  1908  05AB  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1909                           
  1910                           ;esp_test.c: 124:     CREN = 1;
  1911  05B0  3000               	movlw	0
  1912  05B1  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1913                           
  1914                           ;esp_test.c: 125: 
  1915  05B6  300C               	movlw	12
  1916  05B7  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1917                           
  1918                           ;esp_test.c: 126: 
  1919  05BC  3000               	movlw	0
  1920  05BD  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1921                           
  1922                           ;esp_test.c: 127: 
  1923  05C2  3006               	movlw	6
  1924  05C3  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  1925  05C8                     l84:	
  1926  05C8  0008               	return
  1927  05C9                     __end_of_Lcd_Start:	
  1928                           
  1929                           	psect	text9
  1930  05C9                     __ptext9:	
  1931 ;; *************** function _Lcd_Set_Cursor *****************
  1932 ;; Defined at:
  1933 ;;		line 91 in file "esp_test.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  a               1    wreg     unsigned char 
  1936 ;;  b               1    4[COMMON] unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  a               1    7[COMMON] unsigned char 
  1939 ;;  temp            1   10[COMMON] unsigned char 
  1940 ;;  y               1    9[COMMON] unsigned char 
  1941 ;;  z               1    8[COMMON] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0, pclath, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         1       0       0       0       0
  1952 ;;      Locals:         4       0       0       0       0
  1953 ;;      Temps:          2       0       0       0       0
  1954 ;;      Totals:         7       0       0       0       0
  1955 ;;Total ram usage:        7 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    2
  1958 ;; This function calls:
  1959 ;;		_Lcd_Cmd
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           
  1966                           ;psect for function _Lcd_Set_Cursor
  1967  05C9                     _Lcd_Set_Cursor:	
  1968                           
  1969                           ;incstack = 0
  1970                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1971                           ;Lcd_Set_Cursor@a stored from wreg
  1972  05C9  00F7               	movwf	Lcd_Set_Cursor@a
  1973  05CA                     l1344:	
  1974                           
  1975                           ;esp_test.c: 91:    RD3 = 0;;esp_test.c: 92:    Lcd_SetBit(Lower_Nibble);;esp_test.c: 93
      +                          :    RD3 = 1;;esp_test.c: 94:    for(int i=2130483; i<=0; i--)
  1976  05CA  0377               	decf	Lcd_Set_Cursor@a,w
  1977  05CB  1D03               	btfss	3,2
  1978  05CC  2DCE               	goto	u661
  1979  05CD  2DCF               	goto	u660
  1980  05CE                     u661:	
  1981  05CE  2DF2               	goto	l1354
  1982  05CF                     u660:	
  1983  05CF                     l1346:	
  1984                           
  1985                           ;esp_test.c: 95:    RD3 = 0;;esp_test.c: 96: }
  1986  05CF  0874               	movf	Lcd_Set_Cursor@b,w
  1987  05D0  3E7F               	addlw	127
  1988  05D1  00F5               	movwf	??_Lcd_Set_Cursor
  1989  05D2  0875               	movf	??_Lcd_Set_Cursor,w
  1990  05D3  00FA               	movwf	Lcd_Set_Cursor@temp
  1991                           
  1992                           ;esp_test.c: 97: 
  1993  05D4  087A               	movf	Lcd_Set_Cursor@temp,w
  1994  05D5  00F5               	movwf	??_Lcd_Set_Cursor
  1995  05D6  3004               	movlw	4
  1996  05D7                     u675:	
  1997  05D7  1003               	clrc
  1998  05D8  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1999  05D9  3EFF               	addlw	-1
  2000  05DA  1D03               	skipz
  2001  05DB  2DD7               	goto	u675
  2002  05DC  0875               	movf	??_Lcd_Set_Cursor,w
  2003  05DD  00F6               	movwf	??_Lcd_Set_Cursor+1
  2004  05DE  0876               	movf	??_Lcd_Set_Cursor+1,w
  2005  05DF  00F8               	movwf	Lcd_Set_Cursor@z
  2006  05E0                     l1348:	
  2007                           
  2008                           ;esp_test.c: 98: void Lcd_Print_String(char *a)
  2009  05E0  087A               	movf	Lcd_Set_Cursor@temp,w
  2010  05E1  390F               	andlw	15
  2011  05E2  00F5               	movwf	??_Lcd_Set_Cursor
  2012  05E3  0875               	movf	??_Lcd_Set_Cursor,w
  2013  05E4  00F9               	movwf	Lcd_Set_Cursor@y
  2014  05E5                     l1350:	
  2015                           
  2016                           ;esp_test.c: 99: {
  2017  05E5  0878               	movf	Lcd_Set_Cursor@z,w
  2018  05E6  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  2019  05EB                     l1352:	
  2020                           
  2021                           ;esp_test.c: 100:     int i;
  2022  05EB  0879               	movf	Lcd_Set_Cursor@y,w
  2023  05EC  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  2024                           
  2025                           ;esp_test.c: 101:     for(i=0;a[i]!='\0';i++)
  2026  05F1  2E1A               	goto	l79
  2027  05F2                     l1354:	
  2028  05F2  3002               	movlw	2
  2029  05F3  0677               	xorwf	Lcd_Set_Cursor@a,w
  2030  05F4  1D03               	btfss	3,2
  2031  05F5  2DF7               	goto	u681
  2032  05F6  2DF8               	goto	u680
  2033  05F7                     u681:	
  2034  05F7  2E1A               	goto	l79
  2035  05F8                     u680:	
  2036  05F8                     l1356:	
  2037                           
  2038                           ;esp_test.c: 103: };esp_test.c: 104: 
  2039  05F8  0874               	movf	Lcd_Set_Cursor@b,w
  2040  05F9  3EBF               	addlw	191
  2041  05FA  00F5               	movwf	??_Lcd_Set_Cursor
  2042  05FB  0875               	movf	??_Lcd_Set_Cursor,w
  2043  05FC  00FA               	movwf	Lcd_Set_Cursor@temp
  2044                           
  2045                           ;esp_test.c: 105: void Initialize_ESP8266(void)
  2046  05FD  087A               	movf	Lcd_Set_Cursor@temp,w
  2047  05FE  00F5               	movwf	??_Lcd_Set_Cursor
  2048  05FF  3004               	movlw	4
  2049  0600                     u695:	
  2050  0600  1003               	clrc
  2051  0601  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2052  0602  3EFF               	addlw	-1
  2053  0603  1D03               	skipz
  2054  0604  2E00               	goto	u695
  2055  0605  0875               	movf	??_Lcd_Set_Cursor,w
  2056  0606  00F6               	movwf	??_Lcd_Set_Cursor+1
  2057  0607  0876               	movf	??_Lcd_Set_Cursor+1,w
  2058  0608  00F8               	movwf	Lcd_Set_Cursor@z
  2059  0609                     l1358:	
  2060                           
  2061                           ;esp_test.c: 106: {
  2062  0609  087A               	movf	Lcd_Set_Cursor@temp,w
  2063  060A  390F               	andlw	15
  2064  060B  00F5               	movwf	??_Lcd_Set_Cursor
  2065  060C  0875               	movf	??_Lcd_Set_Cursor,w
  2066  060D  00F9               	movwf	Lcd_Set_Cursor@y
  2067  060E                     l1360:	
  2068                           
  2069                           ;esp_test.c: 107: 
  2070  060E  0878               	movf	Lcd_Set_Cursor@z,w
  2071  060F  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  2072  0614                     l1362:	
  2073                           
  2074                           ;esp_test.c: 108:     TRISC6 = 0;
  2075  0614  0879               	movf	Lcd_Set_Cursor@y,w
  2076  0615  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  2077  061A                     l79:	
  2078  061A  0008               	return
  2079  061B                     __end_of_Lcd_Set_Cursor:	
  2080                           
  2081                           	psect	text10
  2082  0535                     __ptext10:	
  2083 ;; *************** function _Lcd_Print_String *****************
  2084 ;; Defined at:
  2085 ;;		line 146 in file "esp_test.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  a               2    9[COMMON] PTR unsigned char 
  2088 ;;		 -> STR_44(14), STR_41(14), STR_40(17), STR_39(14), 
  2089 ;;		 -> STR_38(15), STR_37(14), 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  i               2    0[BANK0 ] int 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2101 ;;      Params:         2       0       0       0       0
  2102 ;;      Locals:         0       2       0       0       0
  2103 ;;      Temps:          3       0       0       0       0
  2104 ;;      Totals:         5       2       0       0       0
  2105 ;;Total ram usage:        7 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    2
  2108 ;; This function calls:
  2109 ;;		_Lcd_Print_Char
  2110 ;; This function is called by:
  2111 ;;		_main
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _Lcd_Print_String
  2117  0535                     _Lcd_Print_String:	
  2118  0535                     l1384:	
  2119                           ;incstack = 0
  2120                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2121                           
  2122                           
  2123                           ;esp_test.c: 146: {;esp_test.c: 147:     while(!TXIF);;esp_test.c: 148:     TXREG = bt;;
      +                          esp_test.c: 149: }
  2124  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0537  01A0               	clrf	Lcd_Print_String@i
  2127  0538  01A1               	clrf	Lcd_Print_String@i+1
  2128  0539  2D5E               	goto	l1390
  2129  053A                     l1386:	
  2130                           
  2131                           ;esp_test.c: 150: 
  2132  053A  0820               	movf	Lcd_Print_String@i,w
  2133  053B  0779               	addwf	Lcd_Print_String@a,w
  2134  053C  00FC               	movwf	??_Lcd_Print_String+1
  2135  053D  087A               	movf	Lcd_Print_String@a+1,w
  2136  053E  00FB               	movwf	??_Lcd_Print_String
  2137  053F  1803               	skipnc
  2138  0540  0AFB               	incf	??_Lcd_Print_String,f
  2139  0541  1FA0               	btfss	Lcd_Print_String@i,7
  2140  0542  2D44               	goto	u700
  2141  0543  03FB               	decf	??_Lcd_Print_String,f
  2142  0544                     u700:	
  2143  0544  087B               	movf	??_Lcd_Print_String,w
  2144  0545  00FD               	movwf	??_Lcd_Print_String+2
  2145  0546  087D               	movf	??_Lcd_Print_String+2,w
  2146  0547  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0548  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0549  00FF               	movwf	btemp+1
  2149  054A  087C               	movf	??_Lcd_Print_String+1,w
  2150  054B  0084               	movwf	4
  2151  054C  120A  158A  2000  120A  118A  	fcall	stringtab
  2152  0551  120A  118A  261B  120A  118A  	fcall	_Lcd_Print_Char
  2153  0556                     l1388:	
  2154  0556  3001               	movlw	1
  2155  0557  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0558  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0559  07A0               	addwf	Lcd_Print_String@i,f
  2158  055A  1803               	skipnc
  2159  055B  0AA1               	incf	Lcd_Print_String@i+1,f
  2160  055C  3000               	movlw	0
  2161  055D  07A1               	addwf	Lcd_Print_String@i+1,f
  2162  055E                     l1390:	
  2163  055E  0820               	movf	Lcd_Print_String@i,w
  2164  055F  0779               	addwf	Lcd_Print_String@a,w
  2165  0560  00FC               	movwf	??_Lcd_Print_String+1
  2166  0561  087A               	movf	Lcd_Print_String@a+1,w
  2167  0562  00FB               	movwf	??_Lcd_Print_String
  2168  0563  1803               	skipnc
  2169  0564  0AFB               	incf	??_Lcd_Print_String,f
  2170  0565  1FA0               	btfss	Lcd_Print_String@i,7
  2171  0566  2D68               	goto	u710
  2172  0567  03FB               	decf	??_Lcd_Print_String,f
  2173  0568                     u710:	
  2174  0568  087B               	movf	??_Lcd_Print_String,w
  2175  0569  00FD               	movwf	??_Lcd_Print_String+2
  2176  056A  087D               	movf	??_Lcd_Print_String+2,w
  2177  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2178  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2179  056D  00FF               	movwf	btemp+1
  2180  056E  087C               	movf	??_Lcd_Print_String+1,w
  2181  056F  0084               	movwf	4
  2182  0570  120A  158A  2000  120A  118A  	fcall	stringtab
  2183  0575  3A00               	xorlw	0
  2184  0576  1D03               	skipz
  2185  0577  2D79               	goto	u721
  2186  0578  2D7A               	goto	u720
  2187  0579                     u721:	
  2188  0579  2D3A               	goto	l1386
  2189  057A                     u720:	
  2190  057A                     l97:	
  2191  057A  0008               	return
  2192  057B                     __end_of_Lcd_Print_String:	
  2193                           
  2194                           	psect	text11
  2195  061B                     __ptext11:	
  2196 ;; *************** function _Lcd_Print_Char *****************
  2197 ;; Defined at:
  2198 ;;		line 130 in file "esp_test.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  data            1    wreg     unsigned char 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  data            1    4[COMMON] unsigned char 
  2203 ;;  i               2    7[COMMON] int 
  2204 ;;  i               2    5[COMMON] int 
  2205 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  2206 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       0       0       0       0
  2217 ;;      Locals:         7       0       0       0       0
  2218 ;;      Temps:          1       0       0       0       0
  2219 ;;      Totals:         8       0       0       0       0
  2220 ;;Total ram usage:        8 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    1
  2223 ;; This function calls:
  2224 ;;		_Lcd_SetBit
  2225 ;; This function is called by:
  2226 ;;		_Lcd_Print_String
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _Lcd_Print_Char
  2232  061B                     _Lcd_Print_Char:	
  2233                           
  2234                           ;incstack = 0
  2235                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2236                           ;Lcd_Print_Char@data stored from wreg
  2237  061B  00F4               	movwf	Lcd_Print_Char@data
  2238  061C                     l1266:	
  2239                           
  2240                           ;esp_test.c: 130: ;esp_test.c: 131: };esp_test.c: 132: ;esp_test.c: 133: 
  2241  061C  0874               	movf	Lcd_Print_Char@data,w
  2242  061D  390F               	andlw	15
  2243  061E  00F1               	movwf	??_Lcd_Print_Char
  2244  061F  0871               	movf	??_Lcd_Print_Char,w
  2245  0620  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  2246                           
  2247                           ;esp_test.c: 134: 
  2248  0621  0874               	movf	Lcd_Print_Char@data,w
  2249  0622  39F0               	andlw	240
  2250  0623  00F1               	movwf	??_Lcd_Print_Char
  2251  0624  0871               	movf	??_Lcd_Print_Char,w
  2252  0625  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  2253  0626                     l1268:	
  2254                           
  2255                           ;esp_test.c: 135: unsigned char esp8266_config_softAP(unsigned char* softssid, unsigned 
      +                          char* softpass) {
  2256  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0628  1508               	bsf	8,2	;volatile
  2259  0629                     l1270:	
  2260                           
  2261                           ;esp_test.c: 136:     _esp8266_print("AT+CWSAP=\"");
  2262  0629  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  2263  062A  00F1               	movwf	??_Lcd_Print_Char
  2264  062B  3004               	movlw	4
  2265  062C                     u565:	
  2266  062C  1003               	clrc
  2267  062D  0CF1               	rrf	??_Lcd_Print_Char,f
  2268  062E  3EFF               	addlw	-1
  2269  062F  1D03               	skipz
  2270  0630  2E2C               	goto	u565
  2271  0631  0871               	movf	??_Lcd_Print_Char,w
  2272  0632  120A  118A  24BA  120A  118A  	fcall	_Lcd_SetBit
  2273  0637                     l1272:	
  2274                           
  2275                           ;esp_test.c: 137:     _esp8266_print(softssid);
  2276  0637  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0638  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0639  1588               	bsf	8,3	;volatile
  2279  063A                     l1274:	
  2280                           
  2281                           ;esp_test.c: 138:     _esp8266_print("\",\"");
  2282  063A  3033               	movlw	51
  2283  063B  00F5               	movwf	Lcd_Print_Char@i
  2284  063C  3082               	movlw	130
  2285  063D  00F6               	movwf	Lcd_Print_Char@i+1
  2286  063E                     l87:	
  2287                           
  2288                           ;esp_test.c: 139:     _esp8266_print(softpass);
  2289  063E  1283               	bcf	3,5	;RP0=0, select bank0
  2290  063F  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0640  1188               	bcf	8,3	;volatile
  2292  0641                     l1280:	
  2293  0641  30FF               	movlw	255
  2294  0642  07F5               	addwf	Lcd_Print_Char@i,f
  2295  0643  1803               	skipnc
  2296  0644  0AF6               	incf	Lcd_Print_Char@i+1,f
  2297  0645  30FF               	movlw	255
  2298  0646  07F6               	addwf	Lcd_Print_Char@i+1,f
  2299  0647                     l1282:	
  2300  0647  0876               	movf	Lcd_Print_Char@i+1,w
  2301  0648  3A80               	xorlw	128
  2302  0649  00FF               	movwf	btemp+1
  2303  064A  3080               	movlw	128
  2304  064B  027F               	subwf	btemp+1,w
  2305  064C  1D03               	skipz
  2306  064D  2E50               	goto	u575
  2307  064E  3001               	movlw	1
  2308  064F  0275               	subwf	Lcd_Print_Char@i,w
  2309  0650                     u575:	
  2310  0650  1C03               	skipc
  2311  0651  2E53               	goto	u571
  2312  0652  2E54               	goto	u570
  2313  0653                     u571:	
  2314  0653  2E3E               	goto	l87
  2315  0654                     u570:	
  2316  0654                     l1284:	
  2317                           
  2318                           ;esp_test.c: 140:     _esp8266_print("\",5,3\r\n");
  2319  0654  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  2320  0655  120A  118A  24BA  120A  118A  	fcall	_Lcd_SetBit
  2321  065A                     l1286:	
  2322                           
  2323                           ;esp_test.c: 141:     return _esp8266_waitResponse();
  2324  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2325  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2326  065C  1588               	bsf	8,3	;volatile
  2327  065D                     l1288:	
  2328                           
  2329                           ;esp_test.c: 142: }
  2330  065D  3033               	movlw	51
  2331  065E  00F7               	movwf	Lcd_Print_Char@i_97
  2332  065F  3082               	movlw	130
  2333  0660  00F8               	movwf	Lcd_Print_Char@i_97+1
  2334  0661                     l89:	
  2335                           
  2336                           ;esp_test.c: 143: 
  2337  0661  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0662  1303               	bcf	3,6	;RP1=0, select bank0
  2339  0663  1188               	bcf	8,3	;volatile
  2340  0664                     l1294:	
  2341  0664  30FF               	movlw	255
  2342  0665  07F7               	addwf	Lcd_Print_Char@i_97,f
  2343  0666  1803               	skipnc
  2344  0667  0AF8               	incf	Lcd_Print_Char@i_97+1,f
  2345  0668  30FF               	movlw	255
  2346  0669  07F8               	addwf	Lcd_Print_Char@i_97+1,f
  2347  066A                     l1296:	
  2348  066A  0878               	movf	Lcd_Print_Char@i_97+1,w
  2349  066B  3A80               	xorlw	128
  2350  066C  00FF               	movwf	btemp+1
  2351  066D  3080               	movlw	128
  2352  066E  027F               	subwf	btemp+1,w
  2353  066F  1D03               	skipz
  2354  0670  2E73               	goto	u585
  2355  0671  3001               	movlw	1
  2356  0672  0277               	subwf	Lcd_Print_Char@i_97,w
  2357  0673                     u585:	
  2358  0673  1C03               	skipc
  2359  0674  2E76               	goto	u581
  2360  0675  2E77               	goto	u580
  2361  0676                     u581:	
  2362  0676  2E61               	goto	l89
  2363  0677                     u580:	
  2364  0677                     l91:	
  2365  0677  0008               	return
  2366  0678                     __end_of_Lcd_Print_Char:	
  2367                           
  2368                           	psect	text12
  2369  0424                     __ptext12:	
  2370 ;; *************** function _Lcd_Clear *****************
  2371 ;; Defined at:
  2372 ;;		line 85 in file "esp_test.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       0       0       0       0
  2387 ;;      Locals:         0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0
  2389 ;;      Totals:         0       0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    2
  2393 ;; This function calls:
  2394 ;;		_Lcd_Cmd
  2395 ;; This function is called by:
  2396 ;;		_main
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _Lcd_Clear
  2402  0424                     _Lcd_Clear:	
  2403  0424                     l1342:	
  2404                           ;incstack = 0
  2405                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2406                           
  2407                           
  2408                           ;esp_test.c: 87:    RD2 = 1;
  2409  0424  3000               	movlw	0
  2410  0425  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  2411                           
  2412                           ;esp_test.c: 88:    Lcd_SetBit(Upper_Nibble>>4);
  2413  042A  3001               	movlw	1
  2414  042B  120A  118A  2480  120A  118A  	fcall	_Lcd_Cmd
  2415  0430                     l73:	
  2416  0430  0008               	return
  2417  0431                     __end_of_Lcd_Clear:	
  2418                           
  2419                           	psect	text13
  2420  0480                     __ptext13:	
  2421 ;; *************** function _Lcd_Cmd *****************
  2422 ;; Defined at:
  2423 ;;		line 76 in file "esp_test.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  a               1    wreg     unsigned char 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  a               1    3[COMMON] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       0       0       0       0
  2438 ;;      Locals:         1       0       0       0       0
  2439 ;;      Temps:          2       0       0       0       0
  2440 ;;      Totals:         3       0       0       0       0
  2441 ;;Total ram usage:        3 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    1
  2444 ;; This function calls:
  2445 ;;		_Lcd_SetBit
  2446 ;; This function is called by:
  2447 ;;		_Lcd_Clear
  2448 ;;		_Lcd_Set_Cursor
  2449 ;;		_Lcd_Start
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _Lcd_Cmd
  2455  0480                     _Lcd_Cmd:	
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2459                           ;Lcd_Cmd@a stored from wreg
  2460  0480  00F3               	movwf	Lcd_Cmd@a
  2461  0481                     l1256:	
  2462                           
  2463                           ;esp_test.c: 76:   Lcd_Cmd(0x00);;esp_test.c: 77:   Lcd_Cmd(0x0C);;esp_test.c: 78:   Lcd
      +                          _Cmd(0x00);
  2464  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0483  1108               	bcf	8,2	;volatile
  2467  0484                     l1258:	
  2468                           
  2469                           ;esp_test.c: 79:   Lcd_Cmd(0x06);
  2470  0484  0873               	movf	Lcd_Cmd@a,w
  2471  0485  120A  118A  24BA  120A  118A  	fcall	_Lcd_SetBit
  2472  048A                     l1260:	
  2473                           
  2474                           ;esp_test.c: 80: }
  2475  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2476  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2477  048C  1588               	bsf	8,3	;volatile
  2478  048D                     l1262:	
  2479                           
  2480                           ;esp_test.c: 81: 
  2481  048D  300B               	movlw	11
  2482  048E  00F2               	movwf	??_Lcd_Cmd+1
  2483  048F  3062               	movlw	98
  2484  0490  00F1               	movwf	??_Lcd_Cmd
  2485  0491                     u1047:	
  2486  0491  0BF1               	decfsz	??_Lcd_Cmd,f
  2487  0492  2C91               	goto	u1047
  2488  0493  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2489  0494  2C91               	goto	u1047
  2490  0495  0000               	nop
  2491  0496                     l1264:	
  2492                           
  2493                           ;esp_test.c: 82: void Lcd_Print_Char(char data)
  2494  0496  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0497  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0498  1188               	bcf	8,3	;volatile
  2497  0499                     l70:	
  2498  0499  0008               	return
  2499  049A                     __end_of_Lcd_Cmd:	
  2500                           
  2501                           	psect	text14
  2502  04BA                     __ptext14:	
  2503 ;; *************** function _Lcd_SetBit *****************
  2504 ;; Defined at:
  2505 ;;		line 53 in file "esp_test.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  data_bit        1    wreg     unsigned char 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  data_bit        1    0[COMMON] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         1       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0
  2522 ;;      Totals:         1       0       0       0       0
  2523 ;;Total ram usage:        1 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_Lcd_Cmd
  2529 ;;		_Lcd_Start
  2530 ;;		_Lcd_Print_Char
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _Lcd_SetBit
  2536  04BA                     _Lcd_SetBit:	
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in _Lcd_SetBit: [wreg]
  2540                           ;Lcd_SetBit@data_bit stored from wreg
  2541  04BA  00F0               	movwf	Lcd_SetBit@data_bit
  2542  04BB                     l1234:	
  2543                           
  2544                           ;esp_test.c: 53:     };esp_test.c: 54:     else if(a== 2);esp_test.c: 55:     {
  2545  04BB  1C70               	btfss	Lcd_SetBit@data_bit,0
  2546  04BC  2CBE               	goto	u491
  2547  04BD  2CBF               	goto	u490
  2548  04BE                     u491:	
  2549  04BE  2CC3               	goto	l59
  2550  04BF                     u490:	
  2551  04BF                     l1236:	
  2552                           
  2553                           ;esp_test.c: 56:         temp = 0xC0 + b - 1;
  2554  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2555  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2556  04C1  1608               	bsf	8,4	;volatile
  2557  04C2  2CC6               	goto	l60
  2558  04C3                     l59:	
  2559                           ;esp_test.c: 57:         z = temp>>4;
  2560                           
  2561                           
  2562                           ;esp_test.c: 58:         y = temp & 0x0F;
  2563  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  2564  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  2565  04C5  1208               	bcf	8,4	;volatile
  2566  04C6                     l60:	
  2567                           
  2568                           ;esp_test.c: 60:         Lcd_Cmd(y);
  2569  04C6  1CF0               	btfss	Lcd_SetBit@data_bit,1
  2570  04C7  2CC9               	goto	u501
  2571  04C8  2CCA               	goto	u500
  2572  04C9                     u501:	
  2573  04C9  2CCC               	goto	l61
  2574  04CA                     u500:	
  2575  04CA                     l1238:	
  2576                           
  2577                           ;esp_test.c: 61:     }
  2578  04CA  1688               	bsf	8,5	;volatile
  2579  04CB  2CCD               	goto	l62
  2580  04CC                     l61:	
  2581                           ;esp_test.c: 62: }
  2582                           
  2583                           
  2584                           ;esp_test.c: 63: 
  2585  04CC  1288               	bcf	8,5	;volatile
  2586  04CD                     l62:	
  2587                           
  2588                           ;esp_test.c: 65: {
  2589  04CD  1D70               	btfss	Lcd_SetBit@data_bit,2
  2590  04CE  2CD0               	goto	u511
  2591  04CF  2CD1               	goto	u510
  2592  04D0                     u511:	
  2593  04D0  2CD3               	goto	l63
  2594  04D1                     u510:	
  2595  04D1                     l1240:	
  2596                           
  2597                           ;esp_test.c: 66:   Lcd_SetBit(0x00);
  2598  04D1  1708               	bsf	8,6	;volatile
  2599  04D2  2CD4               	goto	l64
  2600  04D3                     l63:	
  2601                           ;esp_test.c: 67:   for(int i=1065244; i<=0; i--)
  2602                           
  2603                           
  2604                           ;esp_test.c: 68:   Lcd_Cmd(0x03);
  2605  04D3  1308               	bcf	8,6	;volatile
  2606  04D4                     l64:	
  2607                           
  2608                           ;esp_test.c: 70:   Lcd_Cmd(0x03);
  2609  04D4  1DF0               	btfss	Lcd_SetBit@data_bit,3
  2610  04D5  2CD7               	goto	u521
  2611  04D6  2CD8               	goto	u520
  2612  04D7                     u521:	
  2613  04D7  2CDA               	goto	l65
  2614  04D8                     u520:	
  2615  04D8                     l1242:	
  2616                           
  2617                           ;esp_test.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2618  04D8  1788               	bsf	8,7	;volatile
  2619  04D9  2CDB               	goto	l67
  2620  04DA                     l65:	
  2621                           ;esp_test.c: 72:   Lcd_Cmd(0x03);
  2622                           
  2623                           
  2624                           ;esp_test.c: 73:   Lcd_Cmd(0x02);
  2625  04DA  1388               	bcf	8,7	;volatile
  2626  04DB                     l67:	
  2627  04DB  0008               	return
  2628  04DC                     __end_of_Lcd_SetBit:	
  2629                           
  2630                           	psect	text15
  2631  0468                     __ptext15:	
  2632 ;; *************** function _Initialize_ESP8266 *****************
  2633 ;; Defined at:
  2634 ;;		line 153 in file "esp_test.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _Initialize_ESP8266
  2663  0468                     _Initialize_ESP8266:	
  2664  0468                     l992:	
  2665                           ;incstack = 0
  2666                           ; Regs used in _Initialize_ESP8266: [wreg]
  2667                           
  2668                           
  2669                           ;esp_test.c: 156:     {
  2670  0468  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0469  1303               	bcf	3,6	;RP1=0, select bank1
  2672  046A  1307               	bcf	7,6	;volatile
  2673                           
  2674                           ;esp_test.c: 157:         CREN = 0;
  2675  046B  1787               	bsf	7,7	;volatile
  2676  046C                     l994:	
  2677                           
  2678                           ;esp_test.c: 162: 
  2679  046C  3033               	movlw	51
  2680  046D  0099               	movwf	25	;volatile
  2681  046E                     l996:	
  2682                           
  2683                           ;esp_test.c: 163:     return RCREG;
  2684  046E  1518               	bsf	24,2	;volatile
  2685  046F                     l998:	
  2686                           
  2687                           ;esp_test.c: 167: 
  2688  046F  1218               	bcf	24,4	;volatile
  2689  0470                     l1000:	
  2690                           
  2691                           ;esp_test.c: 168: 
  2692  0470  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0471  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0472  1798               	bsf	24,7	;volatile
  2695  0473                     l1002:	
  2696                           
  2697                           ;esp_test.c: 171:     while(*st_pt)
  2698  0473  1683               	bsf	3,5	;RP0=1, select bank1
  2699  0474  1303               	bcf	3,6	;RP1=0, select bank1
  2700  0475  1698               	bsf	24,5	;volatile
  2701  0476                     l1004:	
  2702                           
  2703                           ;esp_test.c: 172:         _esp8266_putch(*st_pt++);
  2704  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0478  1618               	bsf	24,4	;volatile
  2707  0479                     l1006:	
  2708  0479  1683               	bsf	3,5	;RP0=1, select bank1
  2709  047A  1303               	bcf	3,6	;RP1=0, select bank1
  2710  047B  1318               	bcf	24,6	;volatile
  2711  047C                     l1008:	
  2712  047C  1283               	bcf	3,5	;RP0=0, select bank0
  2713  047D  1303               	bcf	3,6	;RP1=0, select bank0
  2714  047E  1318               	bcf	24,6	;volatile
  2715  047F                     l100:	
  2716  047F  0008               	return
  2717  0480                     __end_of_Initialize_ESP8266:	
  2718  007E                     btemp	set	126	;btemp
  2719  007E                     wtemp0	set	126


Data Sizes:
    Strings     290
    Constant    12
    Data        12
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      54
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), STR_23(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S658__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S658__prbuf$ptr	PTR unsigned char  size(1) Largest target is 6
		 -> esp8266_send@length_str(COMMON[6]), esp8266_start@port_str(COMMON[5]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 6
		 -> esp8266_send@length_str(COMMON[6]), esp8266_start@port_str(COMMON[5]), 

    _esp8266_waitResponse@strings	PTR const unsigned char [6] size(2) Largest target is 10
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[10]), STR_33(CODE[5]), 
		 -> STR_32(CODE[6]), STR_31(CODE[3]), 

    _esp8266_waitResponse@F1101	PTR const unsigned char [6] size(2) Largest target is 10
		 -> STR_36(CODE[7]), STR_35(CODE[7]), STR_34(CODE[10]), STR_33(CODE[5]), 
		 -> STR_32(CODE[6]), STR_31(CODE[3]), 

    _esp8266_print@ptr	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_43(CODE[10]), STR_42(CODE[14]), STR_27(CODE[3]), STR_26(CODE[12]), 
		 -> esp8266_send@length_str(COMMON[6]), STR_24(CODE[3]), esp8266_start@port_str(COMMON[5]), STR_22(CODE[3]), 
		 -> STR_21(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), STR_18(CODE[14]), 
		 -> STR_16(CODE[11]), STR_14(CODE[11]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> STR_11(CODE[11]), STR_10(CODE[3]), STR_9(CODE[11]), STR_7(CODE[3]), 
		 -> STR_6(CODE[4]), STR_5(CODE[9]), STR_4(CODE[5]), STR_3(CODE[8]), 
		 -> STR_2(CODE[4]), STR_1(CODE[11]), 

    esp8266_config_softAP@softpass	PTR unsigned char  size(2) Largest target is 10
		 -> STR_43(CODE[10]), 

    esp8266_config_softAP@softssid	PTR unsigned char  size(2) Largest target is 14
		 -> STR_42(CODE[14]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_44(CODE[14]), STR_41(CODE[14]), STR_40(CODE[17]), STR_39(CODE[14]), 
		 -> STR_38(CODE[15]), STR_37(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Print_String
    _esp8266_mode->__esp8266_waitResponse
    _esp8266_isStarted->__esp8266_waitResponse
    _esp8266_config_softAP->__esp8266_waitResponse
    __esp8266_print->__esp8266_putch
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    _esp8266_mode->__esp8266_waitResponse
    _esp8266_isStarted->__esp8266_waitResponse
    _esp8266_config_softAP->__esp8266_waitResponse

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   10454
                                             22 BANK0      3     3      0
                 _Initialize_ESP8266
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
              _esp8266_config_softAP
                  _esp8266_isStarted
                       _esp8266_mode
 ---------------------------------------------------------------------------------
 (1) _esp8266_mode                                         1     1      0    2780
                                              4 COMMON     1     1      0
                     __esp8266_print
                     __esp8266_putch
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (1) _esp8266_isStarted                                    0     0      0    2736
                     __esp8266_print
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (1) _esp8266_config_softAP                                4     0      4    2932
                                              4 COMMON     4     0      4
                     __esp8266_print
              __esp8266_waitResponse
 ---------------------------------------------------------------------------------
 (2) __esp8266_waitResponse                               26    26      0     389
                                              0 COMMON     4     4      0
                                              0 BANK0     22    22      0
                     __esp8266_getch
 ---------------------------------------------------------------------------------
 (3) __esp8266_getch                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __esp8266_print                                       2     0      2    2347
                                              1 COMMON     2     0      2
                     __esp8266_putch
 ---------------------------------------------------------------------------------
 (2) __esp8266_putch                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     4     4      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     836
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     7     5      2     816
                                              9 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_ESP8266                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_ESP8266
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   _esp8266_config_softAP
     __esp8266_print
       __esp8266_putch
     __esp8266_waitResponse
       __esp8266_getch
   _esp8266_isStarted
     __esp8266_print
       __esp8266_putch
     __esp8266_waitResponse
       __esp8266_getch
   _esp8266_mode
     __esp8266_print
       __esp8266_putch
     __esp8266_putch
     __esp8266_waitResponse
       __esp8266_getch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      44      12        0.0%
ABS                  0      0      44       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 11 12:22:24 2020

                                      pc 0002                              __CFG_CP$OFF 0000  
                                     l60 04C6                                       l61 04CC  
                                     l62 04CD                                       l70 0499  
                                     l63 04D3                                       l64 04D4  
                                     l65 04DA                                       l73 0430  
                                     l67 04DB                                       l59 04C3  
                                     l91 0677                                       l84 05C8  
                                     l87 063E                                       l79 061A  
                                     l89 0661                                       l97 057A  
                                     fsr 0004                       __esp8266_print@ptr 0071  
                     esp8266_start@F1075 0045                                      l100 047F  
                                    l103 0534                                      l113 0439  
                                    l106 040F                                      l116 043E  
                                    l109 0417                                      l125 0467  
                                    l137 04B9                                      l226 07E2  
                                    l219 070A                                      l227 07E2  
                                    l193 0501                                      l992 0468  
                                    l994 046C                                      l996 046E  
                                    l998 046F                                      _RD2 0042  
                                    _RD3 0043                                      _RD4 0044  
                                    _RD5 0045                                      _RD6 0046  
                                    _RD7 0047                                      u500 04CA  
                                    u501 04C9                                      u510 04D1  
                                    u511 04D0                                      u520 04D8  
                                    u600 067C                                      u521 04D7  
                                    u530 0415                                      u610 0689  
                           __CFG_CPD$OFF 0000                                      u531 0414  
                                    u700 0544                                      u540 0437  
                                    u620 06C5                                      u541 0436  
                                    u621 06C4                                      u710 0568  
                                    u550 043D                                      u630 06E4  
                                    u551 043C                                      u631 06E3  
                                    u720 057A                                      u640 0704  
                                    u721 0579                                      u641 0703  
                                    u490 04BF                                      u570 0654  
                                    u650 0709                                      u730 0466  
                                    u491 04BE                                      u571 0653  
                                    u651 0708                                      u731 0464  
                                    u580 0677                                      u660 05CF  
                                    u740 0467                                      u581 0676  
                                    u565 062C                                      u661 05CE  
                                    u590 0501                                      u575 0650  
                                    u591 0500                                      u680 05F8  
                                    u585 0673                                      u681 05F7  
                                    u675 05D7                                      u695 0600  
                                    _RX9 00C6                                      u970 0768  
                                    u971 0767                                      _TX9 04C6  
                                    u987 0742                                      u997 0781  
                                    fsr0 0004                                      indf 0000  
                           __CFG_FOSC$HS 0000                             __CFG_LVP$OFF 0000  
                                   l1000 0470                                     l1002 0473  
                                   l1004 0476                                     l1006 0479  
                                   l1008 047C                                     l1300 04DD  
                                   l1302 04EB                                     l1310 0696  
                                   l1240 04D1                                     l1304 04F1  
                                   l1320 06A6                                     l1312 069B  
                                   l1400 049B                                     l1242 04D8  
                                   l1234 04BB                                     l1250 0437  
                                   l1322 06C5                                     l1330 06F5  
                                   l1314 06A5                                     l1306 0678  
                                   l1402 04A4                                     l1236 04BF  
                                   l1260 048A                                     l1244 040F  
                                   l1252 043D                                     l1332 06FA  
                                   l1324 06CD                                     l1308 0681  
                                   l1404 04AB                                     l1238 04CA  
                                   l1262 048D                                     l1342 0424  
                                   l1270 0629                                     l1350 05E5  
                                   l1246 0415                                     l1334 06FE  
                                   l1326 06E4                                     l1406 04B4  
                                   l1264 0496                                     l1256 0481  
                                   l1280 0641                                     l1272 0637  
                                   l1360 060E                                     l1352 05EB  
                                   l1344 05CA                                     l1248 0431  
                                   l1328 06F3                                     l1336 0704  
                                   l1600 0729                                     l1258 0484  
                                   l1282 0647                                     l1274 063A  
                                   l1266 061C                                     l1362 0614  
                                   l1346 05CF                                     l1354 05F2  
                                   l1338 0709                                     l1610 0755  
                                   l1602 0731                                     l1284 0654  
                                   l1268 0626                                     l1356 05F8  
                                   l1348 05E0                                     l1380 058A  
                                   l1364 057B                                     l1620 0787  
                                   l1612 075E                                     l1604 073A  
                                   l1294 0664                                     l1286 065A  
                                   l1390 055E                                     l1358 0609  
                                   l1382 0590                                     l1366 0581  
                                   l1630 07B1                                     l1622 078C  
                                   l1614 0768                                     l1606 0748  
                                   l1296 066A                                     l1288 065D  
                                   l1384 0535                                     l1368 0581  
                                   l1392 0502                                     l1632 07C3  
                                   l1624 0792                                     l1616 0770  
                                   l1608 074D                                     l1386 053A  
                                   l1378 0581                                     l1298 04DC  
                                   l1634 07CB                                     l1626 079A  
                                   l1618 0779                                     l1388 0556  
                                   l1396 0452                                     l1636 07D4  
                                   l1628 07A3                                     l1590 070B  
                                   l1592 070E                                     l1594 0713  
                                   l1596 0718                                     l1598 0720  
                                   STR_1 08BF                                     STR_2 0927  
                                   STR_3 08F2                                     STR_4 0919  
                                   STR_5 08E9                                     STR_6 092B  
                                   STR_8 093A                                     STR_9 08CA  
                                   _BRGH 04C2                                     _CREN 00C4  
                                   u1007 07AB                                     u1017 07DC  
                                   u1027 0585                                     u1037 0594  
                                   u1047 0491                                     _RCIF 0065  
                                   _OERR 00C1                                     _SPEN 00C7  
                                   _TXEN 04C5                                     _TXIF 0064  
                                   _SYNC 04C4                             __CFG_WRT$OFF 0000  
                                   _main 070B                                     btemp 007E  
             __end_of_Initialize_ESP8266 0480                            __CFG_BOREN$ON 0000  
                                   start 0000                       Lcd_Print_Char@i_97 0077  
                     Lcd_Print_Char@data 0074                          __end_of_Lcd_Cmd 049A  
                             _Lcd_SetBit 04BA                                    ?_main 0070  
                                  STR_10 0916                                    STR_11 08B4  
                                  STR_20 0933                                    STR_13 0923  
                                  STR_22 0937                                    STR_14 089E  
                                  STR_23 093D                                    STR_31 093A  
                                  STR_16 08A9                                    STR_40 081E  
                                  STR_32 090E                                    STR_41 084C  
                                  STR_33 091E                            __CFG_WDTE$OFF 0000  
                                  STR_26 0892                                    STR_42 0884  
                                  STR_18 083E                                    STR_34 08DF  
                                  STR_19 092F                                    STR_43 08D5  
                                  STR_35 08FA                                    STR_28 0908  
                                  STR_44 0868                                    STR_36 0901  
                                  STR_29 0914                                    STR_37 085A  
                                  STR_38 082F                                    STR_39 0876  
                                  _RCREG 001A                                    _SPBRG 0099  
                __size_of_Lcd_Set_Cursor 0052                                    _TRISD 0088  
                                  _TXREG 0019                    __esp8266_waitResponse 0678  
                                  pclath 000A                __size_of_Lcd_Print_String 0046  
                                  status 0003                                    wtemp0 007E  
                __size_of_Lcd_Print_Char 005D                          __initialization 07E6  
                           __end_of_main 07E6                                   ??_main 0036  
                     __size_of_Lcd_Clear 000D           __size_of_esp8266_config_softAP 0033  
          __end_of_esp8266_config_softAP 0535                       __size_of_Lcd_Start 004E  
                  __size_of_esp8266_mode 0020                                ??_Lcd_Cmd 0071  
                         __esp8266_getch 0431                                   _TRISC6 043E  
                                 _TRISC7 043F                           __esp8266_print 04DC  
                         __esp8266_putch 040E                           __CFG_PWRTE$OFF 0000  
                            ?_Lcd_SetBit 0070                   ?__esp8266_waitResponse 0070  
                           _esp8266_mode 049A                          Lcd_Set_Cursor@a 0077  
                        Lcd_Set_Cursor@b 0074                          Lcd_Set_Cursor@y 0079  
                        Lcd_Set_Cursor@z 0078                   __end_of__esp8266_getch 043F  
                 __end_of__esp8266_print 0502                   __end_of__esp8266_putch 0418  
                __end_of__initialization 07FC                        __end_of_Lcd_Clear 0431  
          esp8266_config_softAP@softpass 0076            esp8266_config_softAP@softssid 0074  
                      __end_of_Lcd_Start 05C9      __esp8266_waitResponse@continue_loop 0034  
                         __pcstackCOMMON 0070                             __pidataBANK0 0418  
                         _Lcd_Set_Cursor 05C9                        _esp8266_isStarted 0452  
                     ?_esp8266_isStarted 0070                          ?__esp8266_getch 0070  
                             __pbssBANK0 0039                          ?__esp8266_print 0071  
                        ?__esp8266_putch 0070  __end_of__esp8266_waitResponse@responses 0818  
        __esp8266_waitResponse@responses 0812                         _Lcd_Print_String 0535  
                    __size_of_Lcd_SetBit 0022                      ??_esp8266_isStarted 0074  
  __end_of__esp8266_waitResponse@lengths 081E            __esp8266_waitResponse@lengths 0818  
                         _Lcd_Print_Char 061B                               __pmaintext 070B  
          __esp8266_waitResponse@strings 0020                       Lcd_SetBit@data_bit 0070  
                     _Initialize_ESP8266 0468                   __end_of_Lcd_Set_Cursor 061B  
              __end_of_esp8266_isStarted 0468                      ?_Initialize_ESP8266 0070  
                             __stringtab 0800                          Lcd_Print_Char@i 0075  
                                _Lcd_Cmd 0480                   __end_of_Lcd_Print_Char 0678  
                __esp8266_waitResponse@i 0035                     ??_Initialize_ESP8266 0070  
                        ?_Lcd_Set_Cursor 0074                                  __ptext1 049A  
                                __ptext2 0452                                  __ptext3 0502  
                                __ptext4 0678                                  __ptext5 0431  
                                __ptext6 04DC                                  __ptext7 040E  
                                __ptext8 057B                                  __ptext9 05C9  
                                clrloop0 0407                     end_of_initialization 07FC  
                        ?_Lcd_Print_Char 0070                         esp8266_mode@mode 0074  
                           __pstringtext 0800                             ??_Lcd_SetBit 0070  
                ??__esp8266_waitResponse 0070               __size_of_esp8266_isStarted 0016  
                  _esp8266_config_softAP 0502                        __esp8266_putch@bt 0070  
                     __end_of_Lcd_SetBit 04DC                                _Lcd_Clear 0424  
                              _Lcd_Start 057B                 __end_of_Lcd_Print_String 057B  
                    start_initialization 07E6                         ??__esp8266_getch 0070  
                       ??__esp8266_print 0073                         ??__esp8266_putch 0070  
                      Lcd_Print_String@a 0079                        Lcd_Print_String@i 0020  
                             ?_Lcd_Clear 0070                               init_fetch0 043F  
                             ?_Lcd_Start 0070                              __pdataBANK0 004A  
             Lcd_Print_Char@Lower_Nibble 0072                                ___latbits 0002  
                 ?_esp8266_config_softAP 0074                            __pcstackBANK0 0020  
         __esp8266_waitResponse@received 0032                                 ?_Lcd_Cmd 0070  
         __esp8266_waitResponse@response 0033             __esp8266_waitResponse@so_far 002C  
                       ??_Lcd_Set_Cursor 0075                         ??_Lcd_Print_Char 0071  
                              clear_ram0 0406                                 Lcd_Cmd@a 0073  
            __size_of_Initialize_ESP8266 0018                              ??_Lcd_Clear 0074  
                            ??_Lcd_Start 0074                              __stringbase 0812  
         __size_of__esp8266_waitResponse 0093            __end_of__esp8266_waitResponse 070B  
                          ?_esp8266_mode 0070                         __size_of_Lcd_Cmd 001A  
            __esp8266_waitResponse@F1101 004A              __esp8266_waitResponse@F1098 0039  
                     __end_of__stringtab 0812                        ?_Lcd_Print_String 0079  
                         ??_esp8266_mode 0074                       ??_Lcd_Print_String 007B  
                               __ptext10 0535                                 __ptext11 061B  
                               __ptext12 0424                                 __ptext13 0480  
                               __ptext14 04BA                                 __ptext15 0468  
                          __size_of_main 00DB               Lcd_Print_Char@Upper_Nibble 0073  
                ??_esp8266_config_softAP 0078                                 init_ram0 0443  
                              stringcode 080A                        esp8266_send@F1079 003F  
                     Lcd_Set_Cursor@temp 007A                                 stringtab 0800  
                __size_of__esp8266_getch 000E                  __size_of__esp8266_print 0026  
                __size_of__esp8266_putch 000A                     __end_of_esp8266_mode 04BA  
