Version 4.0 HI-TECH Software Intermediate Code
"2761 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2761: extern volatile __bit RD4 __attribute__((address(0x44)));
[v _RD4 `Vb ~T0 @X0 0 e@68 ]
"2764
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2764: extern volatile __bit RD5 __attribute__((address(0x45)));
[v _RD5 `Vb ~T0 @X0 0 e@69 ]
"2767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2767: extern volatile __bit RD6 __attribute__((address(0x46)));
[v _RD6 `Vb ~T0 @X0 0 e@70 ]
"2770
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2770: extern volatile __bit RD7 __attribute__((address(0x47)));
[v _RD7 `Vb ~T0 @X0 0 e@71 ]
"2755
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2755: extern volatile __bit RD2 __attribute__((address(0x42)));
[v _RD2 `Vb ~T0 @X0 0 e@66 ]
"2758
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2758: extern volatile __bit RD3 __attribute__((address(0x43)));
[v _RD3 `Vb ~T0 @X0 0 e@67 ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"2977 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2977: extern volatile __bit TRISC6 __attribute__((address(0x43E)));
[v _TRISC6 `Vb ~T0 @X0 0 e@1086 ]
"2980
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2980: extern volatile __bit TRISC7 __attribute__((address(0x43F)));
[v _TRISC7 `Vb ~T0 @X0 0 e@1087 ]
"2080
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2080: extern volatile unsigned char SPBRG __attribute__((address(0x099)));
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"2416
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2416: extern volatile __bit BRGH __attribute__((address(0x4C2)));
[v _BRGH `Vb ~T0 @X0 0 e@1218 ]
"2842
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2842: extern volatile __bit SYNC __attribute__((address(0x4C4)));
[v _SYNC `Vb ~T0 @X0 0 e@1220 ]
"2812
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2812: extern volatile __bit SPEN __attribute__((address(0xC7)));
[v _SPEN `Vb ~T0 @X0 0 e@199 ]
"3031
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 3031: extern volatile __bit TXEN __attribute__((address(0x4C5)));
[v _TXEN `Vb ~T0 @X0 0 e@1221 ]
"2515
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2515: extern volatile __bit CREN __attribute__((address(0xC4)));
[v _CREN `Vb ~T0 @X0 0 e@196 ]
"3022
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 3022: extern volatile __bit TX9 __attribute__((address(0x4C6)));
[v _TX9 `Vb ~T0 @X0 0 e@1222 ]
"2794
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2794: extern volatile __bit RX9 __attribute__((address(0xC6)));
[v _RX9 `Vb ~T0 @X0 0 e@198 ]
"48 esp_test.c
[; ;esp_test.c: 48:       temp = 0x80 + b - 1;
[v __esp8266_print `(v ~T0 @X0 0 ef1`*Cuc ]
[v F1022 `(uc ~T0 @X0 1 tf ]
"49
[; ;esp_test.c: 49:         z = temp>>4;
[v __esp8266_waitResponse `TF1022 ~T0 @X0 0 e ]
"3037 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 3037: extern volatile __bit TXIF __attribute__((address(0x64)));
[v _TXIF `Vb ~T0 @X0 0 e@100 ]
"1059
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1059: extern volatile unsigned char TXREG __attribute__((address(0x019)));
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"2614
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2614: extern volatile __bit OERR __attribute__((address(0xC1)));
[v _OERR `Vb ~T0 @X0 0 e@193 ]
"2743
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2743: extern volatile __bit RCIF __attribute__((address(0x65)));
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"1066
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1066: extern volatile unsigned char RCREG __attribute__((address(0x01A)));
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
[v F1024 `(ui ~T0 @X0 1 tf1`*uc ]
"50 esp_test.c
[; ;esp_test.c: 50:         y = temp & 0x0F;
[v __esp8266_waitFor `TF1024 ~T0 @X0 0 e ]
"194 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c90\stdio.h
[v _sprintf `(i ~T0 @X0 0 e1v`*uc`*Cuc ]
"56 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c90\string.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\c90\string.h: 56: extern size_t strlen(const char *);
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
[p mainexit ]
"1499 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1499: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"39 esp_test.c
[; ;esp_test.c: 39:     Lcd_Cmd(0);
[p x FOSC = HS ]
"40
[; ;esp_test.c: 40:     Lcd_Cmd(1);
[p x WDTE = OFF ]
"41
[; ;esp_test.c: 41: }
[p x PWRTE = OFF ]
"42
[; ;esp_test.c: 42: 
[p x BOREN = ON ]
"43
[; ;esp_test.c: 43: void Lcd_Set_Cursor(char a, char b)
[p x LVP = OFF ]
"44
[; ;esp_test.c: 44: {
[p x CPD = OFF ]
"45
[; ;esp_test.c: 45:     char temp,z,y;
[p x WRT = OFF ]
"46
[; ;esp_test.c: 46:     if(a== 1)
[p x CP = OFF ]
"53
[; ;esp_test.c: 53:     }
[v _Lcd_SetBit `(v ~T0 @X0 1 ef1`uc ]
"54
[; ;esp_test.c: 54:     else if(a== 2)
{
[e :U _Lcd_SetBit ]
"53
[; ;esp_test.c: 53:     }
[v _data_bit `uc ~T0 @X0 1 r1 ]
"54
[; ;esp_test.c: 54:     else if(a== 2)
[f ]
"55
[; ;esp_test.c: 55:     {
[e $ ! != & -> _data_bit `i -> 1 `i -> 0 `i 97  ]
"56
[; ;esp_test.c: 56:         temp = 0xC0 + b - 1;
[e = _RD4 -> -> 1 `i `b ]
[e $U 98  ]
"57
[; ;esp_test.c: 57:         z = temp>>4;
[e :U 97 ]
"58
[; ;esp_test.c: 58:         y = temp & 0x0F;
[e = _RD4 -> -> 0 `i `b ]
[e :U 98 ]
"60
[; ;esp_test.c: 60:         Lcd_Cmd(y);
[e $ ! != & -> _data_bit `i -> 2 `i -> 0 `i 99  ]
"61
[; ;esp_test.c: 61:     }
[e = _RD5 -> -> 1 `i `b ]
[e $U 100  ]
"62
[; ;esp_test.c: 62: }
[e :U 99 ]
"63
[; ;esp_test.c: 63: 
[e = _RD5 -> -> 0 `i `b ]
[e :U 100 ]
"65
[; ;esp_test.c: 65: {
[e $ ! != & -> _data_bit `i -> 4 `i -> 0 `i 101  ]
"66
[; ;esp_test.c: 66:   Lcd_SetBit(0x00);
[e = _RD6 -> -> 1 `i `b ]
[e $U 102  ]
"67
[; ;esp_test.c: 67:   for(int i=1065244; i<=0; i--)
[e :U 101 ]
"68
[; ;esp_test.c: 68:   Lcd_Cmd(0x03);
[e = _RD6 -> -> 0 `i `b ]
[e :U 102 ]
"70
[; ;esp_test.c: 70:   Lcd_Cmd(0x03);
[e $ ! != & -> _data_bit `i -> 8 `i -> 0 `i 103  ]
"71
[; ;esp_test.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
[e = _RD7 -> -> 1 `i `b ]
[e $U 104  ]
"72
[; ;esp_test.c: 72:   Lcd_Cmd(0x03);
[e :U 103 ]
"73
[; ;esp_test.c: 73:   Lcd_Cmd(0x02);
[e = _RD7 -> -> 0 `i `b ]
[e :U 104 ]
"74
[; ;esp_test.c: 74:   Lcd_Cmd(0x02);
[e :UE 96 ]
}
"76
[; ;esp_test.c: 76:   Lcd_Cmd(0x00);
[v _Lcd_Cmd `(v ~T0 @X0 1 ef1`uc ]
"77
[; ;esp_test.c: 77:   Lcd_Cmd(0x0C);
{
[e :U _Lcd_Cmd ]
"76
[; ;esp_test.c: 76:   Lcd_Cmd(0x00);
[v _a `uc ~T0 @X0 1 r1 ]
"77
[; ;esp_test.c: 77:   Lcd_Cmd(0x0C);
[f ]
"78
[; ;esp_test.c: 78:   Lcd_Cmd(0x00);
[e = _RD2 -> -> 0 `i `b ]
"79
[; ;esp_test.c: 79:   Lcd_Cmd(0x06);
[e ( _Lcd_SetBit (1 _a ]
"80
[; ;esp_test.c: 80: }
[e = _RD3 -> -> 1 `i `b ]
"81
[; ;esp_test.c: 81: 
[e ( __delay (1 -> * -> -> 4 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"82
[; ;esp_test.c: 82: void Lcd_Print_Char(char data)
[e = _RD3 -> -> 0 `i `b ]
"83
[; ;esp_test.c: 83: {
[e :UE 105 ]
}
"85
[; ;esp_test.c: 85:    Lower_Nibble = data&0x0F;
[v _Lcd_Clear `(v ~T0 @X0 1 ef ]
"86
[; ;esp_test.c: 86:    Upper_Nibble = data&0xF0;
{
[e :U _Lcd_Clear ]
[f ]
"87
[; ;esp_test.c: 87:    RD2 = 1;
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"88
[; ;esp_test.c: 88:    Lcd_SetBit(Upper_Nibble>>4);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"89
[; ;esp_test.c: 89:    RD3 = 1;
[e :UE 106 ]
}
"91
[; ;esp_test.c: 91:    RD3 = 0;
[v _Lcd_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
"92
[; ;esp_test.c: 92:    Lcd_SetBit(Lower_Nibble);
{
[e :U _Lcd_Set_Cursor ]
"91
[; ;esp_test.c: 91:    RD3 = 0;
[v _a `uc ~T0 @X0 1 r1 ]
[v _b `uc ~T0 @X0 1 r2 ]
"92
[; ;esp_test.c: 92:    Lcd_SetBit(Lower_Nibble);
[f ]
"93
[; ;esp_test.c: 93:    RD3 = 1;
[v _temp `uc ~T0 @X0 1 a ]
[v _z `uc ~T0 @X0 1 a ]
[v _y `uc ~T0 @X0 1 a ]
"94
[; ;esp_test.c: 94:    for(int i=2130483; i<=0; i--)
[e $ ! == -> _a `i -> 1 `i 108  ]
"95
[; ;esp_test.c: 95:    RD3 = 0;
{
"96
[; ;esp_test.c: 96: }
[e = _temp -> - + -> 128 `i -> _b `i -> 1 `i `uc ]
"97
[; ;esp_test.c: 97: 
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
"98
[; ;esp_test.c: 98: void Lcd_Print_String(char *a)
[e = _y -> & -> _temp `i -> 15 `i `uc ]
"99
[; ;esp_test.c: 99: {
[e ( _Lcd_Cmd (1 _z ]
"100
[; ;esp_test.c: 100:     int i;
[e ( _Lcd_Cmd (1 _y ]
"101
[; ;esp_test.c: 101:     for(i=0;a[i]!='\0';i++)
}
[e $U 109  ]
"102
[; ;esp_test.c: 102:        Lcd_Print_Char(a[i]);
[e :U 108 ]
[e $ ! == -> _a `i -> 2 `i 110  ]
"103
[; ;esp_test.c: 103: }
{
"104
[; ;esp_test.c: 104: 
[e = _temp -> - + -> 192 `i -> _b `i -> 1 `i `uc ]
"105
[; ;esp_test.c: 105: void Initialize_ESP8266(void)
[e = _z -> >> -> _temp `i -> 4 `i `uc ]
"106
[; ;esp_test.c: 106: {
[e = _y -> & -> _temp `i -> 15 `i `uc ]
"107
[; ;esp_test.c: 107: 
[e ( _Lcd_Cmd (1 _z ]
"108
[; ;esp_test.c: 108:     TRISC6 = 0;
[e ( _Lcd_Cmd (1 _y ]
"109
[; ;esp_test.c: 109:     TRISC7 = 1;
}
[e :U 110 ]
[e :U 109 ]
"110
[; ;esp_test.c: 110: 
[e :UE 107 ]
}
"112
[; ;esp_test.c: 112: 
[v _Lcd_Start `(v ~T0 @X0 1 ef ]
"113
[; ;esp_test.c: 113: 
{
[e :U _Lcd_Start ]
[f ]
"114
[; ;esp_test.c: 114:     SPBRG = ((8000000/16)/9600) - 1;
[e ( _Lcd_SetBit (1 -> -> 0 `i `uc ]
"115
[; ;esp_test.c: 115:     BRGH = 1;
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> -> 1065244 `l `i ]
[e $ <= _i -> 0 `i 112  ]
[e $U 113  ]
[e :U 112 ]
"116
[; ;esp_test.c: 116: 
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
[e -- _i -> 1 `i ]
[e $ <= _i -> 0 `i 112  ]
[e :U 113 ]
}
"117
[; ;esp_test.c: 117: 
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"118
[; ;esp_test.c: 118: 
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"119
[; ;esp_test.c: 119:     SYNC = 0;
[e ( __delay (1 -> * -> -> 11 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"120
[; ;esp_test.c: 120:     SPEN = 1;
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"121
[; ;esp_test.c: 121: 
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
"122
[; ;esp_test.c: 122: 
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
"123
[; ;esp_test.c: 123:     TXEN = 1;
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
"124
[; ;esp_test.c: 124:     CREN = 1;
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"125
[; ;esp_test.c: 125: 
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
"126
[; ;esp_test.c: 126: 
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"127
[; ;esp_test.c: 127: 
[e ( _Lcd_Cmd (1 -> -> 6 `i `uc ]
"128
[; ;esp_test.c: 128:     TX9 = 0;
[e :UE 111 ]
}
"130
[; ;esp_test.c: 130: 
[v _Lcd_Print_Char `(v ~T0 @X0 1 ef1`uc ]
"131
[; ;esp_test.c: 131: }
{
[e :U _Lcd_Print_Char ]
"130
[; ;esp_test.c: 130: 
[v _data `uc ~T0 @X0 1 r1 ]
"131
[; ;esp_test.c: 131: }
[f ]
"132
[; ;esp_test.c: 132: 
[v _Lower_Nibble `uc ~T0 @X0 1 a ]
[v _Upper_Nibble `uc ~T0 @X0 1 a ]
"133
[; ;esp_test.c: 133: 
[e = _Lower_Nibble -> & -> _data `i -> 15 `i `uc ]
"134
[; ;esp_test.c: 134: 
[e = _Upper_Nibble -> & -> _data `i -> 240 `i `uc ]
"135
[; ;esp_test.c: 135: unsigned char esp8266_config_softAP(unsigned char* softssid, unsigned char* softpass) {
[e = _RD2 -> -> 1 `i `b ]
"136
[; ;esp_test.c: 136:     _esp8266_print("AT+CWSAP=\"");
[e ( _Lcd_SetBit (1 -> >> -> _Upper_Nibble `i -> 4 `i `uc ]
"137
[; ;esp_test.c: 137:     _esp8266_print(softssid);
[e = _RD3 -> -> 1 `i `b ]
"138
[; ;esp_test.c: 138:     _esp8266_print("\",\"");
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> -> 2130483 `l `i ]
[e $ <= _i -> 0 `i 116  ]
[e $U 117  ]
[e :U 116 ]
"139
[; ;esp_test.c: 139:     _esp8266_print(softpass);
[e = _RD3 -> -> 0 `i `b ]
[e -- _i -> 1 `i ]
[e $ <= _i -> 0 `i 116  ]
[e :U 117 ]
}
"140
[; ;esp_test.c: 140:     _esp8266_print("\",5,3\r\n");
[e ( _Lcd_SetBit (1 _Lower_Nibble ]
"141
[; ;esp_test.c: 141:     return _esp8266_waitResponse();
[e = _RD3 -> -> 1 `i `b ]
"142
[; ;esp_test.c: 142: }
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> -> 2130483 `l `i ]
[e $ <= _i -> 0 `i 119  ]
[e $U 120  ]
[e :U 119 ]
"143
[; ;esp_test.c: 143: 
[e = _RD3 -> -> 0 `i `b ]
[e -- _i -> 1 `i ]
[e $ <= _i -> 0 `i 119  ]
[e :U 120 ]
}
"144
[; ;esp_test.c: 144: 
[e :UE 115 ]
}
"146
[; ;esp_test.c: 146: {
[v _Lcd_Print_String `(v ~T0 @X0 1 ef1`*uc ]
"147
[; ;esp_test.c: 147:     while(!TXIF);
{
[e :U _Lcd_Print_String ]
"146
[; ;esp_test.c: 146: {
[v _a `*uc ~T0 @X0 1 r1 ]
"147
[; ;esp_test.c: 147:     while(!TXIF);
[f ]
"148
[; ;esp_test.c: 148:     TXREG = bt;
[v _i `i ~T0 @X0 1 a ]
"149
[; ;esp_test.c: 149: }
{
[e = _i -> 0 `i ]
[e $U 126  ]
[e :U 123 ]
"150
[; ;esp_test.c: 150: 
[e ( _Lcd_Print_Char (1 *U + _a * -> _i `x -> -> # *U _a `i `x ]
[e ++ _i -> 1 `i ]
[e :U 126 ]
[e $ != -> *U + _a * -> _i `x -> -> # *U _a `i `x `ui -> 0 `ui 123  ]
[e :U 124 ]
}
"151
[; ;esp_test.c: 151: 
[e :UE 122 ]
}
"153
[; ;esp_test.c: 153: char _esp8266_getch()
[v _Initialize_ESP8266 `(v ~T0 @X0 1 ef ]
"154
[; ;esp_test.c: 154: {
{
[e :U _Initialize_ESP8266 ]
[f ]
"156
[; ;esp_test.c: 156:     {
[e = _TRISC6 -> -> 0 `i `b ]
"157
[; ;esp_test.c: 157:         CREN = 0;
[e = _TRISC7 -> -> 1 `i `b ]
"162
[; ;esp_test.c: 162: 
[e = _SPBRG -> - / / -> 8000000 `l -> -> 16 `i `l -> -> 9600 `i `l -> -> 1 `i `l `uc ]
"163
[; ;esp_test.c: 163:     return RCREG;
[e = _BRGH -> -> 1 `i `b ]
"167
[; ;esp_test.c: 167: 
[e = _SYNC -> -> 0 `i `b ]
"168
[; ;esp_test.c: 168: 
[e = _SPEN -> -> 1 `i `b ]
"171
[; ;esp_test.c: 171:     while(*st_pt)
[e = _TXEN -> -> 1 `i `b ]
"172
[; ;esp_test.c: 172:         _esp8266_putch(*st_pt++);
[e = _CREN -> -> 1 `i `b ]
"176
[e = _TX9 -> -> 0 `i `b ]
"177
[e = _RX9 -> -> 0 `i `b ]
"179
[e :UE 127 ]
}
"183
[v _esp8266_config_softAP `(uc ~T0 @X0 1 ef2`*uc`*uc ]
{
[e :U _esp8266_config_softAP ]
[v _softssid `*uc ~T0 @X0 1 r1 ]
[v _softpass `*uc ~T0 @X0 1 r2 ]
[f ]
"184
[e ( __esp8266_print (1 :s 1C ]
"185
[e ( __esp8266_print (1 -> _softssid `*Cuc ]
"186
[e ( __esp8266_print (1 :s 2C ]
"187
[e ( __esp8266_print (1 -> _softpass `*Cuc ]
"188
[e ( __esp8266_print (1 :s 3C ]
"189
[e ) ( __esp8266_waitResponse ..  ]
[e $UE 128  ]
"190
[e :UE 128 ]
}
"193
[v __esp8266_putch `(v ~T0 @X0 1 ef1`uc ]
"194
{
[e :U __esp8266_putch ]
"193
[v _bt `uc ~T0 @X0 1 r1 ]
"194
[f ]
"195
[e $U 130  ]
[e :U 131 ]
[e :U 130 ]
[e $ ! _TXIF 131  ]
[e :U 132 ]
"196
[e = _TXREG _bt ]
"197
[e :UE 129 ]
}
"201
[v __esp8266_getch `(uc ~T0 @X0 1 ef ]
"202
{
[e :U __esp8266_getch ]
[f ]
"203
[e $ ! _OERR 134  ]
"204
{
"205
[e = _CREN -> -> 0 `i `b ]
"206
[e = _CREN -> -> 1 `i `b ]
"207
}
[e :U 134 ]
"209
[e $U 135  ]
[e :U 136 ]
[e :U 135 ]
[e $ ! _RCIF 136  ]
[e :U 137 ]
"211
[e ) -> _RCREG `uc ]
[e $UE 133  ]
"212
[e :UE 133 ]
}
"217
[v _ESP8266_send_string `(v ~T0 @X0 1 ef1`*uc ]
"218
{
[e :U _ESP8266_send_string ]
"217
[v _st_pt `*uc ~T0 @X0 1 r1 ]
"218
[f ]
"219
[e $U 139  ]
[e :U 140 ]
"220
[e ( __esp8266_putch (1 -> *U ++ _st_pt * -> -> 1 `i `x -> -> # *U _st_pt `i `x `uc ]
[e :U 139 ]
"219
[e $ != -> *U _st_pt `i -> 0 `i 140  ]
[e :U 141 ]
"221
[e :UE 138 ]
}
"238
[; ;esp_test.c: 238: char esp8266_isStarted(void) {
[v _esp8266_isStarted `(uc ~T0 @X0 1 ef ]
{
[e :U _esp8266_isStarted ]
[f ]
"239
[; ;esp_test.c: 239:     _esp8266_print("AT\r\n");
[e ( __esp8266_print (1 :s 4C ]
"240
[; ;esp_test.c: 240:     return (_esp8266_waitResponse() == 1);
[e ) -> -> == -> ( __esp8266_waitResponse ..  `i -> 1 `i `i `uc ]
[e $UE 142  ]
"241
[; ;esp_test.c: 241: }
[e :UE 142 ]
}
"251
[; ;esp_test.c: 251: char esp8266_restart(void) {
[v _esp8266_restart `(uc ~T0 @X0 1 ef ]
{
[e :U _esp8266_restart ]
[f ]
"252
[; ;esp_test.c: 252:     _esp8266_print("AT+RST\r\n");
[e ( __esp8266_print (1 :s 5C ]
"253
[; ;esp_test.c: 253:     if (_esp8266_waitResponse() != 1) {
[e $ ! != -> ( __esp8266_waitResponse ..  `i -> 1 `i 144  ]
{
"254
[; ;esp_test.c: 254:         return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 143  ]
"255
[; ;esp_test.c: 255:     }
}
[e :U 144 ]
"256
[; ;esp_test.c: 256:     return (_esp8266_waitResponse() == 2);
[e ) -> -> == -> ( __esp8266_waitResponse ..  `i -> 2 `i `i `uc ]
[e $UE 143  ]
"257
[; ;esp_test.c: 257: }
[e :UE 143 ]
}
"269
[; ;esp_test.c: 269: void esp8266_echoCmds(_Bool echo) {
[v _esp8266_echoCmds `(v ~T0 @X0 1 ef1`a ]
{
[e :U _esp8266_echoCmds ]
[v _echo `a ~T0 @X0 1 r1 ]
[f ]
"270
[; ;esp_test.c: 270:     _esp8266_print("ATE");
[e ( __esp8266_print (1 :s 6C ]
"271
[; ;esp_test.c: 271:     if (echo) {
[e $ ! != -> _echo `i -> 0 `i 146  ]
{
"272
[; ;esp_test.c: 272:         _esp8266_putch('1');
[e ( __esp8266_putch (1 -> -> 49 `ui `uc ]
"273
[; ;esp_test.c: 273:     } else {
}
[e $U 147  ]
[e :U 146 ]
{
"274
[; ;esp_test.c: 274:         _esp8266_putch('0');
[e ( __esp8266_putch (1 -> -> 48 `ui `uc ]
"275
[; ;esp_test.c: 275:     }
}
[e :U 147 ]
"276
[; ;esp_test.c: 276:     _esp8266_print("\r\n");
[e ( __esp8266_print (1 :s 7C ]
"277
[; ;esp_test.c: 277:     _esp8266_waitFor("OK");
[e ( __esp8266_waitFor (1 :s 8C ]
"278
[; ;esp_test.c: 278: }
[e :UE 145 ]
}
"290
[; ;esp_test.c: 290: void esp8266_mode(unsigned char mode) {
[v _esp8266_mode `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _esp8266_mode ]
[v _mode `uc ~T0 @X0 1 r1 ]
[f ]
"291
[; ;esp_test.c: 291:     _esp8266_print("AT+CWMODE=");
[e ( __esp8266_print (1 :s 9C ]
"292
[; ;esp_test.c: 292:     _esp8266_putch(mode + '0');
[e ( __esp8266_putch (1 -> + -> _mode `ui -> 48 `ui `uc ]
"293
[; ;esp_test.c: 293:     _esp8266_print("\r\n");
[e ( __esp8266_print (1 :s 10C ]
"294
[; ;esp_test.c: 294:     _esp8266_waitResponse();
[e ( __esp8266_waitResponse ..  ]
"295
[; ;esp_test.c: 295: }
[e :UE 148 ]
}
"306
[; ;esp_test.c: 306: unsigned char esp8266_connect(unsigned char* ssid, unsigned char* pass) {
[v _esp8266_connect `(uc ~T0 @X0 1 ef2`*uc`*uc ]
{
[e :U _esp8266_connect ]
[v _ssid `*uc ~T0 @X0 1 r1 ]
[v _pass `*uc ~T0 @X0 1 r2 ]
[f ]
"307
[; ;esp_test.c: 307:     _esp8266_print("AT+CWJAP=\"");
[e ( __esp8266_print (1 :s 11C ]
"308
[; ;esp_test.c: 308:     _esp8266_print(ssid);
[e ( __esp8266_print (1 -> _ssid `*Cuc ]
"309
[; ;esp_test.c: 309:     _esp8266_print("\",\"");
[e ( __esp8266_print (1 :s 12C ]
"310
[; ;esp_test.c: 310:     _esp8266_print(pass);
[e ( __esp8266_print (1 -> _pass `*Cuc ]
"311
[; ;esp_test.c: 311:     _esp8266_print("\"\r\n");
[e ( __esp8266_print (1 :s 13C ]
"312
[; ;esp_test.c: 312:     return _esp8266_waitResponse();
[e ) ( __esp8266_waitResponse ..  ]
[e $UE 149  ]
"313
[; ;esp_test.c: 313: }
[e :UE 149 ]
}
"320
[; ;esp_test.c: 320: void esp8266_disconnect(void) {
[v _esp8266_disconnect `(v ~T0 @X0 1 ef ]
{
[e :U _esp8266_disconnect ]
[f ]
"321
[; ;esp_test.c: 321:     _esp8266_print("AT+CWQAP\r\n");
[e ( __esp8266_print (1 :s 14C ]
"322
[; ;esp_test.c: 322:     _esp8266_waitFor("OK");
[e ( __esp8266_waitFor (1 :s 15C ]
"323
[; ;esp_test.c: 323: }
[e :UE 150 ]
}
"336
[; ;esp_test.c: 336: void esp8266_ip(unsigned char* store_in) {
[v _esp8266_ip `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _esp8266_ip ]
[v _store_in `*uc ~T0 @X0 1 r1 ]
[f ]
"337
[; ;esp_test.c: 337:     _esp8266_print("AT+CIFSR\r\n");
[e ( __esp8266_print (1 :s 16C ]
"338
[; ;esp_test.c: 338:     unsigned char received;
[v _received `uc ~T0 @X0 1 a ]
"339
[; ;esp_test.c: 339:     do {
[e :U 154 ]
{
"340
[; ;esp_test.c: 340:         received = _esp8266_getch();
[e = _received -> ( __esp8266_getch ..  `uc ]
"341
[; ;esp_test.c: 341:     } while (received < '0' || received > '9');
}
[e $ || < -> _received `ui -> 48 `ui > -> _received `ui -> 57 `ui 154  ]
[e :U 153 ]
"342
[; ;esp_test.c: 342:     for (unsigned char i = 0; i < 4; i++) {
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 155  ]
[e $U 156  ]
[e :U 155 ]
{
"343
[; ;esp_test.c: 343:         store_in[i] = 0;
[e = *U + _store_in * -> _i `ux -> -> # *U _store_in `ui `ux -> -> 0 `i `uc ]
"344
[; ;esp_test.c: 344:         do {
[e :U 160 ]
{
"345
[; ;esp_test.c: 345:             store_in[i] = 10 * store_in[i] + received - '0';
[e = *U + _store_in * -> _i `ux -> -> # *U _store_in `ui `ux -> - -> + * -> 10 `i -> *U + _store_in * -> _i `ux -> -> # *U _store_in `ui `ux `i -> _received `i `ui -> 48 `ui `uc ]
"346
[; ;esp_test.c: 346:             received = _esp8266_getch();
[e = _received -> ( __esp8266_getch ..  `uc ]
"347
[; ;esp_test.c: 347:         } while (received >= '0' && received <= '9');
}
[e $ && >= -> _received `ui -> 48 `ui <= -> _received `ui -> 57 `ui 160  ]
[e :U 159 ]
"348
[; ;esp_test.c: 348:         received = _esp8266_getch();
[e = _received -> ( __esp8266_getch ..  `uc ]
"349
[; ;esp_test.c: 349:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 155  ]
[e :U 156 ]
}
"350
[; ;esp_test.c: 350:     _esp8266_waitFor("OK");
[e ( __esp8266_waitFor (1 :s 17C ]
"351
[; ;esp_test.c: 351: }
[e :UE 151 ]
}
"364
[; ;esp_test.c: 364: char esp8266_start(unsigned char protocol, char* ip, unsigned char port) {
[v _esp8266_start `(uc ~T0 @X0 1 ef3`uc`*uc`uc ]
{
[e :U _esp8266_start ]
[v _protocol `uc ~T0 @X0 1 r1 ]
[v _ip `*uc ~T0 @X0 1 r2 ]
[v _port `uc ~T0 @X0 1 r3 ]
[f ]
"365
[; ;esp_test.c: 365:     _esp8266_print("AT+CIPSTART=\"");
[e ( __esp8266_print (1 :s 18C ]
"366
[; ;esp_test.c: 366:     if (protocol == 1) {
[e $ ! == -> _protocol `i -> 1 `i 162  ]
{
"367
[; ;esp_test.c: 367:         _esp8266_print("TCP");
[e ( __esp8266_print (1 :s 19C ]
"368
[; ;esp_test.c: 368:     } else {
}
[e $U 163  ]
[e :U 162 ]
{
"369
[; ;esp_test.c: 369:         _esp8266_print("UDP");
[e ( __esp8266_print (1 :s 20C ]
"370
[; ;esp_test.c: 370:     }
}
[e :U 163 ]
"371
[; ;esp_test.c: 371:     _esp8266_print("\",\"");
[e ( __esp8266_print (1 :s 21C ]
"372
[; ;esp_test.c: 372:     _esp8266_print(ip);
[e ( __esp8266_print (1 -> _ip `*Cuc ]
"373
[; ;esp_test.c: 373:     _esp8266_print("\",");
[e ( __esp8266_print (1 :s 22C ]
[v F1075 `uc ~T0 @X0 -> 5 `i s ]
[i F1075
:U ..
"374
[; ;esp_test.c: 374:     unsigned char port_str[5] = "\0\0\0\0";
-> 0 `c
-> 0 `c
-> 0 `c
-> 0 `c
-> 0 `c
..
]
[v _port_str `uc ~T0 @X0 -> 5 `i a ]
[e = _port_str F1075 ]
"375
[; ;esp_test.c: 375:     sprintf(port_str, "%u", port);
[e ( _sprintf (1 , (. , -> &U _port_str `*uc :s 23C -> _port `i ]
"376
[; ;esp_test.c: 376:     _esp8266_print(port_str);
[e ( __esp8266_print (1 -> &U _port_str `*Cuc ]
"377
[; ;esp_test.c: 377:     _esp8266_print("\r\n");
[e ( __esp8266_print (1 :s 24C ]
"378
[; ;esp_test.c: 378:     if (_esp8266_waitResponse() != 1) {
[e $ ! != -> ( __esp8266_waitResponse ..  `i -> 1 `i 164  ]
{
"379
[; ;esp_test.c: 379:         return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 161  ]
"380
[; ;esp_test.c: 380:     }
}
[e :U 164 ]
"381
[; ;esp_test.c: 381:     if (_esp8266_waitResponse() != 5) {
[e $ ! != -> ( __esp8266_waitResponse ..  `i -> 5 `i 165  ]
{
"382
[; ;esp_test.c: 382:         return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 161  ]
"384
[; ;esp_test.c: 384:     }
}
[e :U 165 ]
"385
[; ;esp_test.c: 385:     return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 161  ]
"386
[; ;esp_test.c: 386: }
[e :UE 161 ]
}
"398
[; ;esp_test.c: 398: char esp8266_send(unsigned char* data) {
[v _esp8266_send `(uc ~T0 @X0 1 ef1`*uc ]
{
[e :U _esp8266_send ]
[v _data `*uc ~T0 @X0 1 r1 ]
[f ]
[v F1079 `uc ~T0 @X0 -> 6 `i s ]
[i F1079
:U ..
"399
[; ;esp_test.c: 399:     unsigned char length_str[6] = "\0\0\0\0\0";
-> 0 `c
-> 0 `c
-> 0 `c
-> 0 `c
-> 0 `c
-> 0 `c
..
]
[v _length_str `uc ~T0 @X0 -> 6 `i a ]
[e = _length_str F1079 ]
"400
[; ;esp_test.c: 400:     sprintf(length_str, "%u", strlen(data));
[e ( _sprintf (1 , (. , -> &U _length_str `*uc :s 25C ( _strlen (1 -> _data `*Cuc ]
"401
[; ;esp_test.c: 401:     _esp8266_print("AT+CIPSEND=");
[e ( __esp8266_print (1 :s 26C ]
"402
[; ;esp_test.c: 402:     _esp8266_print(length_str);
[e ( __esp8266_print (1 -> &U _length_str `*Cuc ]
"403
[; ;esp_test.c: 403:     _esp8266_print("\r\n");
[e ( __esp8266_print (1 :s 27C ]
"404
[; ;esp_test.c: 404:     while (_esp8266_getch() != '>');
[e $U 167  ]
[e :U 168 ]
[e :U 167 ]
[e $ != -> ( __esp8266_getch ..  `ui -> 62 `ui 168  ]
[e :U 169 ]
"405
[; ;esp_test.c: 405:     _esp8266_print(data);
[e ( __esp8266_print (1 -> _data `*Cuc ]
"406
[; ;esp_test.c: 406:     if (_esp8266_waitResponse() == 1) {
[e $ ! == -> ( __esp8266_waitResponse ..  `i -> 1 `i 170  ]
{
"407
[; ;esp_test.c: 407:         return 1;
[e ) -> -> 1 `i `uc ]
[e $UE 166  ]
"408
[; ;esp_test.c: 408:     }
}
[e :U 170 ]
"409
[; ;esp_test.c: 409:     return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 166  ]
"410
[; ;esp_test.c: 410: }
[e :UE 166 ]
}
"423
[; ;esp_test.c: 423: void esp8266_receive(unsigned char* store_in, uint16_t max_length, _Bool discard_headers) {
[v _esp8266_receive `(v ~T0 @X0 1 ef3`*uc`ui`a ]
{
[e :U _esp8266_receive ]
[v _store_in `*uc ~T0 @X0 1 r1 ]
[v _max_length `ui ~T0 @X0 1 r2 ]
[v _discard_headers `a ~T0 @X0 1 r3 ]
[f ]
"424
[; ;esp_test.c: 424:     _esp8266_waitFor("+IPD,");
[e ( __esp8266_waitFor (1 :s 28C ]
"425
[; ;esp_test.c: 425:     uint16_t length = 0;
[v _length `ui ~T0 @X0 1 a ]
[e = _length -> -> 0 `i `ui ]
"426
[; ;esp_test.c: 426:     unsigned char received = _esp8266_getch();
[v _received `uc ~T0 @X0 1 a ]
[e = _received -> ( __esp8266_getch ..  `uc ]
"427
[; ;esp_test.c: 427:     do {
[e :U 174 ]
{
"428
[; ;esp_test.c: 428:         length = length * 10 + received - '0';
[e = _length - + * _length -> -> 10 `i `ui -> _received `ui -> 48 `ui ]
"429
[; ;esp_test.c: 429:         received = _esp8266_getch();
[e = _received -> ( __esp8266_getch ..  `uc ]
"430
[; ;esp_test.c: 430:     } while (received >= '0' && received <= '9');
}
[e $ && >= -> _received `ui -> 48 `ui <= -> _received `ui -> 57 `ui 174  ]
[e :U 173 ]
"432
[; ;esp_test.c: 432:     if (discard_headers) {
[e $ ! != -> _discard_headers `i -> 0 `i 175  ]
{
"433
[; ;esp_test.c: 433:         length -= _esp8266_waitFor("\r\n\r\n");
[e =- _length ( __esp8266_waitFor (1 :s 29C ]
"434
[; ;esp_test.c: 434:     }
}
[e :U 175 ]
"436
[; ;esp_test.c: 436:     if (length < max_length) {
[e $ ! < _length _max_length 176  ]
{
"437
[; ;esp_test.c: 437:         max_length = length;
[e = _max_length _length ]
"438
[; ;esp_test.c: 438:     }
}
[e :U 176 ]
"443
[; ;esp_test.c: 443:     uint16_t i;
[v _i `ui ~T0 @X0 1 a ]
"444
[; ;esp_test.c: 444:     for (i = 0; i < max_length; i++) {
{
[e = _i -> -> 0 `i `ui ]
[e $U 180  ]
[e :U 177 ]
{
"445
[; ;esp_test.c: 445:         store_in[i] = _esp8266_getch();
[e = *U + _store_in * -> _i `ux -> -> # *U _store_in `ui `ux -> ( __esp8266_getch ..  `uc ]
"446
[; ;esp_test.c: 446:     }
}
[e ++ _i -> -> 1 `i `ui ]
[e :U 180 ]
[e $ < _i _max_length 177  ]
[e :U 178 ]
}
"447
[; ;esp_test.c: 447:     store_in[i] = 0;
[e = *U + _store_in * -> _i `ux -> -> # *U _store_in `ui `ux -> -> 0 `i `uc ]
"448
[; ;esp_test.c: 448:     for (; i < length; i++) {
{
[e $U 184  ]
[e :U 181 ]
{
"449
[; ;esp_test.c: 449:         _esp8266_getch();
[e ( __esp8266_getch ..  ]
"450
[; ;esp_test.c: 450:     }
}
[e ++ _i -> -> 1 `i `ui ]
[e :U 184 ]
[e $ < _i _length 181  ]
[e :U 182 ]
}
"451
[; ;esp_test.c: 451:     _esp8266_waitFor("OK");
[e ( __esp8266_waitFor (1 :s 30C ]
"452
[; ;esp_test.c: 452: }
[e :UE 171 ]
}
"461
[; ;esp_test.c: 461: void _esp8266_print(unsigned const char *ptr) {
[v __esp8266_print `(v ~T0 @X0 1 ef1`*Cuc ]
{
[e :U __esp8266_print ]
[v _ptr `*Cuc ~T0 @X0 1 r1 ]
[f ]
"462
[; ;esp_test.c: 462:     while (*ptr != 0) {
[e $U 186  ]
[e :U 187 ]
{
"463
[; ;esp_test.c: 463:         _esp8266_putch(*ptr++);
[e ( __esp8266_putch (1 *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
"464
[; ;esp_test.c: 464:     }
}
[e :U 186 ]
"462
[; ;esp_test.c: 462:     while (*ptr != 0) {
[e $ != -> *U _ptr `i -> 0 `i 187  ]
[e :U 188 ]
"465
[; ;esp_test.c: 465: }
[e :UE 185 ]
}
[v F1091 `(ui ~T0 @X0 1 tf1`*uc ]
"477
[; ;esp_test.c: 477: __attribute__((inline)) uint16_t _esp8266_waitFor(unsigned char *string) {
[v __esp8266_waitFor `TF1091 ~T0 @X0 1 e ]
{
[e :U __esp8266_waitFor ]
[v _string `*uc ~T0 @X0 1 r1 ]
[f ]
"478
[; ;esp_test.c: 478:     unsigned char so_far = 0;
[v _so_far `uc ~T0 @X0 1 a ]
[e = _so_far -> -> 0 `i `uc ]
"479
[; ;esp_test.c: 479:     unsigned char received;
[v _received `uc ~T0 @X0 1 a ]
"480
[; ;esp_test.c: 480:     uint16_t counter = 0;
[v _counter `ui ~T0 @X0 1 a ]
[e = _counter -> -> 0 `i `ui ]
"481
[; ;esp_test.c: 481:     do {
[e :U 192 ]
{
"482
[; ;esp_test.c: 482:         received = _esp8266_getch();
[e = _received -> ( __esp8266_getch ..  `uc ]
"483
[; ;esp_test.c: 483:         counter++;
[e ++ _counter -> -> 1 `i `ui ]
"484
[; ;esp_test.c: 484:         if (received == string[so_far]) {
[e $ ! == -> _received `i -> *U + _string * -> _so_far `ux -> -> # *U _string `ui `ux `i 193  ]
{
"485
[; ;esp_test.c: 485:             so_far++;
[e ++ _so_far -> -> 1 `i `uc ]
"486
[; ;esp_test.c: 486:         } else {
}
[e $U 194  ]
[e :U 193 ]
{
"487
[; ;esp_test.c: 487:             so_far = 0;
[e = _so_far -> -> 0 `i `uc ]
"488
[; ;esp_test.c: 488:         }
}
[e :U 194 ]
"489
[; ;esp_test.c: 489:     } while (string[so_far] != 0);
}
[e $ != -> *U + _string * -> _so_far `ux -> -> # *U _string `ui `ux `i -> 0 `i 192  ]
[e :U 191 ]
"490
[; ;esp_test.c: 490:     return counter;
[e ) _counter ]
[e $UE 189  ]
"491
[; ;esp_test.c: 491: }
[e :UE 189 ]
}
[v F1097 `(uc ~T0 @X0 1 tf ]
"511
[; ;esp_test.c: 511: __attribute__((inline)) unsigned char _esp8266_waitResponse(void) {
[v __esp8266_waitResponse `TF1097 ~T0 @X0 1 e ]
{
[e :U __esp8266_waitResponse ]
[f ]
[v F1098 `uc ~T0 @X0 -> 6 `i s ]
[i F1098
:U ..
"512
[; ;esp_test.c: 512:     unsigned char so_far[6] = {0,0,0,0,0,0};
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[v _so_far `uc ~T0 @X0 -> 6 `i a ]
[e = _so_far F1098 ]
"513
[; ;esp_test.c: 513:     unsigned const char lengths[6] = {2,5,4,9,6,6};
[v F1100 `Cuc ~T0 @X0 -> 6 `i s lengths ]
[i F1100
:U ..
-> -> 2 `i `uc
-> -> 5 `i `uc
-> -> 4 `i `uc
-> -> 9 `i `uc
-> -> 6 `i `uc
-> -> 6 `i `uc
..
]
[v F1101 `*Cuc ~T0 @X0 -> 6 `i s ]
[i F1101
:U ..
"514
[; ;esp_test.c: 514:     unsigned const char* strings[6] = {"OK", "ready", "FAIL", "no change", "Linked", "Unlink"};
:s 31C
:s 32C
:s 33C
:s 34C
:s 35C
:s 36C
..
]
[v _strings `*Cuc ~T0 @X0 -> 6 `i a ]
[e = _strings F1101 ]
"515
[; ;esp_test.c: 515:     unsigned const char responses[6] = {1, 2, 3, 4, 5, 6};
[v F1103 `Cuc ~T0 @X0 -> 6 `i s responses ]
[i F1103
:U ..
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 3 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 6 `i `uc
..
]
"516
[; ;esp_test.c: 516:     unsigned char received;
[v _received `uc ~T0 @X0 1 a ]
"517
[; ;esp_test.c: 517:     unsigned char response;
[v _response `uc ~T0 @X0 1 a ]
"518
[; ;esp_test.c: 518:     _Bool continue_loop = 1;
[v _continue_loop `a ~T0 @X0 1 a ]
[e = _continue_loop -> -> 1 `i `a ]
"519
[; ;esp_test.c: 519:     while (continue_loop) {
[e $U 196  ]
[e :U 197 ]
{
"520
[; ;esp_test.c: 520:         received = _esp8266_getch();
[e = _received -> ( __esp8266_getch ..  `uc ]
"521
[; ;esp_test.c: 521:         for (unsigned char i = 0; i < 6; i++) {
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 199  ]
[e $U 200  ]
[e :U 199 ]
{
"522
[; ;esp_test.c: 522:             if (strings[i][so_far[i]] == received) {
[e $ ! == -> *U + *U + &U _strings * -> _i `ux -> -> # *U &U _strings `ui `ux * -> *U + &U _so_far * -> _i `ux -> -> # *U &U _so_far `ui `ux `ux -> -> # *U *U + &U _strings * -> _i `ux -> -> # *U &U _strings `ui `ux `ui `ux `i -> _received `i 202  ]
{
"523
[; ;esp_test.c: 523:                 so_far[i]++;
[e ++ *U + &U _so_far * -> _i `ux -> -> # *U &U _so_far `ui `ux -> -> 1 `i `uc ]
"524
[; ;esp_test.c: 524:                 if (so_far[i] == lengths[i]) {
[e $ ! == -> *U + &U _so_far * -> _i `ux -> -> # *U &U _so_far `ui `ux `i -> *U + &U F1100 * -> _i `ux -> -> # *U &U F1100 `ui `ux `i 203  ]
{
"525
[; ;esp_test.c: 525:                     response = responses[i];
[e = _response *U + &U F1103 * -> _i `ux -> -> # *U &U F1103 `ui `ux ]
"526
[; ;esp_test.c: 526:                     continue_loop = 0;
[e = _continue_loop -> -> 0 `i `a ]
"527
[; ;esp_test.c: 527:                 }
}
[e :U 203 ]
"528
[; ;esp_test.c: 528:             } else {
}
[e $U 204  ]
[e :U 202 ]
{
"529
[; ;esp_test.c: 529:                 so_far[i] = 0;
[e = *U + &U _so_far * -> _i `ux -> -> # *U &U _so_far `ui `ux -> -> 0 `i `uc ]
"530
[; ;esp_test.c: 530:             }
}
[e :U 204 ]
"531
[; ;esp_test.c: 531:         }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 199  ]
[e :U 200 ]
}
"532
[; ;esp_test.c: 532:     }
}
[e :U 196 ]
"519
[; ;esp_test.c: 519:     while (continue_loop) {
[e $ != -> _continue_loop `i -> 0 `i 197  ]
[e :U 198 ]
"533
[; ;esp_test.c: 533:     return response;
[e ) _response ]
[e $UE 195  ]
"534
[; ;esp_test.c: 534: }
[e :UE 195 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"535
[; ;esp_test.c: 535: void main()
[v _main `(v ~T0 @X0 1 ef ]
"536
[; ;esp_test.c: 536: {
{
[e :U _main ]
[f ]
"537
[; ;esp_test.c: 537:     TRISD = 0x00;
[e = _TRISD -> -> 0 `i `uc ]
"538
[; ;esp_test.c: 538:     Lcd_Start();
[e ( _Lcd_Start ..  ]
"539
[; ;esp_test.c: 539:     Initialize_ESP8266();
[e ( _Initialize_ESP8266 ..  ]
"540
[; ;esp_test.c: 540:     Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"541
[; ;esp_test.c: 541:     Lcd_Print_String("IOT BASED CAR");
[e ( _Lcd_Print_String (1 :s 37C ]
"542
[; ;esp_test.c: 542:     Lcd_Set_Cursor(2,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"543
[; ;esp_test.c: 543:     Lcd_Print_String("PARKING SYSTEM");
[e ( _Lcd_Print_String (1 :s 38C ]
"544
[; ;esp_test.c: 544:    _delay((unsigned long)((1500)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 1500 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"545
[; ;esp_test.c: 545:     Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"551
[; ;esp_test.c: 551:     do
[e :U 208 ]
"552
[; ;esp_test.c: 552:     {
{
"553
[; ;esp_test.c: 553:     Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"554
[; ;esp_test.c: 554:     Lcd_Print_String("ESP not found");
[e ( _Lcd_Print_String (1 :s 39C ]
"555
[; ;esp_test.c: 555:     }
}
[e $ ! != -> ( _esp8266_isStarted ..  `i -> 0 `i 208  ]
[e :U 207 ]
"557
[; ;esp_test.c: 557:     Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"558
[; ;esp_test.c: 558:     Lcd_Print_String("ESP is connected");
[e ( _Lcd_Print_String (1 :s 40C ]
"559
[; ;esp_test.c: 559:     _delay((unsigned long)((1500)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 1500 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"560
[; ;esp_test.c: 560:     Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"565
[; ;esp_test.c: 565:     esp8266_mode(2);
[e ( _esp8266_mode (1 -> -> 2 `i `uc ]
"566
[; ;esp_test.c: 566:     Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"567
[; ;esp_test.c: 567:     Lcd_Print_String("ESP set as AP");
[e ( _Lcd_Print_String (1 :s 41C ]
"568
[; ;esp_test.c: 568:     _delay((unsigned long)((1500)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 1500 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"569
[; ;esp_test.c: 569:     Lcd_Clear();
[e ( _Lcd_Clear ..  ]
"573
[; ;esp_test.c: 573:     esp8266_config_softAP("CircuitDigest","619007123");
[e ( _esp8266_config_softAP (2 , :s 42C :s 43C ]
"574
[; ;esp_test.c: 574:     Lcd_Set_Cursor(1,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
"575
[; ;esp_test.c: 575:     Lcd_Print_String("AP configured");
[e ( _Lcd_Print_String (1 :s 44C ]
"576
[; ;esp_test.c: 576:     _delay((unsigned long)((1500)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 1500 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"581
[; ;esp_test.c: 581:     while(1)
[e :U 210 ]
"582
[; ;esp_test.c: 582:     {
{
"584
[; ;esp_test.c: 584:     }
}
[e :U 209 ]
[e $U 210  ]
[e :U 211 ]
"587
[; ;esp_test.c: 587: }
[e :UE 205 ]
}
[p f _sprintf 8389632 ]
[a 32C 114 101 97 100 121 0 ]
[a 23C 37 117 0 ]
[a 25C 37 117 0 ]
[a 42C 67 105 114 99 117 105 116 68 105 103 101 115 116 0 ]
[a 36C 85 110 108 105 110 107 0 ]
[a 34C 110 111 32 99 104 97 110 103 101 0 ]
[a 39C 69 83 80 32 110 111 116 32 102 111 117 110 100 0 ]
[a 40C 69 83 80 32 105 115 32 99 111 110 110 101 99 116 101 100 0 ]
[a 44C 65 80 32 99 111 110 102 105 103 117 114 101 100 0 ]
[a 35C 76 105 110 107 101 100 0 ]
[a 37C 73 79 84 32 66 65 83 69 68 32 67 65 82 0 ]
[a 20C 85 68 80 0 ]
[a 19C 84 67 80 0 ]
[a 41C 69 83 80 32 115 101 116 32 97 115 32 65 80 0 ]
[a 38C 80 65 82 75 73 78 71 32 83 89 83 84 69 77 0 ]
[a 33C 70 65 73 76 0 ]
[a 8C 79 75 0 ]
[a 15C 79 75 0 ]
[a 17C 79 75 0 ]
[a 30C 79 75 0 ]
[a 31C 79 75 0 ]
[a 6C 65 84 69 0 ]
[a 9C 65 84 43 67 87 77 79 68 69 61 0 ]
[a 26C 65 84 43 67 73 80 83 69 78 68 61 0 ]
[a 43C 54 49 57 48 48 55 49 50 51 0 ]
[a 28C 43 73 80 68 44 0 ]
[a 22C 34 44 0 ]
[a 18C 65 84 43 67 73 80 83 84 65 82 84 61 34 0 ]
[a 1C 65 84 43 67 87 83 65 80 61 34 0 ]
[a 11C 65 84 43 67 87 74 65 80 61 34 0 ]
[a 2C 34 44 34 0 ]
[a 12C 34 44 34 0 ]
[a 21C 34 44 34 0 ]
[a 5C 65 84 43 82 83 84 13 10 0 ]
[a 4C 65 84 13 10 0 ]
[a 16C 65 84 43 67 73 70 83 82 13 10 0 ]
[a 14C 65 84 43 67 87 81 65 80 13 10 0 ]
[a 3C 34 44 53 44 51 13 10 0 ]
[a 13C 34 13 10 0 ]
[a 29C 13 10 13 10 0 ]
[a 7C 13 10 0 ]
[a 10C 13 10 0 ]
[a 24C 13 10 0 ]
[a 27C 13 10 0 ]
