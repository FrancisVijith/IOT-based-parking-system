

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Mar 07 14:57:17 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  001A                     _RCREG	set	26
   176  0019                     _TXREG	set	25
   177  0065                     _RCIF	set	101
   178  00C1                     _OERR	set	193
   179  0064                     _TXIF	set	100
   180  00C6                     _RX9	set	198
   181  00C4                     _CREN	set	196
   182  00C7                     _SPEN	set	199
   183  0043                     _RD3	set	67
   184  0042                     _RD2	set	66
   185  0047                     _RD7	set	71
   186  0046                     _RD6	set	70
   187  0045                     _RD5	set	69
   188  0044                     _RD4	set	68
   189  0088                     _TRISD	set	136
   190  0099                     _SPBRG	set	153
   191  04C6                     _TX9	set	1222
   192  04C5                     _TXEN	set	1221
   193  04C4                     _SYNC	set	1220
   194  04C2                     _BRGH	set	1218
   195  043F                     _TRISC7	set	1087
   196  043E                     _TRISC6	set	1086
   197                           
   198                           	psect	strings
   199  0003                     __pstrings:	
   200  0003                     stringtab:	
   201  0003                     __stringtab:	
   202  0003                     stringcode:	
   203                           ;	String table - string pointers are 1 byte each
   204                           
   205  0003                     stringdir:	
   206  0003  3000               	movlw	high stringdir
   207  0004  008A               	movwf	10
   208  0005  0804               	movf	4,w
   209  0006  0A84               	incf	4,f
   210  0007  0782               	addwf	2,f
   211  0008                     __stringbase:	
   212  0008  3400               	retlw	0
   213  0009                     __end_of__stringtab:	
   214  0009                     STR_2:	
   215  0009  3445               	retlw	69	;'E'
   216  000A  3453               	retlw	83	;'S'
   217  000B  3450               	retlw	80	;'P'
   218  000C  3435               	retlw	53	;'5'
   219  000D  3432               	retlw	50	;'2'
   220  000E  3436               	retlw	54	;'6'
   221  000F  3436               	retlw	54	;'6'
   222  0010  3420               	retlw	32	;' '
   223  0011  3477               	retlw	119	;'w'
   224  0012  3469               	retlw	105	;'i'
   225  0013  3474               	retlw	116	;'t'
   226  0014  3468               	retlw	104	;'h'
   227  0015  3420               	retlw	32	;' '
   228  0016  3450               	retlw	80	;'P'
   229  0017  3449               	retlw	73	;'I'
   230  0018  3443               	retlw	67	;'C'
   231  0019  3400               	retlw	0
   232  001A                     STR_1:	
   233  001A  3443               	retlw	67	;'C'
   234  001B  3469               	retlw	105	;'i'
   235  001C  3472               	retlw	114	;'r'
   236  001D  3463               	retlw	99	;'c'
   237  001E  3475               	retlw	117	;'u'
   238  001F  3469               	retlw	105	;'i'
   239  0020  3474               	retlw	116	;'t'
   240  0021  3420               	retlw	32	;' '
   241  0022  3444               	retlw	68	;'D'
   242  0023  3469               	retlw	105	;'i'
   243  0024  3467               	retlw	103	;'g'
   244  0025  3465               	retlw	101	;'e'
   245  0026  3473               	retlw	115	;'s'
   246  0027  3474               	retlw	116	;'t'
   247  0028  3400               	retlw	0
   248  0029                     STR_3:	
   249  0029  3432               	retlw	50	;'2'
   250  002A  3433               	retlw	51	;'3'
   251  002B  3400               	retlw	0
   252                           
   253                           ; #config settings
   254  0000                     
   255                           	psect	cinit
   256  07FC                     start_initialization:	
   257  07FC                     __initialization:	
   258  07FC                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261  07FC                     __end_of__initialization:	
   262  07FC  0183               	clrf	3
   263  07FD  120A  118A  2EB8   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	cstackCOMMON
   266  0070                     __pcstackCOMMON:	
   267  0070                     ?_Lcd_SetBit:	
   268  0070                     ??_Lcd_SetBit:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_Lcd_Cmd:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_Lcd_Clear:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_Lcd_Start:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_Lcd_Print_Char:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_Lcd_Print_String:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_Initialize_ESP8266:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ??_Initialize_ESP8266:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_UART_send_char:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ??_UART_send_char:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_UART_send_string:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_main:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     Lcd_SetBit@data_bit:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     UART_send_char@bt:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           ; 1 bytes @ 0x0
   312  0070                     	ds	1
   313  0071                     ??_Lcd_Cmd:	
   314  0071                     ??_Lcd_Print_Char:	
   315                           ; 1 bytes @ 0x1
   316                           
   317  0071                     ??_UART_send_string:	
   318                           ; 1 bytes @ 0x1
   319                           
   320                           
   321                           ; 1 bytes @ 0x1
   322  0071                     	ds	1
   323  0072                     Lcd_Print_Char@Lower_Nibble:	
   324  0072                     UART_send_string@st_pt:	
   325                           ; 1 bytes @ 0x2
   326                           
   327                           
   328                           ; 1 bytes @ 0x2
   329  0072                     	ds	1
   330  0073                     Lcd_Cmd@a:	
   331  0073                     Lcd_Print_Char@Upper_Nibble:	
   332                           ; 1 bytes @ 0x3
   333                           
   334                           
   335                           ; 1 bytes @ 0x3
   336  0073                     	ds	1
   337  0074                     ??_Lcd_Clear:	
   338  0074                     ?_Lcd_Set_Cursor:	
   339                           ; 1 bytes @ 0x4
   340                           
   341  0074                     ??_Lcd_Start:	
   342                           ; 1 bytes @ 0x4
   343                           
   344  0074                     Lcd_Set_Cursor@b:	
   345                           ; 1 bytes @ 0x4
   346                           
   347  0074                     Lcd_Print_Char@i:	
   348                           ; 1 bytes @ 0x4
   349                           
   350                           
   351                           ; 2 bytes @ 0x4
   352  0074                     	ds	1
   353  0075                     ??_Lcd_Set_Cursor:	
   354                           
   355                           ; 1 bytes @ 0x5
   356  0075                     	ds	1
   357  0076                     Lcd_Print_Char@i_70:	
   358                           
   359                           ; 2 bytes @ 0x6
   360  0076                     	ds	1
   361  0077                     Lcd_Set_Cursor@a:	
   362                           
   363                           ; 1 bytes @ 0x7
   364  0077                     	ds	1
   365  0078                     Lcd_Set_Cursor@z:	
   366  0078                     Lcd_Print_Char@data:	
   367                           ; 1 bytes @ 0x8
   368                           
   369                           
   370                           ; 1 bytes @ 0x8
   371  0078                     	ds	1
   372  0079                     ??_Lcd_Print_String:	
   373  0079                     Lcd_Set_Cursor@y:	
   374                           ; 1 bytes @ 0x9
   375                           
   376  0079                     Lcd_Print_String@i:	
   377                           ; 1 bytes @ 0x9
   378                           
   379                           
   380                           ; 2 bytes @ 0x9
   381  0079                     	ds	1
   382  007A                     Lcd_Set_Cursor@temp:	
   383                           
   384                           ; 1 bytes @ 0xA
   385  007A                     	ds	1
   386  007B                     Lcd_Print_String@a:	
   387                           
   388                           ; 1 bytes @ 0xB
   389  007B                     	ds	1
   390                           
   391                           	psect	cstackBANK0
   392  0020                     __pcstackBANK0:	
   393  0020                     ??_main:	
   394                           
   395                           ; 1 bytes @ 0x0
   396  0020                     	ds	3
   397                           
   398                           	psect	maintext
   399  06B8                     __pmaintext:	
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 180 in file "newmain.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  i               2    0        int 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          0       3       0       0       0
   422 ;;      Totals:         0       3       0       0       0
   423 ;;Total ram usage:        3 bytes
   424 ;; Hardware stack levels required when called:    3
   425 ;; This function calls:
   426 ;;		_Initialize_ESP8266
   427 ;;		_Lcd_Clear
   428 ;;		_Lcd_Print_String
   429 ;;		_Lcd_Set_Cursor
   430 ;;		_Lcd_Start
   431 ;;		_UART_send_string
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           
   438                           ;psect for function _main
   439  06B8                     _main:	
   440  06B8                     l902:	
   441                           ;incstack = 0
   442                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   443                           
   444  06B8  1683               	bsf	3,5	;RP0=1, select bank1
   445  06B9  1303               	bcf	3,6	;RP1=0, select bank1
   446  06BA  0188               	clrf	8	;volatile
   447  06BB                     l904:	
   448  06BB  120A  118A  26FE  120A  118A  	fcall	_Lcd_Start
   449  06C0                     l906:	
   450  06C0  120A  118A  2620  120A  118A  	fcall	_Initialize_ESP8266
   451  06C5                     l908:	
   452  06C5  01F4               	clrf	Lcd_Set_Cursor@b
   453  06C6  0AF4               	incf	Lcd_Set_Cursor@b,f
   454  06C7  3001               	movlw	1
   455  06C8  120A  118A  274D  120A  118A  	fcall	_Lcd_Set_Cursor
   456  06CD                     l910:	
   457  06CD  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   458  06CE  120A  118A  2693  120A  118A  	fcall	_Lcd_Print_String
   459  06D3                     l912:	
   460  06D3  01F4               	clrf	Lcd_Set_Cursor@b
   461  06D4  0AF4               	incf	Lcd_Set_Cursor@b,f
   462  06D5  3002               	movlw	2
   463  06D6  120A  118A  274D  120A  118A  	fcall	_Lcd_Set_Cursor
   464  06DB                     l914:	
   465  06DB  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   466  06DC  120A  118A  2693  120A  118A  	fcall	_Lcd_Print_String
   467  06E1                     l916:	
   468  06E1  3027               	movlw	39
   469  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   470  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   471  06E4  00A2               	movwf	??_main+2
   472  06E5  300D               	movlw	13
   473  06E6  00A1               	movwf	??_main+1
   474  06E7  3025               	movlw	37
   475  06E8  00A0               	movwf	??_main
   476  06E9                     u237:	
   477  06E9  0BA0               	decfsz	??_main,f
   478  06EA  2EE9               	goto	u237
   479  06EB  0BA1               	decfsz	??_main+1,f
   480  06EC  2EE9               	goto	u237
   481  06ED  0BA2               	decfsz	??_main+2,f
   482  06EE  2EE9               	goto	u237
   483  06EF  2EF0               	nop2
   484  06F0                     l918:	
   485  06F0  120A  118A  2613  120A  118A  	fcall	_Lcd_Clear
   486  06F5                     l920:	
   487  06F5  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   488  06F6  120A  118A  2652  120A  118A  	fcall	_UART_send_string
   489  06FB                     l114:	
   490  06FB  120A  118A  2800   	ljmp	start
   491  06FE                     __end_of_main:	
   492                           
   493                           	psect	text1
   494  0652                     __ptext1:	
   495 ;; *************** function _UART_send_string *****************
   496 ;; Defined at:
   497 ;;		line 160 in file "newmain.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  st_pt           1    wreg     PTR unsigned char 
   500 ;;		 -> STR_3(3), 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  st_pt           1    2[COMMON] PTR unsigned char 
   503 ;;		 -> STR_3(3), 
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         1       0       0       0       0
   515 ;;      Temps:          1       0       0       0       0
   516 ;;      Totals:         2       0       0       0       0
   517 ;;Total ram usage:        2 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		_UART_send_char
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _UART_send_string
   529  0652                     _UART_send_string:	
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   533                           ;UART_send_string@st_pt stored from wreg
   534  0652  00F2               	movwf	UART_send_string@st_pt
   535  0653                     l894:	
   536                           
   537                           ;newmain.c: 160:     Lcd_Start();;newmain.c: 161: ;newmain.c: 162:     Initialize_ESP826
      +                          6();
   538  0653  2E64               	goto	l900
   539  0654                     l896:	
   540                           
   541                           ;newmain.c: 163:     Lcd_Set_Cursor(1,1);
   542  0654  0872               	movf	UART_send_string@st_pt,w
   543  0655  0084               	movwf	4
   544  0656  120A  118A  2003  120A  118A  	fcall	stringdir
   545  065B  120A  118A  2609  120A  118A  	fcall	_UART_send_char
   546  0660                     l898:	
   547  0660  3001               	movlw	1
   548  0661  00F1               	movwf	??_UART_send_string
   549  0662  0871               	movf	??_UART_send_string,w
   550  0663  07F2               	addwf	UART_send_string@st_pt,f
   551  0664                     l900:	
   552                           
   553                           ;newmain.c: 162:     Initialize_ESP8266();
   554  0664  0872               	movf	UART_send_string@st_pt,w
   555  0665  0084               	movwf	4
   556  0666  120A  118A  2003  120A  118A  	fcall	stringdir
   557  066B  3A00               	xorlw	0
   558  066C  1D03               	skipz
   559  066D  2E6F               	goto	u221
   560  066E  2E70               	goto	u220
   561  066F                     u221:	
   562  066F  2E54               	goto	l896
   563  0670                     u220:	
   564  0670                     l102:	
   565  0670  0008               	return
   566  0671                     __end_of_UART_send_string:	
   567                           
   568                           	psect	text2
   569  0609                     __ptext2:	
   570 ;; *************** function _UART_send_char *****************
   571 ;; Defined at:
   572 ;;		line 153 in file "newmain.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  bt              1    wreg     unsigned char 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  bt              1    0[COMMON] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         1       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0
   589 ;;      Totals:         1       0       0       0       0
   590 ;;Total ram usage:        1 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_UART_send_string
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _UART_send_char
   601  0609                     _UART_send_char:	
   602                           
   603                           ;incstack = 0
   604                           ; Regs used in _UART_send_char: [wreg]
   605                           ;UART_send_char@bt stored from wreg
   606  0609  00F0               	movwf	UART_send_char@bt
   607  060A                     l758:	
   608  060A                     l93:	
   609                           ;newmain.c: 153:     return RCREG;;newmain.c: 154: };newmain.c: 155: 
   610                           
   611  060A  1283               	bcf	3,5	;RP0=0, select bank0
   612  060B  1303               	bcf	3,6	;RP1=0, select bank0
   613  060C  1E0C               	btfss	12,4	;volatile
   614  060D  2E0F               	goto	u81
   615  060E  2E10               	goto	u80
   616  060F                     u81:	
   617  060F  2E0A               	goto	l93
   618  0610                     u80:	
   619  0610                     l760:	
   620                           
   621                           ;newmain.c: 156: void main()
   622  0610  0870               	movf	UART_send_char@bt,w
   623  0611  0099               	movwf	25	;volatile
   624  0612                     l96:	
   625  0612  0008               	return
   626  0613                     __end_of_UART_send_char:	
   627                           
   628                           	psect	text3
   629  06FE                     __ptext3:	
   630 ;; *************** function _Lcd_Start *****************
   631 ;; Defined at:
   632 ;;		line 84 in file "newmain.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;  i               4    0        long 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, pclath, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         4       0       0       0       0
   648 ;;      Temps:          2       0       0       0       0
   649 ;;      Totals:         6       0       0       0       0
   650 ;;Total ram usage:        6 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    2
   653 ;; This function calls:
   654 ;;		_Lcd_Cmd
   655 ;;		_Lcd_SetBit
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           
   662                           ;psect for function _Lcd_Start
   663  06FE                     _Lcd_Start:	
   664  06FE                     l784:	
   665                           ;incstack = 0
   666                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
   667                           
   668                           
   669                           ;newmain.c: 86:    for(int i=2130483; i<=0; i--)
   670  06FE  3000               	movlw	0
   671  06FF  120A  118A  2671  120A  118A  	fcall	_Lcd_SetBit
   672  0704                     l786:	
   673  0704                     l788:	
   674  0704                     l798:	
   675                           
   676                           ;newmain.c: 89:    RD3 = 1;
   677  0704  3021               	movlw	33
   678  0705  00F5               	movwf	??_Lcd_Start+1
   679  0706  3076               	movlw	118
   680  0707  00F4               	movwf	??_Lcd_Start
   681  0708                     u247:	
   682  0708  0BF4               	decfsz	??_Lcd_Start,f
   683  0709  2F08               	goto	u247
   684  070A  0BF5               	decfsz	??_Lcd_Start+1,f
   685  070B  2F08               	goto	u247
   686  070C  0000               	nop
   687  070D                     l800:	
   688                           
   689                           ;newmain.c: 90:    for(int i=2130483; i<=0; i--)
   690  070D  3003               	movlw	3
   691  070E  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   692  0713                     l802:	
   693                           
   694                           ;newmain.c: 91:    RD3 = 0;
   695  0713  3048               	movlw	72
   696  0714  00F5               	movwf	??_Lcd_Start+1
   697  0715  306C               	movlw	108
   698  0716  00F4               	movwf	??_Lcd_Start
   699  0717                     u257:	
   700  0717  0BF4               	decfsz	??_Lcd_Start,f
   701  0718  2F17               	goto	u257
   702  0719  0BF5               	decfsz	??_Lcd_Start+1,f
   703  071A  2F17               	goto	u257
   704  071B  0000               	nop
   705                           
   706                           ;newmain.c: 92: }
   707  071C  3003               	movlw	3
   708  071D  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   709                           
   710                           ;newmain.c: 93: 
   711  0722  3002               	movlw	2
   712  0723  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   713                           
   714                           ;newmain.c: 94: void Lcd_Print_String(char *a)
   715  0728  3002               	movlw	2
   716  0729  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   717                           
   718                           ;newmain.c: 95: {
   719  072E  3008               	movlw	8
   720  072F  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   721                           
   722                           ;newmain.c: 96:     int i;
   723  0734  3000               	movlw	0
   724  0735  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   725                           
   726                           ;newmain.c: 97:     for(i=0;a[i]!='\0';i++)
   727  073A  300C               	movlw	12
   728  073B  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   729                           
   730                           ;newmain.c: 98:        Lcd_Print_Char(a[i]);
   731  0740  3000               	movlw	0
   732  0741  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   733                           
   734                           ;newmain.c: 99: }
   735  0746  3006               	movlw	6
   736  0747  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   737  074C                     l74:	
   738  074C  0008               	return
   739  074D                     __end_of_Lcd_Start:	
   740                           
   741                           	psect	text4
   742  074D                     __ptext4:	
   743 ;; *************** function _Lcd_Set_Cursor *****************
   744 ;; Defined at:
   745 ;;		line 63 in file "newmain.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  a               1    wreg     unsigned char 
   748 ;;  b               1    4[COMMON] unsigned char 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  a               1    7[COMMON] unsigned char 
   751 ;;  temp            1   10[COMMON] unsigned char 
   752 ;;  y               1    9[COMMON] unsigned char 
   753 ;;  z               1    8[COMMON] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         1       0       0       0       0
   764 ;;      Locals:         4       0       0       0       0
   765 ;;      Temps:          2       0       0       0       0
   766 ;;      Totals:         7       0       0       0       0
   767 ;;Total ram usage:        7 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    2
   770 ;; This function calls:
   771 ;;		_Lcd_Cmd
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _Lcd_Set_Cursor
   779  074D                     _Lcd_Set_Cursor:	
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   783                           ;Lcd_Set_Cursor@a stored from wreg
   784  074D  00F7               	movwf	Lcd_Set_Cursor@a
   785  074E                     l866:	
   786                           
   787                           ;newmain.c: 63:   for(long i=1065244; i<=0; i--);newmain.c: 64:   Lcd_Cmd(0x03);;newmain
      +                          .c: 65:     _delay((unsigned long)((5)*(20000000/4000.0)));;newmain.c: 66:   Lcd_Cmd(0x0
      +                          3);
   788  074E  0377               	decf	Lcd_Set_Cursor@a,w
   789  074F  1D03               	btfss	3,2
   790  0750  2F52               	goto	u171
   791  0751  2F53               	goto	u170
   792  0752                     u171:	
   793  0752  2F76               	goto	l876
   794  0753                     u170:	
   795  0753                     l868:	
   796                           
   797                           ;newmain.c: 67:     _delay((unsigned long)((11)*(20000000/4000.0)));;newmain.c: 68:   Lc
      +                          d_Cmd(0x03);
   798  0753  0874               	movf	Lcd_Set_Cursor@b,w
   799  0754  3E7F               	addlw	127
   800  0755  00F5               	movwf	??_Lcd_Set_Cursor
   801  0756  0875               	movf	??_Lcd_Set_Cursor,w
   802  0757  00FA               	movwf	Lcd_Set_Cursor@temp
   803                           
   804                           ;newmain.c: 69:   Lcd_Cmd(0x02);
   805  0758  087A               	movf	Lcd_Set_Cursor@temp,w
   806  0759  00F5               	movwf	??_Lcd_Set_Cursor
   807  075A  3004               	movlw	4
   808  075B                     u185:	
   809  075B  1003               	clrc
   810  075C  0CF5               	rrf	??_Lcd_Set_Cursor,f
   811  075D  3EFF               	addlw	-1
   812  075E  1D03               	skipz
   813  075F  2F5B               	goto	u185
   814  0760  0875               	movf	??_Lcd_Set_Cursor,w
   815  0761  00F6               	movwf	??_Lcd_Set_Cursor+1
   816  0762  0876               	movf	??_Lcd_Set_Cursor+1,w
   817  0763  00F8               	movwf	Lcd_Set_Cursor@z
   818  0764                     l870:	
   819                           
   820                           ;newmain.c: 70:   Lcd_Cmd(0x02);
   821  0764  087A               	movf	Lcd_Set_Cursor@temp,w
   822  0765  390F               	andlw	15
   823  0766  00F5               	movwf	??_Lcd_Set_Cursor
   824  0767  0875               	movf	??_Lcd_Set_Cursor,w
   825  0768  00F9               	movwf	Lcd_Set_Cursor@y
   826  0769                     l872:	
   827                           
   828                           ;newmain.c: 71:   Lcd_Cmd(0x08);
   829  0769  0878               	movf	Lcd_Set_Cursor@z,w
   830  076A  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   831  076F                     l874:	
   832                           
   833                           ;newmain.c: 72:   Lcd_Cmd(0x00);
   834  076F  0879               	movf	Lcd_Set_Cursor@y,w
   835  0770  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   836                           
   837                           ;newmain.c: 73:   Lcd_Cmd(0x0C);
   838  0775  2F9E               	goto	l69
   839  0776                     l876:	
   840  0776  3002               	movlw	2
   841  0777  0677               	xorwf	Lcd_Set_Cursor@a,w
   842  0778  1D03               	btfss	3,2
   843  0779  2F7B               	goto	u191
   844  077A  2F7C               	goto	u190
   845  077B                     u191:	
   846  077B  2F9E               	goto	l69
   847  077C                     u190:	
   848  077C                     l878:	
   849                           
   850                           ;newmain.c: 75:   Lcd_Cmd(0x06);;newmain.c: 76: }
   851  077C  0874               	movf	Lcd_Set_Cursor@b,w
   852  077D  3EBF               	addlw	191
   853  077E  00F5               	movwf	??_Lcd_Set_Cursor
   854  077F  0875               	movf	??_Lcd_Set_Cursor,w
   855  0780  00FA               	movwf	Lcd_Set_Cursor@temp
   856                           
   857                           ;newmain.c: 77: 
   858  0781  087A               	movf	Lcd_Set_Cursor@temp,w
   859  0782  00F5               	movwf	??_Lcd_Set_Cursor
   860  0783  3004               	movlw	4
   861  0784                     u205:	
   862  0784  1003               	clrc
   863  0785  0CF5               	rrf	??_Lcd_Set_Cursor,f
   864  0786  3EFF               	addlw	-1
   865  0787  1D03               	skipz
   866  0788  2F84               	goto	u205
   867  0789  0875               	movf	??_Lcd_Set_Cursor,w
   868  078A  00F6               	movwf	??_Lcd_Set_Cursor+1
   869  078B  0876               	movf	??_Lcd_Set_Cursor+1,w
   870  078C  00F8               	movwf	Lcd_Set_Cursor@z
   871  078D                     l880:	
   872                           
   873                           ;newmain.c: 78: void Lcd_Print_Char(char data)
   874  078D  087A               	movf	Lcd_Set_Cursor@temp,w
   875  078E  390F               	andlw	15
   876  078F  00F5               	movwf	??_Lcd_Set_Cursor
   877  0790  0875               	movf	??_Lcd_Set_Cursor,w
   878  0791  00F9               	movwf	Lcd_Set_Cursor@y
   879  0792                     l882:	
   880                           
   881                           ;newmain.c: 79: {
   882  0792  0878               	movf	Lcd_Set_Cursor@z,w
   883  0793  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   884  0798                     l884:	
   885                           
   886                           ;newmain.c: 80:    char Lower_Nibble,Upper_Nibble;
   887  0798  0879               	movf	Lcd_Set_Cursor@y,w
   888  0799  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
   889  079E                     l69:	
   890  079E  0008               	return
   891  079F                     __end_of_Lcd_Set_Cursor:	
   892                           
   893                           	psect	text5
   894  0693                     __ptext5:	
   895 ;; *************** function _Lcd_Print_String *****************
   896 ;; Defined at:
   897 ;;		line 118 in file "newmain.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  a               1    wreg     PTR unsigned char 
   900 ;;		 -> STR_2(17), STR_1(15), 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  a               1   11[COMMON] PTR unsigned char 
   903 ;;		 -> STR_2(17), STR_1(15), 
   904 ;;  i               2    9[COMMON] int 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       0       0       0       0
   915 ;;      Locals:         3       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0
   917 ;;      Totals:         3       0       0       0       0
   918 ;;Total ram usage:        3 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    2
   921 ;; This function calls:
   922 ;;		_Lcd_Print_Char
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           
   929                           ;psect for function _Lcd_Print_String
   930  0693                     _Lcd_Print_String:	
   931                           
   932                           ;incstack = 0
   933                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   934                           ;Lcd_Print_String@a stored from wreg
   935  0693  00FB               	movwf	Lcd_Print_String@a
   936  0694                     l886:	
   937                           
   938                           ;newmain.c: 118: ;newmain.c: 119:     TXEN = 1;;newmain.c: 120:     CREN = 1;;newmain.c:
      +                           121: 
   939  0694  01F9               	clrf	Lcd_Print_String@i
   940  0695  01FA               	clrf	Lcd_Print_String@i+1
   941  0696  2EAA               	goto	l892
   942  0697                     l888:	
   943                           
   944                           ;newmain.c: 122: 
   945  0697  0879               	movf	Lcd_Print_String@i,w
   946  0698  077B               	addwf	Lcd_Print_String@a,w
   947  0699  0084               	movwf	4
   948  069A  120A  118A  2003  120A  118A  	fcall	stringdir
   949  069F  120A  118A  279F  120A  118A  	fcall	_Lcd_Print_Char
   950  06A4                     l890:	
   951  06A4  3001               	movlw	1
   952  06A5  07F9               	addwf	Lcd_Print_String@i,f
   953  06A6  1803               	skipnc
   954  06A7  0AFA               	incf	Lcd_Print_String@i+1,f
   955  06A8  3000               	movlw	0
   956  06A9  07FA               	addwf	Lcd_Print_String@i+1,f
   957  06AA                     l892:	
   958  06AA  0879               	movf	Lcd_Print_String@i,w
   959  06AB  077B               	addwf	Lcd_Print_String@a,w
   960  06AC  0084               	movwf	4
   961  06AD  120A  118A  2003  120A  118A  	fcall	stringdir
   962  06B2  3A00               	xorlw	0
   963  06B3  1D03               	skipz
   964  06B4  2EB6               	goto	u211
   965  06B5  2EB7               	goto	u210
   966  06B6                     u211:	
   967  06B6  2E97               	goto	l888
   968  06B7                     u210:	
   969  06B7                     l87:	
   970  06B7  0008               	return
   971  06B8                     __end_of_Lcd_Print_String:	
   972                           
   973                           	psect	text6
   974  079F                     __ptext6:	
   975 ;; *************** function _Lcd_Print_Char *****************
   976 ;; Defined at:
   977 ;;		line 102 in file "newmain.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  data            1    wreg     unsigned char 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  data            1    8[COMMON] unsigned char 
   982 ;;  i               2    6[COMMON] int 
   983 ;;  i               2    4[COMMON] int 
   984 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
   985 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         7       0       0       0       0
   997 ;;      Temps:          1       0       0       0       0
   998 ;;      Totals:         8       0       0       0       0
   999 ;;Total ram usage:        8 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    1
  1002 ;; This function calls:
  1003 ;;		_Lcd_SetBit
  1004 ;; This function is called by:
  1005 ;;		_Lcd_Print_String
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           
  1010                           ;psect for function _Lcd_Print_Char
  1011  079F                     _Lcd_Print_Char:	
  1012                           
  1013                           ;incstack = 0
  1014                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1015                           ;Lcd_Print_Char@data stored from wreg
  1016  079F  00F8               	movwf	Lcd_Print_Char@data
  1017  07A0                     l726:	
  1018                           
  1019                           ;newmain.c: 102: {;newmain.c: 103: ;newmain.c: 104:     TRISC6 = 0;;newmain.c: 105:     
      +                          TRISC7 = 1;
  1020  07A0  0878               	movf	Lcd_Print_Char@data,w
  1021  07A1  390F               	andlw	15
  1022  07A2  00F1               	movwf	??_Lcd_Print_Char
  1023  07A3  0871               	movf	??_Lcd_Print_Char,w
  1024  07A4  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  1025                           
  1026                           ;newmain.c: 106: 
  1027  07A5  0878               	movf	Lcd_Print_Char@data,w
  1028  07A6  39F0               	andlw	240
  1029  07A7  00F1               	movwf	??_Lcd_Print_Char
  1030  07A8  0871               	movf	??_Lcd_Print_Char,w
  1031  07A9  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  1032  07AA                     l728:	
  1033                           
  1034                           ;newmain.c: 107: 
  1035  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1036  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1037  07AC  1508               	bsf	8,2	;volatile
  1038  07AD                     l730:	
  1039                           
  1040                           ;newmain.c: 108: 
  1041  07AD  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  1042  07AE  00F1               	movwf	??_Lcd_Print_Char
  1043  07AF  3004               	movlw	4
  1044  07B0                     u55:	
  1045  07B0  1003               	clrc
  1046  07B1  0CF1               	rrf	??_Lcd_Print_Char,f
  1047  07B2  3EFF               	addlw	-1
  1048  07B3  1D03               	skipz
  1049  07B4  2FB0               	goto	u55
  1050  07B5  0871               	movf	??_Lcd_Print_Char,w
  1051  07B6  120A  118A  2671  120A  118A  	fcall	_Lcd_SetBit
  1052  07BB                     l732:	
  1053                           
  1054                           ;newmain.c: 109: 
  1055  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1056  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1057  07BD  1588               	bsf	8,3	;volatile
  1058  07BE                     l734:	
  1059                           
  1060                           ;newmain.c: 110:     SPBRG = ((20000000/16)/9600) - 1;
  1061  07BE  3033               	movlw	51
  1062  07BF  00F4               	movwf	Lcd_Print_Char@i
  1063  07C0  3082               	movlw	130
  1064  07C1  00F5               	movwf	Lcd_Print_Char@i+1
  1065  07C2                     l77:	
  1066                           
  1067                           ;newmain.c: 111:     BRGH = 1;
  1068  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1069  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1070  07C4  1188               	bcf	8,3	;volatile
  1071  07C5                     l740:	
  1072  07C5  30FF               	movlw	255
  1073  07C6  07F4               	addwf	Lcd_Print_Char@i,f
  1074  07C7  1803               	skipnc
  1075  07C8  0AF5               	incf	Lcd_Print_Char@i+1,f
  1076  07C9  30FF               	movlw	255
  1077  07CA  07F5               	addwf	Lcd_Print_Char@i+1,f
  1078  07CB                     l742:	
  1079  07CB  0875               	movf	Lcd_Print_Char@i+1,w
  1080  07CC  3A80               	xorlw	128
  1081  07CD  00FF               	movwf	btemp+1
  1082  07CE  3080               	movlw	128
  1083  07CF  027F               	subwf	btemp+1,w
  1084  07D0  1D03               	skipz
  1085  07D1  2FD4               	goto	u65
  1086  07D2  3001               	movlw	1
  1087  07D3  0274               	subwf	Lcd_Print_Char@i,w
  1088  07D4                     u65:	
  1089  07D4  1C03               	skipc
  1090  07D5  2FD7               	goto	u61
  1091  07D6  2FD8               	goto	u60
  1092  07D7                     u61:	
  1093  07D7  2FC2               	goto	l77
  1094  07D8                     u60:	
  1095  07D8                     l744:	
  1096                           
  1097                           ;newmain.c: 112: 
  1098  07D8  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  1099  07D9  120A  118A  2671  120A  118A  	fcall	_Lcd_SetBit
  1100  07DE                     l746:	
  1101                           
  1102                           ;newmain.c: 113: 
  1103  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1104  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1105  07E0  1588               	bsf	8,3	;volatile
  1106  07E1                     l748:	
  1107                           
  1108                           ;newmain.c: 114: 
  1109  07E1  3033               	movlw	51
  1110  07E2  00F6               	movwf	Lcd_Print_Char@i_70
  1111  07E3  3082               	movlw	130
  1112  07E4  00F7               	movwf	Lcd_Print_Char@i_70+1
  1113  07E5                     l79:	
  1114                           
  1115                           ;newmain.c: 115:     SYNC = 0;
  1116  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1117  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1118  07E7  1188               	bcf	8,3	;volatile
  1119  07E8                     l754:	
  1120  07E8  30FF               	movlw	255
  1121  07E9  07F6               	addwf	Lcd_Print_Char@i_70,f
  1122  07EA  1803               	skipnc
  1123  07EB  0AF7               	incf	Lcd_Print_Char@i_70+1,f
  1124  07EC  30FF               	movlw	255
  1125  07ED  07F7               	addwf	Lcd_Print_Char@i_70+1,f
  1126  07EE                     l756:	
  1127  07EE  0877               	movf	Lcd_Print_Char@i_70+1,w
  1128  07EF  3A80               	xorlw	128
  1129  07F0  00FF               	movwf	btemp+1
  1130  07F1  3080               	movlw	128
  1131  07F2  027F               	subwf	btemp+1,w
  1132  07F3  1D03               	skipz
  1133  07F4  2FF7               	goto	u75
  1134  07F5  3001               	movlw	1
  1135  07F6  0276               	subwf	Lcd_Print_Char@i_70,w
  1136  07F7                     u75:	
  1137  07F7  1C03               	skipc
  1138  07F8  2FFA               	goto	u71
  1139  07F9  2FFB               	goto	u70
  1140  07FA                     u71:	
  1141  07FA  2FE5               	goto	l79
  1142  07FB                     u70:	
  1143  07FB                     l81:	
  1144  07FB  0008               	return
  1145  07FC                     __end_of_Lcd_Print_Char:	
  1146                           
  1147                           	psect	text7
  1148  0613                     __ptext7:	
  1149 ;; *************** function _Lcd_Clear *****************
  1150 ;; Defined at:
  1151 ;;		line 57 in file "newmain.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0
  1168 ;;      Totals:         0       0       0       0       0
  1169 ;;Total ram usage:        0 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    2
  1172 ;; This function calls:
  1173 ;;		_Lcd_Cmd
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _Lcd_Clear
  1181  0613                     _Lcd_Clear:	
  1182  0613                     l762:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1185                           
  1186                           
  1187                           ;newmain.c: 59: 
  1188  0613  3000               	movlw	0
  1189  0614  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
  1190                           
  1191                           ;newmain.c: 60: void Lcd_Start()
  1192  0619  3001               	movlw	1
  1193  061A  120A  118A  2638  120A  118A  	fcall	_Lcd_Cmd
  1194  061F                     l63:	
  1195  061F  0008               	return
  1196  0620                     __end_of_Lcd_Clear:	
  1197                           
  1198                           	psect	text8
  1199  0638                     __ptext8:	
  1200 ;; *************** function _Lcd_Cmd *****************
  1201 ;; Defined at:
  1202 ;;		line 48 in file "newmain.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  a               1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  a               1    3[COMMON] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         1       0       0       0       0
  1218 ;;      Temps:          2       0       0       0       0
  1219 ;;      Totals:         3       0       0       0       0
  1220 ;;Total ram usage:        3 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    1
  1223 ;; This function calls:
  1224 ;;		_Lcd_SetBit
  1225 ;; This function is called by:
  1226 ;;		_Lcd_Clear
  1227 ;;		_Lcd_Set_Cursor
  1228 ;;		_Lcd_Start
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _Lcd_Cmd
  1234  0638                     _Lcd_Cmd:	
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1238                           ;Lcd_Cmd@a stored from wreg
  1239  0638  00F3               	movwf	Lcd_Cmd@a
  1240  0639                     l716:	
  1241                           
  1242                           ;newmain.c: 48:         Lcd_Cmd(y);;newmain.c: 49:     };newmain.c: 50:     else if(a== 
      +                          2)
  1243  0639  1283               	bcf	3,5	;RP0=0, select bank0
  1244  063A  1303               	bcf	3,6	;RP1=0, select bank0
  1245  063B  1108               	bcf	8,2	;volatile
  1246  063C                     l718:	
  1247                           
  1248                           ;newmain.c: 51:     {
  1249  063C  0873               	movf	Lcd_Cmd@a,w
  1250  063D  120A  118A  2671  120A  118A  	fcall	_Lcd_SetBit
  1251  0642                     l720:	
  1252                           
  1253                           ;newmain.c: 52:         temp = 0xC0 + b - 1;
  1254  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0644  1588               	bsf	8,3	;volatile
  1257  0645                     l722:	
  1258                           
  1259                           ;newmain.c: 53:         z = temp>>4;
  1260  0645  301A               	movlw	26
  1261  0646  00F2               	movwf	??_Lcd_Cmd+1
  1262  0647  30F8               	movlw	248
  1263  0648  00F1               	movwf	??_Lcd_Cmd
  1264  0649                     u267:	
  1265  0649  0BF1               	decfsz	??_Lcd_Cmd,f
  1266  064A  2E49               	goto	u267
  1267  064B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1268  064C  2E49               	goto	u267
  1269  064D  0000               	nop
  1270  064E                     l724:	
  1271                           
  1272                           ;newmain.c: 54:         y = temp & 0x0F;
  1273  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1274  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0650  1188               	bcf	8,3	;volatile
  1276  0651                     l60:	
  1277  0651  0008               	return
  1278  0652                     __end_of_Lcd_Cmd:	
  1279                           
  1280                           	psect	text9
  1281  0671                     __ptext9:	
  1282 ;; *************** function _Lcd_SetBit *****************
  1283 ;; Defined at:
  1284 ;;		line 25 in file "newmain.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  data_bit        1    wreg     unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  data_bit        1    0[COMMON] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         1       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0
  1301 ;;      Totals:         1       0       0       0       0
  1302 ;;Total ram usage:        1 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_Lcd_Cmd
  1308 ;;		_Lcd_Start
  1309 ;;		_Lcd_Print_Char
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _Lcd_SetBit
  1315  0671                     _Lcd_SetBit:	
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _Lcd_SetBit: [wreg]
  1319                           ;Lcd_SetBit@data_bit stored from wreg
  1320  0671  00F0               	movwf	Lcd_SetBit@data_bit
  1321  0672                     l706:	
  1322                           
  1323                           ;newmain.c: 25: {;newmain.c: 26:     RD2 = 0;;newmain.c: 27:     Lcd_SetBit(a);
  1324  0672  1C70               	btfss	Lcd_SetBit@data_bit,0
  1325  0673  2E75               	goto	u11
  1326  0674  2E76               	goto	u10
  1327  0675                     u11:	
  1328  0675  2E7A               	goto	l49
  1329  0676                     u10:	
  1330  0676                     l708:	
  1331                           
  1332                           ;newmain.c: 28:     RD3 = 1;
  1333  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1334  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1335  0678  1608               	bsf	8,4	;volatile
  1336  0679  2E7D               	goto	l50
  1337  067A                     l49:	
  1338                           ;newmain.c: 29:         _delay((unsigned long)((4)*(20000000/4000.0)));
  1339                           
  1340                           
  1341                           ;newmain.c: 30:         RD3 = 0;
  1342  067A  1283               	bcf	3,5	;RP0=0, select bank0
  1343  067B  1303               	bcf	3,6	;RP1=0, select bank0
  1344  067C  1208               	bcf	8,4	;volatile
  1345  067D                     l50:	
  1346                           
  1347                           ;newmain.c: 32: 
  1348  067D  1CF0               	btfss	Lcd_SetBit@data_bit,1
  1349  067E  2E80               	goto	u21
  1350  067F  2E81               	goto	u20
  1351  0680                     u21:	
  1352  0680  2E83               	goto	l51
  1353  0681                     u20:	
  1354  0681                     l710:	
  1355                           
  1356                           ;newmain.c: 33: void Lcd_Clear()
  1357  0681  1688               	bsf	8,5	;volatile
  1358  0682  2E84               	goto	l52
  1359  0683                     l51:	
  1360                           ;newmain.c: 34: {
  1361                           
  1362                           
  1363                           ;newmain.c: 35:     Lcd_Cmd(0);
  1364  0683  1288               	bcf	8,5	;volatile
  1365  0684                     l52:	
  1366                           
  1367                           ;newmain.c: 37: }
  1368  0684  1D70               	btfss	Lcd_SetBit@data_bit,2
  1369  0685  2E87               	goto	u31
  1370  0686  2E88               	goto	u30
  1371  0687                     u31:	
  1372  0687  2E8A               	goto	l53
  1373  0688                     u30:	
  1374  0688                     l712:	
  1375                           
  1376                           ;newmain.c: 38: 
  1377  0688  1708               	bsf	8,6	;volatile
  1378  0689  2E8B               	goto	l54
  1379  068A                     l53:	
  1380                           ;newmain.c: 39: void Lcd_Set_Cursor(char a, char b)
  1381                           
  1382                           
  1383                           ;newmain.c: 40: {
  1384  068A  1308               	bcf	8,6	;volatile
  1385  068B                     l54:	
  1386                           
  1387                           ;newmain.c: 42:     if(a== 1)
  1388  068B  1DF0               	btfss	Lcd_SetBit@data_bit,3
  1389  068C  2E8E               	goto	u41
  1390  068D  2E8F               	goto	u40
  1391  068E                     u41:	
  1392  068E  2E91               	goto	l55
  1393  068F                     u40:	
  1394  068F                     l714:	
  1395                           
  1396                           ;newmain.c: 43:     {
  1397  068F  1788               	bsf	8,7	;volatile
  1398  0690  2E92               	goto	l57
  1399  0691                     l55:	
  1400                           ;newmain.c: 44:       temp = 0x80 + b - 1;
  1401                           
  1402                           
  1403                           ;newmain.c: 45:         z = temp>>4;
  1404  0691  1388               	bcf	8,7	;volatile
  1405  0692                     l57:	
  1406  0692  0008               	return
  1407  0693                     __end_of_Lcd_SetBit:	
  1408                           
  1409                           	psect	text10
  1410  0620                     __ptext10:	
  1411 ;; *************** function _Initialize_ESP8266 *****************
  1412 ;; Defined at:
  1413 ;;		line 125 in file "newmain.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _Initialize_ESP8266
  1442  0620                     _Initialize_ESP8266:	
  1443  0620                     l812:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _Initialize_ESP8266: [wreg]
  1446                           
  1447                           
  1448                           ;newmain.c: 128: 
  1449  0620  1683               	bsf	3,5	;RP0=1, select bank1
  1450  0621  1303               	bcf	3,6	;RP1=0, select bank1
  1451  0622  1307               	bcf	7,6	;volatile
  1452                           
  1453                           ;newmain.c: 129: void UART_send_char(char bt)
  1454  0623  1787               	bsf	7,7	;volatile
  1455  0624                     l814:	
  1456                           
  1457                           ;newmain.c: 134: 
  1458  0624  3081               	movlw	129
  1459  0625  0099               	movwf	25	;volatile
  1460  0626                     l816:	
  1461                           
  1462                           ;newmain.c: 135: 
  1463  0626  1518               	bsf	24,2	;volatile
  1464  0627                     l818:	
  1465                           
  1466                           ;newmain.c: 139:         UART_send_char(*st_pt++);
  1467  0627  1218               	bcf	24,4	;volatile
  1468  0628                     l820:	
  1469                           
  1470                           ;newmain.c: 140: }
  1471  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1473  062A  1798               	bsf	24,7	;volatile
  1474  062B                     l822:	
  1475                           
  1476                           ;newmain.c: 143: char UART_get_char()
  1477  062B  1683               	bsf	3,5	;RP0=1, select bank1
  1478  062C  1303               	bcf	3,6	;RP1=0, select bank1
  1479  062D  1698               	bsf	24,5	;volatile
  1480  062E                     l824:	
  1481                           
  1482                           ;newmain.c: 144: {
  1483  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1484  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0630  1618               	bsf	24,4	;volatile
  1486  0631                     l826:	
  1487                           
  1488                           ;newmain.c: 148:         CREN = 1;
  1489  0631  1683               	bsf	3,5	;RP0=1, select bank1
  1490  0632  1303               	bcf	3,6	;RP1=0, select bank1
  1491  0633  1318               	bcf	24,6	;volatile
  1492  0634                     l828:	
  1493                           
  1494                           ;newmain.c: 149:     }
  1495  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1497  0636  1318               	bcf	24,6	;volatile
  1498  0637                     l90:	
  1499  0637  0008               	return
  1500  0638                     __end_of_Initialize_ESP8266:	
  1501  007E                     btemp	set	126	;btemp
  1502  007E                     wtemp0	set	126


Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), 

    Lcd_Print_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Print_String
    _UART_send_string->_UART_send_char
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1166
                                              0 BANK0      3     3      0
                 _Initialize_ESP8266
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     2     2      0      93
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            6     6      0     165
                                              4 COMMON     6     6      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     497
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     3     3      0     336
                                              9 COMMON     3     3      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     180
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_ESP8266                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_ESP8266
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   _UART_send_string
     _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Mar 07 14:57:17 2020

                          pc 0002                  __CFG_CP$OFF 0000                           l50 067D  
                         l51 0683                           l52 0684                           l60 0651  
                         l53 068A                           l54 068B                           l55 0691  
                         l63 061F                           l57 0692                           l49 067A  
                         l81 07FB                           l90 0637                           l74 074C  
                         l77 07C2                           l69 079E                           l93 060A  
                         l79 07E5                           l87 06B7                           l96 0612  
                         u10 0676                           u11 0675                           u20 0681  
                         u21 0680                           u30 0688                           u31 0687  
                         u40 068F                           u41 068E                           u60 07D8  
                         u61 07D7                           u70 07FB                           u71 07FA  
                         u55 07B0                           u80 0610                           u65 07D4  
                         u81 060F                           u75 07F7                           fsr 0004  
                        l102 0670                          l114 06FB                          l710 0681  
                        l712 0688                          l720 0642                          l800 070D  
                        l714 068F                          l706 0672                          l722 0645  
                        l730 07AD                          l802 0713                          l820 0628  
                        l812 0620                          l708 0676                          l724 064E  
                        l716 0639                          l740 07C5                          l732 07BB  
                        l900 0664                          l822 062B                          l814 0624  
                        l718 063C                          l742 07CB                          l734 07BE  
                        l726 07A0                          l910 06CD                          l902 06B8  
                        l824 062E                          l816 0626                          l744 07D8  
                        l728 07AA                          l760 0610                          l920 06F5  
                        l912 06D3                          l904 06BB                          l826 0631  
                        l818 0627                          l762 0613                          l754 07E8  
                        l746 07DE                          l914 06DB                          l906 06C0  
                        l828 0634                          l756 07EE                          l748 07E1  
                        l916 06E1                          l908 06C5                          l870 0764  
                        l758 060A                          l918 06F0                          l880 078D  
                        l872 0769                          l784 06FE                          l890 06A4  
                        l882 0792                          l874 076F                          l866 074E  
                        l786 0704                          l892 06AA                          l884 0798  
                        l868 0753                          l876 0776                          l788 0704  
                        l886 0694                          l878 077C                          l798 0704  
                        l894 0653                          l888 0697                          l896 0654  
                        l898 0660                          _RD2 0042                          _RD3 0043  
                        _RD4 0044                          _RD5 0045                          _RD6 0046  
                        _RD7 0047                          u210 06B7                          u211 06B6  
                        u220 0670                          u205 0784                          u221 066F  
                        u170 0753                          u171 0752                          u237 06E9  
                        u190 077C                          u191 077B                          u247 0708  
                        u185 075B                          u257 0717                 __CFG_CPD$OFF 0000  
                        u267 0649                          _RX9 00C6                          _TX9 04C6  
                        fsr0 0004                 __CFG_FOSC$HS 0000                 __CFG_LVP$OFF 0000  
                       STR_1 001A                         STR_2 0009                         STR_3 0029  
                       _BRGH 04C2                         _CREN 00C4                         _RCIF 0065  
                       _OERR 00C1                         _SPEN 00C7                         _TXEN 04C5  
                       _TXIF 0064                         _SYNC 04C4                 __CFG_WRT$OFF 0000  
                       _main 06B8                         btemp 007E   __end_of_Initialize_ESP8266 0638  
              __CFG_BOREN$ON 0000                         start 0000           Lcd_Print_Char@i_70 0076  
         Lcd_Print_Char@data 0078              __end_of_Lcd_Cmd 0652    __size_of_UART_send_string 001F  
                 _Lcd_SetBit 0671                        ?_main 0070                __CFG_WDTE$OFF 0000  
                      _RCREG 001A                        _SPBRG 0099      __size_of_Lcd_Set_Cursor 0052  
                      _TRISD 0088                        _TXREG 0019                        pclath 000A  
  __size_of_Lcd_Print_String 0025                        status 0003                        wtemp0 007E  
    __size_of_Lcd_Print_Char 005D              __initialization 07FC                 __end_of_main 06FE  
                     ??_main 0020           __size_of_Lcd_Clear 000D           __size_of_Lcd_Start 004F  
                  ??_Lcd_Cmd 0071                       _TRISC6 043E                       _TRISC7 043F  
             __CFG_PWRTE$OFF 0000                  ?_Lcd_SetBit 0070              Lcd_Set_Cursor@a 0077  
            Lcd_Set_Cursor@b 0074              Lcd_Set_Cursor@y 0079              Lcd_Set_Cursor@z 0078  
    __end_of__initialization 07FC            __end_of_Lcd_Clear 0620            __end_of_Lcd_Start 074D  
             __pcstackCOMMON 0070             _UART_send_string 0652               _Lcd_Set_Cursor 074D  
           _Lcd_Print_String 0693          __size_of_Lcd_SetBit 0022               _Lcd_Print_Char 079F  
                 __pmaintext 06B8           Lcd_SetBit@data_bit 0070           _Initialize_ESP8266 0620  
     __end_of_Lcd_Set_Cursor 079F          ?_Initialize_ESP8266 0070      __size_of_UART_send_char 000A  
                 __stringtab 0003              Lcd_Print_Char@i 0074                      _Lcd_Cmd 0638  
     __end_of_Lcd_Print_Char 07FC         ??_Initialize_ESP8266 0070              ?_Lcd_Set_Cursor 0074  
                    __ptext1 0652                      __ptext2 0609                      __ptext3 06FE  
                    __ptext4 074D                      __ptext5 0693                      __ptext6 079F  
                    __ptext7 0613                      __ptext8 0638                      __ptext9 0671  
       end_of_initialization 07FC              ?_Lcd_Print_Char 0070                 ??_Lcd_SetBit 0070  
   __end_of_UART_send_string 0671           __end_of_Lcd_SetBit 0693                    _Lcd_Clear 0613  
                  _Lcd_Start 06FE     __end_of_Lcd_Print_String 06B8          start_initialization 07FC  
             _UART_send_char 0609            Lcd_Print_String@a 007B            Lcd_Print_String@i 0079  
                 ?_Lcd_Clear 0070                   ?_Lcd_Start 0070   Lcd_Print_Char@Lower_Nibble 0072  
     __end_of_UART_send_char 0613                    ___latbits 0002                __pcstackBANK0 0020  
                   ?_Lcd_Cmd 0070             ??_Lcd_Set_Cursor 0075             UART_send_char@bt 0070  
                  __pstrings 0003              ?_UART_send_char 0070             ??_Lcd_Print_Char 0071  
                   Lcd_Cmd@a 0073  __size_of_Initialize_ESP8266 0018                  ??_Lcd_Clear 0074  
                ??_Lcd_Start 0074                  __stringbase 0008        UART_send_string@st_pt 0072  
          ?_UART_send_string 0070           ??_UART_send_string 0071             __size_of_Lcd_Cmd 001A  
         __end_of__stringtab 0009            ?_Lcd_Print_String 0070           ??_Lcd_Print_String 0079  
                   __ptext10 0620                __size_of_main 0046   Lcd_Print_Char@Upper_Nibble 0073  
                  stringcode 0003             ??_UART_send_char 0070           Lcd_Set_Cursor@temp 007A  
                   stringdir 0003                     stringtab 0003  
